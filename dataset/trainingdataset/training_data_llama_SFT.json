[{"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the license of genes involved in both a 'REGULATES_GrG' and a 'PARTICIPATES_GpCC' relationship?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:PARTICIPATES_GpCC]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of diseases linked with \"RESEMBLES_DrD\" and \"UPREGULATES_DuG\" relationships?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m1), (n)-[r2:UPREGULATES_DuG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene descriptions are associated with both a 'REGULATES_GrG' relationship and a 'PARTICIPATES_GpCC' relationship?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:PARTICIPATES_GpCC]->(m2) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the descriptions of the genes linked by both 'REGULATES_GrG' and 'PARTICIPATES_GpPW' relationships?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From which chromosomes are the genes that engage in both 'PARTICIPATES_GpMF' and 'PARTICIPATES_GpCC' relationships derived?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m1), (n)-[r2:PARTICIPATES_GpCC]->(m2) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are connected through both an ASSOCIATES_DaG and PRESENTS_DpS relationship?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m1), (n)-[r2:PRESENTS_DpS]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the license information of genes that are involved in the 'COVARIES_GcG' and 'PARTICIPATES_GpCC' relationships?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:PARTICIPATES_GpCC]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of the genes that are connected by \"REGULATES_GrG\" and \"PARTICIPATES_GpPW\" relationships?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What inchikeys belong to compounds that are connected via 'RESEMBLES_CrC' and 'PALLIATES_CpD' relationships?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses of compounds that are connected by both a \"BINDS_CbG\" relationship and a \"CAUSES_CcSE\" relationship?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m1), (n)-[r2:CAUSES_CcSE]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names of compounds have both \"RESEMBLES_CrC\" and \"PALLIATES_CpD\" relationships in the graph?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifiers of genes that simultaneously have a \"PARTICIPATES_GpMF\" relationship and a \"COVARIES_GcG\" relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m1), (n)-[r2:COVARIES_GcG]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the licenses of compounds connected by \"RESEMBLES_CrC\" and \"PALLIATES_CpD\" relationships to two distinct nodes.", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the descriptions of genes that have roles in both \"PARTICIPATES_GpMF\" and \"PARTICIPATES_GpBP\" relationships?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m1), (n)-[r2:PARTICIPATES_GpBP]->(m2) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the URL of compounds that simultaneously have 'BINDS_CbG' and 'RESEMBLES_CrC' relationships with other nodes?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m1), (n)-[r2:RESEMBLES_CrC]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene URLs are associated with nodes that have both \"REGULATES_GrG\" and \"INTERACTS_GiG\" relationships?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the licenses for genes that are involved in both \"PARTICIPATES_GpMF\" and \"PARTICIPATES_GpCC\" relationships?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m1), (n)-[r2:PARTICIPATES_GpCC]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes that have both the 'COVARIES_GcG' relationship and the 'PARTICIPATES_GpPW' relationship with other nodes?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the InChI identifiers of compounds that simultaneously have 'UPREGULATES_CuG' and 'CAUSES_CcSE' relationships?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:CAUSES_CcSE]->(m2) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that both covary and participate in multiple relationships according to the COVARIES_GcG and PARTICIPATES_GpPW connections?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have URLs and are related to nodes through both 'CAUSES_CcSE' and 'RESEMBLES_CrC' relationships?", "output": "MATCH (n:Compound)-[r1:CAUSES_CcSE]->(m1), (n)-[r2:RESEMBLES_CrC]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the license status of compounds that are connected through the BINDS_CbG and RESEMBLES_CrC relationships?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m1), (n)-[r2:RESEMBLES_CrC]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I want to know the names of compounds that form 'BINDS_CbG' and 'RESEMBLES_CrC' relationships with different nodes; what are these names?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m1), (n)-[r2:RESEMBLES_CrC]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers for diseases connected by 'LOCALIZES_DlA' and 'PRESENTS_DpS' relationships to other nodes?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m1), (n)-[r2:PRESENTS_DpS]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the unique identifiers of diseases that have a LOCALIZES_DlA connection to one node and a RESEMBLES_DrD connection to another?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m1), (n)-[r2:RESEMBLES_DrD]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have relationships indicating they downregulate CdG and also cause CcSE, and what are their identifiers?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m1), (n)-[r2:CAUSES_CcSE]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of compounds linked through 'UPREGULATES_CuG' and 'BINDS_CbG' relationships with two separate targets?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:BINDS_CbG]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you tell me which sources are responsible for compounds that both upregulate CuG and have a causal relationship with CcSE?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:CAUSES_CcSE]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the InChIKeys of the compounds that have relationships to nodes through \"UPREGULATES_CuG\" and \"BINDS_CbG\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:BINDS_CbG]->(m2) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of compounds that are bound to one entity by a BINDS_CbG relationship and resemble another entity through a RESEMBLES_CrC relationship?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m1), (n)-[r2:RESEMBLES_CrC]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that both downregulate CdG and treat CtD in the database?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m1), (n)-[r2:TREATS_CtD]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compounds that have connections to both a CbG and a CpD through the roles of binding and palliating, respectively.", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene URLs are linked through both \"COVARIES_GcG\" and \"INTERACTS_GiG\" relationships to other nodes in the graph?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the InChI codes of compounds that have both an \"UPREGULATES_CuG\" relationship with one entity and a \"RESEMBLES_CrC\" relationship with another entity.", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:RESEMBLES_CrC]->(m2) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are connected to other nodes by both a 'DOWNREGULATES_CdG' and a 'BINDS_CbG' relationship, and what are their identifiers?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m1), (n)-[r2:BINDS_CbG]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What URLs correspond to genes that are found participating simultaneously in GpMF and GpBP activities?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m1), (n)-[r2:PARTICIPATES_GpBP]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are involved in both GpPW and GpCC activities, and what are their names?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m1), (n)-[r2:PARTICIPATES_GpCC]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the InChIKeys for compounds involved in downregulating CdG while also having a relationship with treating CtD?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m1), (n)-[r2:TREATS_CtD]->(m2) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the source attribute of diseases that have both 'resembles' and 'downregulates' relationships?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the BTO (BRENDA Tissue Ontology) IDs of anatomical entities that both express AeG and upregulate AuG in the dataset?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m1), (n)-[r2:UPREGULATES_AuG]->(m2) RETURN n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses pertain to diseases that have relationships indicating they both resemble and upregulate something else?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m1), (n)-[r2:UPREGULATES_DuG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What sources are linked to anatomy nodes that exert influence through both downregulation and upregulation paths represented by \"DOWNREGULATES_AdG\" and \"UPREGULATES_AuG\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m1), (n)-[r2:UPREGULATES_AuG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL for diseases that are associated with one entity and simultaneously downregulate another entity?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases that both resemble a certain entity and have a downregulation effect on another entity?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source of diseases that have relationships downregulating one node and upregulating another?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m1), (n)-[r2:UPREGULATES_DuG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the InChI keys of compounds that both upregulate a certain entity with CuG relationships and treat a different entity with CtD relationships?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:TREATS_CtD]->(m2) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the URL of compounds that have relationships of upregulating one entity and palliating another?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses are associated with diseases that simultaneously localize to one entity and downregulate a different entity in this database?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of each compound that both resembles another chemical compound and palliates a certain disease?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for diseases that have both a resemblance relationship and an upregulation relationship in the database?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m1), (n)-[r2:UPREGULATES_DuG]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the license data for genes that participate in both regulation and interaction with other elements?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have a license, that have connections indicating both covariance with one entity and regulation of another?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:REGULATES_GrG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the URLs of genes that engage in relationships with both biological processes and pathways?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of diseases that have relationships involving localization and downregulation with separate entities?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I find the URLs for genes that are simultaneously participating in certain molecular functions and pathways?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the URLs of anatomical entities that both express a gene and downregulate a different gene?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m1), (n)-[r2:DOWNREGULATES_AdG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the mesh IDs for anatomical parts that have relationships indicating they downregulate one category and upregulate another category of entities?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m1), (n)-[r2:UPREGULATES_AuG]->(m2) RETURN n.mesh_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses are associated with compounds that participate in both binding and palliating relationships?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have both localization and gene downregulation relationships, and what are their corresponding URLs?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of diseases that have relationships indicating they present symptoms and resemble another disease?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m1), (n)-[r2:RESEMBLES_DrD]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the descriptions of genes that are involved in both covaries and interacts relationships with other entities?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you determine the source of each disease node that has connections representing resemblance and upregulation to other nodes?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m1), (n)-[r2:UPREGULATES_DuG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From which sources do diseases come, if these diseases both associate with one entity and downregulate another?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have links verified by URLs that connect them to both regulatory and participation roles?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes are associated with genes that are involved in a biological process and also regulate another gene?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m1), (n)-[r2:REGULATES_GrG]->(m2) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names appear in connections where they are both related to genetic associations and show similarity to different diseases?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m1), (n)-[r2:RESEMBLES_DrD]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Return the licenses of anatomical entities that have expressions with one gene and downregulation interactions with another gene.", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m1), (n)-[r2:DOWNREGULATES_AdG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease sources are linked to both a localization and an upregulation interaction?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m1), (n)-[r2:UPREGULATES_DuG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL associated with genes that both covary and regulate different nodes in the gene network?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:REGULATES_GrG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the InChI identifiers for compounds that have relationships indicating they can both treat and palliate conditions?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the license information for genes that both participate in some biological or molecular function and regulate another gene?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m1), (n)-[r2:REGULATES_GrG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses belong to compounds that participate in the downregulation of one gene and also bind to a different gene?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m1), (n)-[r2:BINDS_CbG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the licenses of genes that both participate in a biological process and have a regulatory effect on different genes?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m1), (n)-[r2:REGULATES_GrG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene descriptions appear for genes that have both regulation and interaction connections?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source of compounds that both downregulate specific gene products and palliate certain diseases?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene names that are involved in both \"covaries\" and \"interacts\" relationships?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of genes that both participate in biological processes and interact with other genes?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me the URLs of genes that both participate in a biological process and regulate other genes?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m1), (n)-[r2:REGULATES_GrG]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of diseases that have relationships indicating where they localize and which genes they downregulate?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the URLs for diseases that simultaneously have associations with a type of node and present designated symptoms?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m1), (n)-[r2:PRESENTS_DpS]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes host genes that are involved in both regulation and pathway participation?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses do genes have if they are linked by both covariance and participation relationships?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the InChI codes for each compound that has both a \"resembles\" and \"palliates\" relationship?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names appear in the database with connections both locally and genetically to other elements?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m1), (n)-[r2:ASSOCIATES_DaG]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of genes that have both interaction relationships and pathway participation relationships in the database?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m1), (n)-[r2:PARTICIPATES_GpPW]->(m2) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the original data source of compounds that are both involved in treatments and palliation according to the relationships defined in the database?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the InChI identifiers for compounds that have roles in both upregulating one gene and downregulating another?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:DOWNREGULATES_CdG]->(m2) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers relate to compounds that are involved in both treating and palliating diseases?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m1), (n)-[r2:PALLIATES_CpD]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify compounds that are known to cause a condition-related side effect and have a resemblance relationship with another compound. What are their names?", "output": "MATCH (n:Compound)-[r1:CAUSES_CcSE]->(m1), (n)-[r2:RESEMBLES_CrC]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sources are associated with diseases that have links to both symptoms shown and genes downregulated?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m1), (n)-[r2:DOWNREGULATES_DdG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosome contains genes that have both molecular function and biological process participation?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m1), (n)-[r2:PARTICIPATES_GpBP]->(m2) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the source of each gene that has a covariance relationship and an interaction relationship in the database.", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of compounds that have upregulation and binding interactions with different genes?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:BINDS_CbG]->(m2) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses are associated with genes that both participate in biological processes and covary with other elements?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m1), (n)-[r2:COVARIES_GcG]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the InChIKeys of compounds that both downregulate some entities and bind to others?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m1), (n)-[r2:BINDS_CbG]->(m2) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the InChI identifiers for compounds that participate in both upregulating and binding interactions within the graph?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m1), (n)-[r2:BINDS_CbG]->(m2) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source information for diseases that are linked with specific symptoms and display resemblance to other diseases?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m1), (n)-[r2:RESEMBLES_DrD]->(m2) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compounds that are involved in both a binding and a resemblance relationship within the system.", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m1), (n)-[r2:RESEMBLES_CrC]->(m2) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes do genes that participate in a biological process and interact with other genes belong to?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m1), (n)-[r2:INTERACTS_GiG]->(m2) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses are associated with genes that participate both in pathways and cellular components?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m1), (n)-[r2:PARTICIPATES_GpCC]->(m2) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes that have a 'COVARIES_GcG' relationship with a gene having the description \"calcium/calmodulin-dependent protein kinase kinase 1, alpha\" and licensed under \"CC0 1.0.\"", "output": "MATCH (n:Gene { license: \"CC0 1.0\", description: \"calcium/calmodulin-dependent protein kinase kinase 1, alpha\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of genes that interact with the compound characterized by the license \"CC BY-NC 4.0\" and the specific InChIKey \"InChIKey=GJSLOMWRLALDCT-UHFFFAOYSA-N\".", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", inchikey: \"InChIKey=GJSLOMWRLALDCT-UHFFFAOYSA-N\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes that are linked by a \"COVARIES_GcG\" relationship with the specified gene \"cytochrome P450, family 11, subfamily A, polypeptide 1\", according to \"Entrez Gene\".", "output": "MATCH (n:Gene { description: \"cytochrome P450, family 11, subfamily A, polypeptide 1\", source: \"Entrez Gene\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the cellular components linked through the PARTICIPATES_GpCC relationship to the gene with the description \"ATPase, Na+/K+ transporting, alpha 2 polypeptide\" and a CC0 1.0 license.", "output": "MATCH (n:Gene { license: \"CC0 1.0\", description: \"ATPase, Na+/K+ transporting, alpha 2 polypeptide\" })-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of molecular functions connected to the gene node labeled \"Gene\" with the URL \"http://identifiers.org/ncbigene/1592\" and \"CC0 1.0\" license through a PARTICIPATES_GpMF relationship.", "output": "MATCH (n:Gene { license: \"CC0 1.0\", url: \"http://identifiers.org/ncbigene/1592\" })-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list gene names that have a COVARIES_GcG relationship with the gene identified by the description \"solute carrier family 22, member 17\" and the URL \"http://identifiers.org/ncbigene/51310\"?", "output": "MATCH (n:Gene { description: \"solute carrier family 22, member 17\", url: \"http://identifiers.org/ncbigene/51310\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of genes that interact with the compound \"Methylphenobarbital\" through a binding relationship, given it is licensed as \"CC BY-NC 4.0.\"", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", name: \"Methylphenobarbital\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the gene that is related to the gene \"butyrophilin, subfamily 2, member A2\" with the specific URL \"http://identifiers.org/ncbigene/10385\" through the COVARIES_GcG relationship?", "output": "MATCH (n:Gene { description: \"butyrophilin, subfamily 2, member A2\", url: \"http://identifiers.org/ncbigene/10385\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene names that are regulated by the gene described as \"autophagy related 16-like 1 (S. cerevisiae)\" in the Entrez Gene source.", "output": "MATCH (n:Gene { description: \"autophagy related 16-like 1 (S. cerevisiae)\", source: \"Entrez Gene\" })-[r1:REGULATES_GrG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that are similar to the compound with the license \"CC BY-NC 4.0\" and the URL \"http://www.drugbank.ca/drugs/DB01395\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", url: \"http://www.drugbank.ca/drugs/DB01395\" })-[r1:RESEMBLES_CrC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the compound names connected to DrugBank compounds licensed with \"CC BY-NC 4.0\" via a 'RESEMBLES_CrC' relationship?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", source: \"DrugBank\" })-[r1:RESEMBLES_CrC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are upregulated by the anatomy entity with the specific URL \"http://purl.obolibrary.org/obo/UBERON_0002367\" and identifier \"UBERON:0002367\"?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0002367\", identifier: \"UBERON:0002367\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are downregulated by the anatomy entity with the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\" and identifier \"UBERON:0002367\"?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0002367\", identifier: \"UBERON:0002367\" })-[r1:DOWNREGULATES_AdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the names of diseases that are treated by the compound with specific license \"CC BY-NC 4.0\" and URL address \"http://www.drugbank.ca/drugs/DB00361\".", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", url: \"http://www.drugbank.ca/drugs/DB00361\" })-[r1:TREATS_CtD]->(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that are upregulated by a disease from the Disease Ontology, specifically associated with the URL \"http://purl.obolibrary.org/obo/DOID_11612\"?", "output": "MATCH (n:Disease { source: \"Disease Ontology\", url: \"http://purl.obolibrary.org/obo/DOID_11612\" })-[r1:UPREGULATES_DuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes that interact with the compound having the unique InChI identifier \"InChI=1S/C22H24ClN3O/c1-25-13-4-5-18(12-14-25)26-22(27)20-7-3-2-6-19(20)21(24-26)15-16-8-10-17(23)11-9-16/h2-3,6-11,18H,4-5,12-15H2,1H3\" from DrugBank.", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C22H24ClN3O/c1-25-13-4-5-18(12-14-25)26-22(27)20-7-3-2-6-19(20)21(24-26)15-16-8-10-17(23)11-9-16/h2-3,6-11,18H,4-5,12-15H2,1H3\", source: \"DrugBank\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes that have a COVARIES_GcG association with the gene marked as \"vascular endothelial growth factor A\" in the Entrez Gene database.", "output": "MATCH (n:Gene { description: \"vascular endothelial growth factor A\", source: \"Entrez Gene\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are upregulated by the prostate gland, identified by UBERON:0002367, in the database?", "output": "MATCH (n:Anatomy { name: \"prostate gland\", identifier: \"UBERON:0002367\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene names affected by the downregulation from a compound with the license \"CC BY-NC 4.0\" and InChI identifier \"InChI=1S/C9H11FN2O5/c10-4-2-12(9(16)11-8(4)15)7-1-5(14)6(3-13)17-7/h2,5-7,13-14H,1,3H2,(H,11,15,16)/t5-,6+,7+/m0/s1\".", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", inchi: \"InChI=1S/C9H11FN2O5/c10-4-2-12(9(16)11-8(4)15)7-1-5(14)6(3-13)17-7/h2,5-7,13-14H,1,3H2,(H,11,15,16)/t5-,6+,7+/m0/s1\" })-[r1:DOWNREGULATES_CdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the gene that the compound with InChI value \"InChI=1S/C22H25NO6/c1-12(24)23-16-8-6-13-10-19(27-3)21(28-4)22(29-5)20(13)14-7-9-18(26-2)17(25)11-15(14)16/h7,9-11,16H,6,8H2,1-5H3,(H,23,24)\" and identifier \"DB01394\" binds to?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C22H25NO6/c1-12(24)23-16-8-6-13-10-19(27-3)21(28-4)22(29-5)20(13)14-7-9-18(26-2)17(25)11-15(14)16/h7,9-11,16H,6,8H2,1-5H3,(H,23,24)\", identifier: \"DB01394\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the compounds that are linked by the \"RESEMBLES_CrC\" relationship to the compound named \"Dyclonine\" with the license \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", name: \"Dyclonine\" })-[r1:RESEMBLES_CrC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes that experience downregulation interactions with the disease whose license is \"CC BY 3.0\" and corresponds to the URL \"http://purl.obolibrary.org/obo/DOID_1793\"?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", url: \"http://purl.obolibrary.org/obo/DOID_1793\" })-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that the anatomy entity with mesh_id \"D011467\" and bto_id \"BTO:0001129\" upregulates according to the database?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\", bto_id: \"BTO:0001129\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are regulated downward by the anatomy entity tagged with Uberon source and given URL \"http://purl.obolibrary.org/obo/UBERON_0002367\"?", "output": "MATCH (n:Anatomy { source: \"Uberon\", url: \"http://purl.obolibrary.org/obo/UBERON_0002367\" })-[r1:DOWNREGULATES_AdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of anatomy entities associated with diseases that have a \"CC BY 3.0\" license and are sourced from the Disease Ontology?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", source: \"Disease Ontology\" })-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomical structures where the disease with the URL \"http://purl.obolibrary.org/obo/DOID_13241\" and identifier \"DOID:13241\" localizes?", "output": "MATCH (n:Disease { url: \"http://purl.obolibrary.org/obo/DOID_13241\", identifier: \"DOID:13241\" })-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that the disease \"pancreatic cancer\" downregulates according to the specified URL?", "output": "MATCH (n:Disease { url: \"http://purl.obolibrary.org/obo/DOID_1793\", name: \"pancreatic cancer\" })-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pathway names where the gene \"argonaute RISC catalytic component 1\" from Entrez Gene is a participant?", "output": "MATCH (n:Gene { description: \"argonaute RISC catalytic component 1\", source: \"Entrez Gene\" })-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of compounds that are deemed similar to the compound identified by \"DB00748\" under the \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", identifier: \"DB00748\" })-[r1:RESEMBLES_CrC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of genes connected to the gene with chromosome 6 and description \"zinc finger and SCAN domain containing 9\" via a COVARIES_GcG relationship?", "output": "MATCH (n:Gene { chromosome: \"6\", description: \"zinc finger and SCAN domain containing 9\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that are bound by the compound with the InChIKey \"PJVWKTKQMONHTI-UHFFFAOYNA-N\" and the license \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", inchikey: \"InChIKey=PJVWKTKQMONHTI-UHFFFAOYNA-N\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes associated with the disease that has the license \"CC BY 3.0\" and the URL \"http://purl.obolibrary.org/obo/DOID_2377\"?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", url: \"http://purl.obolibrary.org/obo/DOID_2377\" })-[r1:ASSOCIATES_DaG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are upregulated by the prostate gland according to the Uberon source?", "output": "MATCH (n:Anatomy { source: \"Uberon\", name: \"prostate gland\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are expressed by the anatomy labeled as \"prostate gland\" with the BTO identifier \"BTO:0001129\"?", "output": "MATCH (n:Anatomy { name: \"prostate gland\", bto_id: \"BTO:0001129\" })-[r1:EXPRESSES_AeG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the pathways by name where the gene with URL \"http://identifiers.org/ncbigene/8361\", originating from Entrez Gene, takes part.", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/8361\", source: \"Entrez Gene\" })-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that have a 'COVARIES_GcG' relationship with the 'KRT15' gene from the Entrez Gene source?", "output": "MATCH (n:Gene { name: \"KRT15\", source: \"Entrez Gene\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes share a \"COVARIES_GcG\" connection with the gene labeled \"PRMT1,\" which has the URL \"http://identifiers.org/ncbigene/3276\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/3276\", name: \"PRMT1\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the compounds included in the pharmacologic class identified as Nucleoside Reverse Transcriptase Inhibitors, with the identifier N0000009947?", "output": "MATCH (n:PharmacologicClass { identifier: \"N0000009947\", name: \"Nucleoside Reverse Transcriptase Inhibitors\" })-[r1:INCLUDES_PCiC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the compound names that belong to pharmacologic classes with the physiologic effect class type and a CC BY 4.0 license?", "output": "MATCH (n:PharmacologicClass { class_type: \"Physiologic Effect\", license: \"CC BY 4.0\" })-[r1:INCLUDES_PCiC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the anatomical areas mentioned where the disease from the Disease Ontology with the URL \"http://purl.obolibrary.org/obo/DOID_1826\" is known to localize.", "output": "MATCH (n:Disease { source: \"Disease Ontology\", url: \"http://purl.obolibrary.org/obo/DOID_1826\" })-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene names that are downregulated by the anatomy node with the specific identifiers mesh ID \"D011467\" and UBERON ID \"0002367\".", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\", identifier: \"UBERON:0002367\" })-[r1:DOWNREGULATES_AdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the disease names that have a palliative relationship with the compound Risperidone as per its entry with URL \"http://www.drugbank.ca/drugs/DB00734\"?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00734\", name: \"Risperidone\" })-[r1:PALLIATES_CpD]->(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list cellular component names associated with the gene identified by \"phosphatidylinositol-4-phosphate 5-kinase, type I, gamma\" at \"http://identifiers.org/ncbigene/23396\"?", "output": "MATCH (n:Gene { description: \"phosphatidylinositol-4-phosphate 5-kinase, type I, gamma\", url: \"http://identifiers.org/ncbigene/23396\" })-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are returned for the compound Apraclonidine, matching a specific InChI code, that bind through the BINDS_CbG relationship?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C9H10Cl2N4/c10-6-3-5(12)4-7(11)8(6)15-9-13-1-2-14-9/h3-4H,1-2,12H2,(H2,13,14,15)\", name: \"Apraclonidine\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are upregulated by the anatomy entity with the identifier \"UBERON:0002367\" and licensed under \"CC BY 3.0\"?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\", identifier: \"UBERON:0002367\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes downregulated by the disease with the identifier \"DOID:11612\" and a license of \"CC BY 3.0\"?  ", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", identifier: \"DOID:11612\" })-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of any compound that resembles the compound with a license \"CC BY-NC 4.0\" and an InChIKey of \"CMHHMUWAYWTMGS-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", inchikey: \"InChIKey=CMHHMUWAYWTMGS-UHFFFAOYSA-N\" })-[r1:RESEMBLES_CrC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are being upregulated by the Uberon anatomy component with identifier \"UBERON:0002367\" through the UPREGULATES_AuG relationship?", "output": "MATCH (n:Anatomy { source: \"Uberon\", identifier: \"UBERON:0002367\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are upregulated by the compound with InChIKey \"SHGAZHPCJJPHSC-YCNIQYBTSA-N\" from DrugBank?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=SHGAZHPCJJPHSC-YCNIQYBTSA-N\", source: \"DrugBank\" })-[r1:UPREGULATES_CuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the symptoms that are linked to the Disease Ontology disease identified by DOID:5612.", "output": "MATCH (n:Disease { source: \"Disease Ontology\", identifier: \"DOID:5612\" })-[r1:PRESENTS_DpS]->(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are reported to be downregulated by the compound associated with the DrugBank URL for Pindolol?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00960\", name: \"Pindolol\" })-[r1:DOWNREGULATES_CdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of compound names that are linked by resemblance to DrugBank compounds with a specified CC BY-NC 4.0 license?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", source: \"DrugBank\" })-[r1:RESEMBLES_CrC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are downregulated by the compound with the InChIKey \"JWBOIMRXGHLCPP-UHFFFAOYSA-N\" and a license of \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", inchikey: \"InChIKey=JWBOIMRXGHLCPP-UHFFFAOYSA-N\" })-[r1:DOWNREGULATES_CdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene names linked by a downregulation relationship from the anatomy node with Mesh ID \"D011467\" and source specified as \"Uberon\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\", source: \"Uberon\" })-[r1:DOWNREGULATES_AdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are linked to the prostate gland through the EXPRESSES_AeG relationship in the dataset where the prostate gland has the mesh ID \"D011467\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\", name: \"prostate gland\" })-[r1:EXPRESSES_AeG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For the gene on chromosome 6 with the URL \"http://identifiers.org/ncbigene/7919\", what are the names of the molecular functions it is involved in?", "output": "MATCH (n:Gene { chromosome: \"6\", url: \"http://identifiers.org/ncbigene/7919\" })-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are associated with CAMKK1, identified by the URL \"http://identifiers.org/ncbigene/84254\", through the \"COVARIES_GcG\" relationship?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/84254\", name: \"CAMKK1\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are linked to being upregulated by the prostate gland, identified by BTO:0001129, through the UPREGULATES_AuG relationship?", "output": "MATCH (n:Anatomy { name: \"prostate gland\", bto_id: \"BTO:0001129\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are downregulated by compounds with a \"CC BY-NC 4.0\" license from DrugBank?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", source: \"DrugBank\" })-[r1:DOWNREGULATES_CdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are influenced by the gene called NAA25 on chromosome 12 according to the \"REGULATES_GrG\" relationship?", "output": "MATCH (n:Gene { chromosome: \"12\", name: \"NAA25\" })-[r1:REGULATES_GrG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms are linked to the disease with identifier \"DOID:10608\" in the source 'Disease Ontology'?", "output": "MATCH (n:Disease { source: \"Disease Ontology\", identifier: \"DOID:10608\" })-[r1:PRESENTS_DpS]->(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are downregulated by the anatomy part with mesh ID \"D011467\" and BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\", bto_id: \"BTO:0001129\" })-[r1:DOWNREGULATES_AdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that covary with the gene identified as solute carrier family 22, member 17 and have a CC0 1.0 license?", "output": "MATCH (n:Gene { license: \"CC0 1.0\", description: \"solute carrier family 22, member 17\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that the \"VTN\" gene, obtained from the \"Entrez Gene\" source, covaries with, according to the GcG relationship?", "output": "MATCH (n:Gene { name: \"VTN\", source: \"Entrez Gene\" })-[r1:COVARIES_GcG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that the compound Carbinoxamine, identified by the URL \"http://www.drugbank.ca/drugs/DB00748\", is known to upregulate?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00748\", name: \"Carbinoxamine\" })-[r1:UPREGULATES_CuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are connected to the disease with a license type of \"CC BY 3.0\" and the specific URL \"http://purl.obolibrary.org/obo/DOID_8778\"?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", url: \"http://purl.obolibrary.org/obo/DOID_8778\" })-[r1:ASSOCIATES_DaG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the molecular functions linked to the gene labeled with the URL http://identifiers.org/ncbigene/7345 and the license type CC0 1.0.", "output": "MATCH (n:Gene { license: \"CC0 1.0\", url: \"http://identifiers.org/ncbigene/7345\" })-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are downregulated by the compound with the InChIKey 'NWIBSHFKIJFRCO-WUDYKRTCSA-N' and URL 'http://www.drugbank.ca/drugs/DB00305'?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=NWIBSHFKIJFRCO-WUDYKRTCSA-N\", url: \"http://www.drugbank.ca/drugs/DB00305\" })-[r1:DOWNREGULATES_CdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that interact with the gene described as \"tumor protein p73\" and named \"TP73\"?", "output": "MATCH (n:Gene { description: \"tumor protein p73\", name: \"TP73\" })-[r1:INTERACTS_GiG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that interact with the gene named \"DDX5\" which has the URL \"http://identifiers.org/ncbigene/1655\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/1655\", name: \"DDX5\" })-[r1:INTERACTS_GiG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What symptom names are presented by diseases that are licensed under \"CC BY 3.0\" and obtained from the disease ontology?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", source: \"Disease Ontology\" })-[r1:PRESENTS_DpS]->(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the molecular function that the gene described as \"solute carrier family 43 (amino acid system L transporter), member 1\" from the Entrez Gene source participates in?", "output": "MATCH (n:Gene { description: \"solute carrier family 43 (amino acid system L transporter), member 1\", source: \"Entrez Gene\" })-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of compounds that belong to the pharmacologic class with the specific license \"CC BY 4.0\" and URL \"http://purl.bioontology.org/ontology/NDFRT/N0000175833\"?", "output": "MATCH (n:PharmacologicClass { license: \"CC BY 4.0\", url: \"http://purl.bioontology.org/ontology/NDFRT/N0000175833\" })-[r1:INCLUDES_PCiC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the gene names that are upregulated by the anatomy entity with the identifier \"UBERON:0002367\" within the Uberon dataset?", "output": "MATCH (n:Anatomy { source: \"Uberon\", identifier: \"UBERON:0002367\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes connected to the disease specified by the URL \"http://purl.obolibrary.org/obo/DOID_10871\" and possessing the license \"CC BY 3.0\"?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", url: \"http://purl.obolibrary.org/obo/DOID_10871\" })-[r1:ASSOCIATES_DaG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are returned as being upregulated by the specific anatomy node corresponding to mesh ID \"D011467\" and BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\", bto_id: \"BTO:0001129\" })-[r1:UPREGULATES_AuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that the anatomy entity with the mesh ID \"D011467\" and a license of \"CC BY 3.0\" downregulates?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\", mesh_id: \"D011467\" })-[r1:DOWNREGULATES_AdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are regulated by genes located on chromosome 3 from the \"Entrez Gene\" source?", "output": "MATCH (n:Gene { chromosome: \"3\", source: \"Entrez Gene\" })-[r1:REGULATES_GrG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What diseases are treated by the compound with the license \"CC BY-NC 4.0\" and identifier \"DB00445\" according to the database?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", identifier: \"DB00445\" })-[r1:TREATS_CtD]->(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are enhanced by the compound having the identifier \"DB00264\" and the license \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\", identifier: \"DB00264\" })-[r1:UPREGULATES_CuG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are identified as resembling the compound with URL \"http://www.drugbank.ca/drugs/DB01165\", and what are their respective names?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB01165\", identifier: \"DB01165\" })-[r1:RESEMBLES_CrC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of genes that are linked to the anatomy with mesh_id \"D011467\" and bto_id \"BTO:0001129\" through the relationship 'EXPRESSES_AeG'?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\", bto_id: \"BTO:0001129\" })-[r1:EXPRESSES_AeG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that bind with a compound identified by the InChI \"InChI=1S/C17H16ClN3O/c18-12-5-6-15-13(11-12)17(21-9-7-19-8-10-21)20-14-3-1-2-4-16(14)22-15/h1-6,11,19H,7-10H2\" in the DrugBank database?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C17H16ClN3O/c18-12-5-6-15-13(11-12)17(21-9-7-19-8-10-21)20-14-3-1-2-4-16(14)22-15/h1-6,11,19H,7-10H2\", source: \"DrugBank\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that bind with the compound having the InChIKey \"MVWVFYHBGMAFLY-UHFFFAOYSA-N\" and the name \"Ziprasidone\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=MVWVFYHBGMAFLY-UHFFFAOYSA-N\", name: \"Ziprasidone\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are treated by the specific compound identified by the URL \"http://www.drugbank.ca/drugs/DB00773\" in the DrugBank database?", "output": "MATCH (n:Compound { source: \"DrugBank\", url: \"http://www.drugbank.ca/drugs/DB00773\" })-[r1:TREATS_CtD]->(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases that the compound identified by the InChI key \"InChI=1S/C22H24N2O8/c1-7-8-5-4-6-9(25)11(8)16(26)12-10(7)17(27)14-15(24(2)3)18(28)13(21(23)31)20(30)22(14,32)19(12)29/h4-7,10,14-15,17,25,27-29,32H,1-3H3,(H2,23,31)/t7-,10+,14+,15-,17-,22-/m0/s1\" from DrugBank is known to treat?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C22H24N2O8/c1-7-8-5-4-6-9(25)11(8)16(26)12-10(7)17(27)14-15(24(2)3)18(28)13(21(23)31)20(30)22(14,32)19(12)29/h4-7,10,14-15,17,25,27-29,32H,1-3H3,(H2,23,31)/t7-,10+,14+,15-,17-,22-/m0/s1\", source: \"DrugBank\" })-[r1:TREATS_CtD]->(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of the interacting genes connected to the \"transmembrane protein 14C\" gene situated on chromosome 6.", "output": "MATCH (n:Gene { chromosome: \"6\", description: \"transmembrane protein 14C\" })-[r1:INTERACTS_GiG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes express in the anatomy node tagged with the source \"Uberon\" and identifier \"UBERON:0001003\", and what are their names?", "output": "MATCH (n:Anatomy { source: \"Uberon\", identifier: \"UBERON:0001003\" })-[r1:EXPRESSES_AeG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that resemble the DrugBank compound with the URL \"http://www.drugbank.ca/drugs/DB00324\"?", "output": "MATCH (n:Compound { source: \"DrugBank\", url: \"http://www.drugbank.ca/drugs/DB00324\" })-[r1:RESEMBLES_CrC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are treated by the compound with the InChI string \"InChI=1S/C12H14N2O2/c1-2-12(9-6-4-3-5-7-9)10(15)13-8-14-11(12)16/h3-7H,2,8H2,1H3,(H,13,15)(H,14,16)\" and source classified as DrugBank?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C12H14N2O2/c1-2-12(9-6-4-3-5-7-9)10(15)13-8-14-11(12)16/h3-7H,2,8H2,1H3,(H,13,15)(H,14,16)\", source: \"DrugBank\" })-[r1:TREATS_CtD]->(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that the compound with the identifier \"DB01132\" binds to, as specified in the DrugBank URL?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB01132\", identifier: \"DB01132\" })-[r1:BINDS_CbG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the names of genes that are downregulated by pancreatic cancer in the database where the data is licensed under \"CC BY 3.0\"?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", name: \"pancreatic cancer\" })-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are regulated by genes located on chromosome 2 and sourced from Entrez Gene?", "output": "MATCH (n:Gene { chromosome: \"2\", source: \"Entrez Gene\" })-[r1:REGULATES_GrG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes expressed by the anatomy node tagged with MeSH ID \"D011467\" and BTO ID \"BTO:0001129\".", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\", bto_id: \"BTO:0001129\" })-[r1:EXPRESSES_AeG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are downregulated by Crohn's disease according to the database?", "output": "MATCH (n:Disease { identifier: \"DOID:8778\", name: \"Crohn's disease\" })-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the compounds related to the pharmacologic class with class_type \"Physiologic Effect\" and identifier \"N0000008841\"?", "output": "MATCH (n:PharmacologicClass { class_type: \"Physiologic Effect\", identifier: \"N0000008841\" })-[r1:INCLUDES_PCiC]->(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the biological process names linked to the gene labeled by the URL \"http://identifiers.org/ncbigene/916\" from the \"Entrez Gene\" database?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/916\", source: \"Entrez Gene\" })-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the genes associated with \"multiple sclerosis\" under the condition that the disease's license is \"CC BY 3.0\"?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\", name: \"multiple sclerosis\" })-[r1:ASSOCIATES_DaG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes that are downregulated by anatomical entities originating from the Uberon source with the CC BY 3.0 license.", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\", source: \"Uberon\" })-[r1:DOWNREGULATES_AdG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are returned when looking for interactions involving genes on chromosome 2 from the Entrez Gene source?", "output": "MATCH (n:Gene { chromosome: \"2\", source: \"Entrez Gene\" })-[r1:INTERACTS_GiG]->(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify the URL of each \"MolecularFunction\" node and determine the number of \"PARTICIPATES_GpMF\" relationships incoming to it?", "output": "MATCH (n:MolecularFunction) RETURN n.url, size((n)<-[:PARTICIPATES_GpMF]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs of all Gene nodes and count the total incoming :INTERACTS_GiG relationships for each node?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:INTERACTS_GiG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the URLs of CellularComponent entities along with a count of how many nodes are associated with each through PARTICIPATES_GpCC relationships?", "output": "MATCH (n:CellularComponent) RETURN n.url, size((n)<-[:PARTICIPATES_GpCC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve the descriptions of Gene nodes, and count how many nodes are bound to each using the BINDS_CbG relationship?", "output": "MATCH (n:Gene) RETURN n.description, size((n)<-[:BINDS_CbG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the descriptions of gene nodes plus the number of incoming COVARIES_GcG relationships for each?", "output": "MATCH (n:Gene) RETURN n.description, size((n)<-[:COVARIES_GcG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the InChIKey of each compound along with the total count of incoming 'RESEMBLES_CrC' relationships for that compound node?", "output": "MATCH (n:Compound) RETURN n.inchikey, size((n)<-[:RESEMBLES_CrC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the mesh_id of Anatomy nodes, along with the count of nodes that localize them through a LOCALIZES_DIA relationship?", "output": "MATCH (n:Anatomy) RETURN n.mesh_id, size((n)<-[:LOCALIZES_DlA]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the source information for genes and determine the number of inbound 'REGULATES_GrG' relationships linked to each gene node.", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:REGULATES_GrG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of genes and the number of nodes that are connected to each gene via a 'DOWNREGULATES_AdG' relationship?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:DOWNREGULATES_AdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the license for each gene, along with the total number of incoming 'EXPRESSES_AeG' relationships for each gene in the network.", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:EXPRESSES_AeG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URL of every Gene node and count the number of `EXPRESSES_AeG` relationships connected to each one?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:EXPRESSES_AeG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I find the URL for each Gene node along with the number of times it is targeted by a \"COVARIES_GcG\" relationship?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:COVARIES_GcG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of diseases and the number of nodes associated with them through the 'PALLIATES_CpD' connection?", "output": "MATCH (n:Disease) RETURN n.url, size((n)<-[:PALLIATES_CpD]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each disease node, what is the associated URL and the count of nodes linked to it by the 'RESEMBLES_DrD' relationship?", "output": "MATCH (n:Disease) RETURN n.url, size((n)<-[:RESEMBLES_DrD]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For every gene node, can you identify its source and count how many nodes have a 'DOWNREGULATES_AdG' relationship towards it?", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:DOWNREGULATES_AdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL for each gene node and the count of nodes linked to it via the UPREGULATES_DuG relationship?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:UPREGULATES_DuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the license information for each gene and count how many nodes have a 'DOWNREGULATES_DdG' relationship pointing to it?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:DOWNREGULATES_DdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I retrieve each compound's InChI and find out how many other nodes are linked to it with the \"RESEMBLES_CrC\" label?", "output": "MATCH (n:Compound) RETURN n.inchi, size((n)<-[:RESEMBLES_CrC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of incoming LOCALIZES_DlA relationships for each anatomy node, and what BTO ID does each node have?", "output": "MATCH (n:Anatomy) RETURN n.bto_id, size((n)<-[:LOCALIZES_DlA]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the description of each gene and the number of nodes that have a UPREGULATES_CuG relationship pointing to them?", "output": "MATCH (n:Gene) RETURN n.description, size((n)<-[:UPREGULATES_CuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve the descriptions of genes and count the number of nodes that upregulate each gene through the UPREGULATES_AuG relationship?", "output": "MATCH (n:Gene) RETURN n.description, size((n)<-[:UPREGULATES_AuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the sources of each 'Gene' node along with the count of nodes that are connected to it via the 'BINDS_CbG' relation?", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:BINDS_CbG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, what is the license and how many nodes are connected to it via `BINDS_CbG` relationships?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:BINDS_CbG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the name of every cellular component and count how many nodes are involved with each through PARTICIPATES_GpCC relationships?", "output": "MATCH (n:CellularComponent) RETURN n.name, size((n)<-[:PARTICIPATES_GpCC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene node, what is the URL, and how many nodes are linked to it through the ASSOCIATES_DaG relationship?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:ASSOCIATES_DaG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the licenses for each gene node and the corresponding number of 'ASSOCIATES_DaG' relationships linked to them?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:ASSOCIATES_DaG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find the URLs of all BiologicalProcess nodes and determine how many gene products are linked to each through the PARTICIPATES_GpBP relationship?", "output": "MATCH (n:BiologicalProcess) RETURN n.url, size((n)<-[:PARTICIPATES_GpBP]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the source and the count of incoming 'COVARIES_GcG' relationships for every gene node in the dataset?", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:COVARIES_GcG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each compound's InChI along with the count of nodes that include it using the INCLUDES_PCiC relationship?", "output": "MATCH (n:Compound) RETURN n.inchi, size((n)<-[:INCLUDES_PCiC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene node, what is its identifier and how many incoming ASSOCIATES_DaG relationships does it have?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:ASSOCIATES_DaG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each disease's name and count how many nodes are linked to it via the RESEMBLES_DrD relationship?", "output": "MATCH (n:Disease) RETURN n.name, size((n)<-[:RESEMBLES_DrD]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of genes and their respective counts of incoming \"DOWNREGULATES_DdG\" edges from other nodes?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:DOWNREGULATES_DdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each gene's source and count how many nodes are connected to it via the DOWNREGULATES_CdG relationship?", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:DOWNREGULATES_CdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the license associated with each anatomy node and count how many nodes are pointing to it with the LOCALIZES_DIA relationship type?", "output": "MATCH (n:Anatomy) RETURN n.license, size((n)<-[:LOCALIZES_DlA]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the source of each Anatomy node and the number of nodes that are linked to it through the LOCALIZES_DIA relationship?", "output": "MATCH (n:Anatomy) RETURN n.source, size((n)<-[:LOCALIZES_DlA]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of each Gene node, and how many nodes are connected to it with an incoming UPREGULATES_CuG relationship?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:UPREGULATES_CuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of each gene along with the count of COVARIES_GcG relationships targeting them?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:COVARIES_GcG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of all Compound nodes along with the count of incoming RESEMBLES_CrC relationships they have?", "output": "MATCH (n:Compound) RETURN n.identifier, size((n)<-[:RESEMBLES_CrC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each node categorized under MolecularFunction, what is its unique identifier and the total count of PARTICIPATES_GpMF connections that lead to it?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier, size((n)<-[:PARTICIPATES_GpMF]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a list of gene names together with the number of \"UPREGULATES_AuG\" relationships they receive from other nodes?", "output": "MATCH (n:Gene) RETURN n.name, size((n)<-[:UPREGULATES_AuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of each compound, along with the number of associations each has with other nodes through the RESEMBLES_CrC relationship?", "output": "MATCH (n:Compound) RETURN n.url, size((n)<-[:RESEMBLES_CrC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For every gene in the database, what are the associated licenses, and how many times is each gene linked to other nodes using the INTERACTS_GiG relationship?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:INTERACTS_GiG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all compound names and count how many nodes are connected to each with the relationship \"RESEMBLES_CrC\"?", "output": "MATCH (n:Compound) RETURN n.name, size((n)<-[:RESEMBLES_CrC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the source of each pathway along with the number of entities linked to each by a PARTICIPATES_GpPW relationship?", "output": "MATCH (n:Pathway) RETURN n.source, size((n)<-[:PARTICIPATES_GpPW]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the URLs of symptoms and for each, determine the number of \"PRESENTS_DpS\" relationships they have.", "output": "MATCH (n:Symptom) RETURN n.url, size((n)<-[:PRESENTS_DpS]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each `Gene` entity in the database, provide the `source` and the number of times it is upregulated by other nodes through `UPREGULATES_CuG` connections.", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:UPREGULATES_CuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of gene nodes and how many times is each gene bound by a BINDS_CbG relationship?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:BINDS_CbG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of gene names along with the count of nodes that are linked to each gene through the DOWNREGULATES_CdG relationship?", "output": "MATCH (n:Gene) RETURN n.name, size((n)<-[:DOWNREGULATES_CdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each compound, what is the license, and how many times is it connected to nodes via the RESEMBLES_CrC relationship?", "output": "MATCH (n:Compound) RETURN n.license, size((n)<-[:RESEMBLES_CrC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list each gene's name along with the total number of nodes that are connected to it through the \"BINDS_CbG\" relationship?", "output": "MATCH (n:Gene) RETURN n.name, size((n)<-[:BINDS_CbG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifier of every disease and the total number of nodes that hold a 'RESEMBLES_DrD' relationship towards them?", "output": "MATCH (n:Disease) RETURN n.identifier, size((n)<-[:RESEMBLES_DrD]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs for Anatomy nodes along with the count of nodes that localize to each using the LOCALIZES_DIA relationship?", "output": "MATCH (n:Anatomy) RETURN n.url, size((n)<-[:LOCALIZES_DlA]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license information for diseases along with the count of nodes that are similar to each disease through the 'RESEMBLES_DrD' path?", "output": "MATCH (n:Disease) RETURN n.license, size((n)<-[:RESEMBLES_DrD]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of gene nodes, and how many incoming 'DOWNREGULATES_AdG' relationships does each gene have?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:DOWNREGULATES_AdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For the nodes labeled 'Gene', what are their identifiers and how often are they downregulated through the DOWNREGULATES_CdG relationship?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:DOWNREGULATES_CdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you tell me how many nodes are connected to each gene via the COVARIES_GcG relationship and their associated chromosome?", "output": "MATCH (n:Gene) RETURN n.chromosome, size((n)<-[:COVARIES_GcG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find out the license names of genes and determine how many times each is on the receiving end of a COVARIES_GcG relationship?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:COVARIES_GcG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the source of every gene and tally the number of nodes that express each gene through 'EXPRESSES_AeG' relationships.", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:EXPRESSES_AeG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene node, what is its name and the number of `DOWNREGULATES_AdG` relationships targeting it?", "output": "MATCH (n:Gene) RETURN n.name, size((n)<-[:DOWNREGULATES_AdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each Anatomy node's identifier along with the number of LOCALIZES_DIA relationships directed towards it?", "output": "MATCH (n:Anatomy) RETURN n.identifier, size((n)<-[:LOCALIZES_DlA]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each Compound node in the database, what is its identifier, and how many nodes include it through the relationship type INCLUDES_PCiC?", "output": "MATCH (n:Compound) RETURN n.identifier, size((n)<-[:INCLUDES_PCiC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the descriptions of the genes and the count of nodes that have a 'DOWNREGULATES_AdG' relationship with each gene?", "output": "MATCH (n:Gene) RETURN n.description, size((n)<-[:DOWNREGULATES_AdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of instances for each symptom identifier being part of an incoming 'PRESENTS_DpS' relationship?", "output": "MATCH (n:Symptom) RETURN n.identifier, size((n)<-[:PRESENTS_DpS]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license types of all genes and provide the count of inbound \"DOWNREGULATES_CdG\" relationships for each gene?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:DOWNREGULATES_CdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each biological process, what is the source, and how many nodes are connected through the PARTICIPATES_GpBP relationship?", "output": "MATCH (n:BiologicalProcess) RETURN n.source, size((n)<-[:PARTICIPATES_GpBP]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each biological process by its identifier and count how many entities are associated with it through the \"PARTICIPATES_GpBP\" relationship?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier, size((n)<-[:PARTICIPATES_GpBP]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses do the genes have, and how many nodes are connected to each gene through an \"UPREGULATES_CuG\" relationship?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:UPREGULATES_CuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the license information for genes and count how many incoming 'REGULATES_GrG' relationships each has?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:REGULATES_GrG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the URL and the count of participants for each `Pathway` node in the database.", "output": "MATCH (n:Pathway) RETURN n.url, size((n)<-[:PARTICIPATES_GpPW]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the license information for symptoms, along with the count of \"PRESENTS_DpS\" connections each symptom has?", "output": "MATCH (n:Symptom) RETURN n.license, size((n)<-[:PRESENTS_DpS]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, what is its identifier and how many incoming REGULATES_GrG relationships does it have?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:REGULATES_GrG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL for each gene, and how many incoming 'UPREGULATES_AuG' relationships does each one have?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:UPREGULATES_AuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of each Gene node, and how many EXPRESSES_AeG relationships point to each one?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:EXPRESSES_AeG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the names of genes and the number of incoming 'COVARIES_GcG' connections they each receive?", "output": "MATCH (n:Gene) RETURN n.name, size((n)<-[:COVARIES_GcG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, what is its chromosome, and how many nodes have a relationship of type UPREGULATES_CuG to this gene?", "output": "MATCH (n:Gene) RETURN n.chromosome, size((n)<-[:UPREGULATES_CuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each compound, what is its source and how many other nodes are connected to it through 'RESEMBLES_CrC' relationships?", "output": "MATCH (n:Compound) RETURN n.source, size((n)<-[:RESEMBLES_CrC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of 'UPREGULATES_AuG' relationships per gene, along with each gene's corresponding license?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:UPREGULATES_AuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the descriptions of genes along with the count of nodes that downregulate each gene via the DOWNREGULATES_CdG relationship?", "output": "MATCH (n:Gene) RETURN n.description, size((n)<-[:DOWNREGULATES_CdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, what is the gene's description and the number of nodes that upregulate it through the \"UPREGULATES_DuG\" relationship?", "output": "MATCH (n:Gene) RETURN n.description, size((n)<-[:UPREGULATES_DuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each molecular function, what is its name and the count of related entities that participate in it via the PARTICIPATES_GpMF relationship?", "output": "MATCH (n:MolecularFunction) RETURN n.name, size((n)<-[:PARTICIPATES_GpMF]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each Gene, what is its source, and how many times is it upregulated according to incoming 'UPREGULATES_AuG' relationships?", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:UPREGULATES_AuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the license attributes of each Gene node along with the count of entities that downregulate it?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:DOWNREGULATES_AdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the chromosome numbers of each gene and how many edges are there connecting each gene to a 'BINDS_CbG' relationship?", "output": "MATCH (n:Gene) RETURN n.chromosome, size((n)<-[:BINDS_CbG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, what is the gene's name and its count of incoming UPREGULATES_DuG relationships?", "output": "MATCH (n:Gene) RETURN n.name, size((n)<-[:UPREGULATES_DuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each gene's chromosome and count the number of \"UPREGULATES_DuG\" relationships pointing to it in the dataset?", "output": "MATCH (n:Gene) RETURN n.chromosome, size((n)<-[:UPREGULATES_DuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the description of each gene and the total number of times it is associated with other entities through the \"ASSOCIATES_DaG\" relationship?", "output": "MATCH (n:Gene) RETURN n.description, size((n)<-[:ASSOCIATES_DaG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list each compound's license and the total number of connections directed towards it via the INCLUDES_PCiC relationship?", "output": "MATCH (n:Compound) RETURN n.license, size((n)<-[:INCLUDES_PCiC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifier for each gene and count how many times it is upregulated by other nodes?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:UPREGULATES_DuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each cellular component, what is the license, and how many items participate in it according to the PARTICIPATES_GpCC relationship?", "output": "MATCH (n:CellularComponent) RETURN n.license, size((n)<-[:PARTICIPATES_GpCC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes do the genes belong to, and what is the interaction count for each gene based on incoming INTERACTS_GiG connections?", "output": "MATCH (n:Gene) RETURN n.chromosome, size((n)<-[:INTERACTS_GiG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For every compound, what is its source and how many incoming INCLUDES_PCiC relationships does it have?", "output": "MATCH (n:Compound) RETURN n.source, size((n)<-[:INCLUDES_PCiC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, what is the source, and how many incoming \"UPREGULATES_DuG\" relationships does it have?", "output": "MATCH (n:Gene) RETURN n.source, size((n)<-[:UPREGULATES_DuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each cellular component, what is its source and how many entities participate via the PARTICIPATES_GpCC relationship?", "output": "MATCH (n:CellularComponent) RETURN n.source, size((n)<-[:PARTICIPATES_GpCC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each disease, what is the corresponding license and how many other nodes are linked to it through a palliative relationship?", "output": "MATCH (n:Disease) RETURN n.license, size((n)<-[:PALLIATES_CpD]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For every disease node, what is the source and how many nodes have a palliating connection to it?", "output": "MATCH (n:Disease) RETURN n.source, size((n)<-[:PALLIATES_CpD]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of genes along with the total number of incoming \"BINDS_CbG\" relationships for each?", "output": "MATCH (n:Gene) RETURN n.identifier, size((n)<-[:BINDS_CbG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve each gene's URL along with the count of things downregulating it?", "output": "MATCH (n:Gene) RETURN n.url, size((n)<-[:DOWNREGULATES_CdG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What license does each gene have, and how many nodes are linked to it through the \"upregulates\" relationship type?", "output": "MATCH (n:Gene) RETURN n.license, size((n)<-[:UPREGULATES_DuG]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each disease, what is its name and how many entities are linked to it by the \"PALLIATES_CpD\" relationship?", "output": "MATCH (n:Disease) RETURN n.name, size((n)<-[:PALLIATES_CpD]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs of all compounds along with the count of 'INCLUDES_PCiC' relationships pointing to each one?", "output": "MATCH (n:Compound) RETURN n.url, size((n)<-[:INCLUDES_PCiC]-()) AS count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What data can be returned for a Pathway whose name matches \"Na+-dependent glucose transporters\"?", "output": "MATCH (n:Pathway) WHERE n.name = \"Na+-dependent glucose transporters\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the compound with the property URL set to \"http://www.drugbank.ca/drugs/DB01181\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB01181\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the information for the pathway called \"Hypoxia-mediated EMT and Stemness.\"", "output": "MATCH (n:Pathway) WHERE n.name = \"Hypoxia-mediated EMT and Stemness\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the gene that has a description of \"glutamic pyruvate transaminase (alanine aminotransferase) 2\".", "output": "MATCH (n:Gene) WHERE n.description = \"glutamic pyruvate transaminase (alanine aminotransferase) 2\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pathways where the license is specified as \"CC BY 4.0\".", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find pharmacologic class entities with the source specified as \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the details of the pathway named \"ATF4 activates genes\" using this query?", "output": "MATCH (n:Pathway) WHERE n.name = \"ATF4 activates genes\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve pathways that are specifically linked to Reactome as their source through Pathway Commons?", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all cellular components that have \"CC BY 4.0\" as their license.", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the information related to the pharmacologic class called \"Phosphodiesterase 5 Inhibitors\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.name = \"Phosphodiesterase 5 Inhibitors\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you find the molecular function node with the name \"peptide-methionine (R)-S-oxide reductase activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"peptide-methionine (R)-S-oxide reductase activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve information on all PharmacologicClass entities with a license of \"CC BY 4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the biological process labeled as \"ESCRT III complex disassembly\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name = \"ESCRT III complex disassembly\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the information for the gene linked to the URL \"http://identifiers.org/ncbigene/152518\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/152518\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the molecular function entity associated with the name \"transcription factor activity, RNA polymerase II basal transcription factor binding\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"transcription factor activity, RNA polymerase II basal transcription factor binding\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the pathway node that is identified by \"PC7_3060\".", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_3060\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all biological processes that possess the \"CC BY 4.0\" licensing.", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available about the pathway named \"Signaling by Activin\"?", "output": "MATCH (n:Pathway) WHERE n.name = \"Signaling by Activin\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can we retrieve about the molecular function associated with the name \"fatty-acyl-CoA synthase activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"fatty-acyl-CoA synthase activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the pathway labeled node that is named \"Signaling by FGFR in disease\".", "output": "MATCH (n:Pathway) WHERE n.name = \"Signaling by FGFR in disease\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the SideEffect node associated with the URL \"http://identifiers.org/umls/C0019917\"?", "output": "MATCH (n:SideEffect) WHERE n.url = \"http://identifiers.org/umls/C0019917\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all CellularComponent entities where the license is \"CC BY 4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components whose license is specified as \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all compounds that have the license type \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the CellularComponent with the identifier \"GO:0009295\" and return its information.", "output": "MATCH (n:CellularComponent) WHERE n.identifier = \"GO:0009295\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the gene that has the identifier set to 9703?", "output": "MATCH (n:Gene) WHERE n.identifier = 9703 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the symptom that has the URL \"http://identifiers.org/mesh/D065635\"?", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D065635\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all gene entities with the description \"ring finger protein 41, E3 ubiquitin protein ligase\"?", "output": "MATCH (n:Gene) WHERE n.description = \"ring finger protein 41, E3 ubiquitin protein ligase\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all gene entries that have the \"CC0 1.0\" license?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the anatomy elements that have been marked with the \"CC BY 3.0\" license.", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the Gene that is described as \"neurotrophic tyrosine kinase, receptor, type 3\"?", "output": "MATCH (n:Gene) WHERE n.description = \"neurotrophic tyrosine kinase, receptor, type 3\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components that are associated with the \"CC BY 4.0\" license.", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we fetch details regarding the compound with the name \"Anileridine\"?", "output": "MATCH (n:Compound) WHERE n.name = \"Anileridine\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find every pathway that has the \"CC BY 4.0\" license in the dataset.", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the details of the SideEffect node that has the URL \"http://identifiers.org/umls/C1096185\".", "output": "MATCH (n:SideEffect) WHERE n.url = \"http://identifiers.org/umls/C1096185\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all genes with the \"CC0 1.0\" license in the database.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which specific Pathway node has an identifier of \"PC7_1543\"?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_1543\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the biological processes whose license attribute is set to \"CC BY 4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the symptom entity that matches the URL \"http://identifiers.org/mesh/D007040\".", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D007040\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return the details of the compound that has the name \"Benazepril\"?", "output": "MATCH (n:Compound) WHERE n.name = \"Benazepril\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all pharmacologic classes that have been sourced from \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What details can be retrieved about the Pathway with the identifier \"PC7_3326\" from the database?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_3326\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the gene entities where the licensing is specified as CC0 1.0.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the SideEffect entity with the specific URL \"http://identifiers.org/umls/C1859270\"?", "output": "MATCH (n:SideEffect) WHERE n.url = \"http://identifiers.org/umls/C1859270\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the query to retrieve the gene with the specific identifier URL \"http://identifiers.org/ncbigene/5634\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/5634\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all pathway nodes that have their source specified as \"WikiPathways\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"WikiPathways\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all the biological process entities whose source is specified as the Gene Ontology.", "output": "MATCH (n:BiologicalProcess) WHERE n.source = \"Gene Ontology\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway corresponds to the identifier \"PC7_6877\" in the system?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_6877\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all gene information where the source attribute is \"Entrez Gene.\"", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all side effect records where the licensing is specified as \"CC BY-NC-SA 4.0\".", "output": "MATCH (n:SideEffect) WHERE n.license = \"CC BY-NC-SA 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the BiologicalProcess that has \"GO:0071108\" as its identifier?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier = \"GO:0071108\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the cellular component whose URL matches \"http://purl.obolibrary.org/obo/GO_0005915\" and return its details.", "output": "MATCH (n:CellularComponent) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0005915\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one find the genes that are categorized under the \"CC0 1.0\" license in the database?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you fetch the details of the disease that has the identifier \"DOID:90\"?", "output": "MATCH (n:Disease) WHERE n.identifier = \"DOID:90\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all side effect entities that possess the \"CC BY-NC-SA 4.0\" license.", "output": "MATCH (n:SideEffect) WHERE n.license = \"CC BY-NC-SA 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify the SideEffect node linked to the URL \"http://identifiers.org/umls/C2364111\"?", "output": "MATCH (n:SideEffect) WHERE n.url = \"http://identifiers.org/umls/C2364111\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the information associated with the biological pathway identified as \"PC7_7767\"?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_7767\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the cellular components whose license is specified as \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the biological processes whose license attribute is set to CC BY 4.0?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the biological process entities that are sourced from Gene Ontology.", "output": "MATCH (n:BiologicalProcess) WHERE n.source = \"Gene Ontology\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pathways that are sourced from \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the 'MolecularFunction' entity that is labeled as \"polyprenyltransferase activity.\"", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"polyprenyltransferase activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can we retrieve about the gene with the identifier 80740?", "output": "MATCH (n:Gene) WHERE n.identifier = 80740 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the biological process that corresponds to the URL \"http://purl.obolibrary.org/obo/GO_1902966\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_1902966\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the properties associated with the gene named \"PRAC1\"?", "output": "MATCH (n:Gene) WHERE n.name = \"PRAC1\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the biological process known as \"bacterial-type flagellum-dependent cell motility\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name = \"bacterial-type flagellum-dependent cell motility\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which attributes or properties are available for the anatomy node labeled as 'sacro-iliac joint'?", "output": "MATCH (n:Anatomy) WHERE n.name = \"sacro-iliac joint\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available for the anatomy structure known as the \"sternoclavicular joint\" in the database?", "output": "MATCH (n:Anatomy) WHERE n.name = \"sternoclavicular joint\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available for the biological process associated with the URL \"http://purl.obolibrary.org/obo/GO_0048387\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0048387\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the cellular component that corresponds to the identifier \"GO:0000110.\"", "output": "MATCH (n:CellularComponent) WHERE n.identifier = \"GO:0000110\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the Gene node that has \"OVCA2\" as its name?", "output": "MATCH (n:Gene) WHERE n.name = \"OVCA2\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can you match and return the data associated with the gene whose name is \"CNTN6\"?", "output": "MATCH (n:Gene) WHERE n.name = \"CNTN6\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve information about the gene with an identifier value of 3276.", "output": "MATCH (n:Gene) WHERE n.identifier = 3276 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components that are associated with the data source labeled \"Gene Ontology.\"", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me the properties of the molecular function with the ID \"GO:0070061\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier = \"GO:0070061\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What details can be retrieved about the disease with the identifier \"DOID:14268\"?", "output": "MATCH (n:Disease) WHERE n.identifier = \"DOID:14268\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the cellular component node that corresponds to the URL \"http://purl.obolibrary.org/obo/GO_0045281\".", "output": "MATCH (n:CellularComponent) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0045281\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the attributes of the gene identified by the name \"CDC42EP4\"?", "output": "MATCH (n:Gene) WHERE n.name = \"CDC42EP4\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all the cellular components where the source is specified as \"Gene Ontology\"?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the disease with the identifier \"DOID:418\" in the database?", "output": "MATCH (n:Disease) WHERE n.identifier = \"DOID:418\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component is identified by the URL \"http://purl.obolibrary.org/obo/GO_0032593\"?", "output": "MATCH (n:CellularComponent) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0032593\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the anatomy node that has a mesh ID of \"D000302.\"", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D000302\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the node labeled as MolecularFunction that has the name \"malonyltransferase activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"malonyltransferase activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the properties of the compound identified as \"DB04948\"?", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB04948\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the information stored about the anatomy having the identifier \"UBERON:0002165\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier = \"UBERON:0002165\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function corresponds to the identifier \"GO:0008374\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier = \"GO:0008374\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene entries have the license status of \"CC0 1.0\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have the attribute indicating they are from DrugBank?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Show me compounds that have the \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find compounds that are labeled with the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the compound information for the InChIKey \"InChIKey=BFYIZQONLCFLEV-DAELLWKTSA-N\".", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=BFYIZQONLCFLEV-DAELLWKTSA-N\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify which genes possess the \"CC0 1.0\" license?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene is represented by the URL \"http://identifiers.org/ncbigene/388951\" in the graph database?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/388951\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the node labeled `MolecularFunction` that is associated with the specific name \"interleukin-27 receptor binding\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"interleukin-27 receptor binding\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all cellular components that have \"Gene Ontology\" as their source?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which specific anatomy entry corresponds to the BTO ID \"BTO:0001499\"?", "output": "MATCH (n:Anatomy) WHERE n.bto_id = \"BTO:0001499\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomical structures are categorized under the source \"Uberon\" in the data?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the gene labeled as VPS13D in the database?", "output": "MATCH (n:Gene) WHERE n.name = \"VPS13D\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the details of the cellular component that has the identifier \"GO:1902495\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier = \"GO:1902495\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all side effect entries that are documented as coming from \"UMLS via SIDER 4.1\".", "output": "MATCH (n:SideEffect) WHERE n.source = \"UMLS via SIDER 4.1\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name of a compound that corresponds to the InChI \"InChI=1S/Mg.H2O4S/c;1-5(2,3)4/h;(H2,1,2,3,4)/q+2;/p-2\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/Mg.H2O4S/c;1-5(2,3)4/h;(H2,1,2,3,4)/q+2;/p-2\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the gene that is described as \"neuroblastoma breakpoint family, member 19-like\".", "output": "MATCH (n:Gene) WHERE n.description = \"neuroblastoma breakpoint family, member 19-like\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the gene associated with Treacher Collins-Franceschetti syndrome 1?", "output": "MATCH (n:Gene) WHERE n.description = \"Treacher Collins-Franceschetti syndrome 1\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of the gene with the description \"RAB24, member RAS oncogene family\"?", "output": "MATCH (n:Gene) WHERE n.description = \"RAB24, member RAS oncogene family\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name of the symptom associated with the identifier \"D020069\"?", "output": "MATCH (n:Symptom) WHERE n.identifier = \"D020069\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I need to know the name of the disease that corresponds to the identifier \"DOID:175\". What is it?", "output": "MATCH (n:Disease) WHERE n.identifier = \"DOID:175\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of the pharmacologic class known as \"Increased Hematopoietic Stem Cell Mobilization\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.name = \"Increased Hematopoietic Stem Cell Mobilization\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the name of the compound with the specified InChI code \"InChI=1S/C23H29ClFN3O4/c1-30-21-13-19(26)18(24)12-17(21)23(29)27-20-8-10-28(14-22(20)31-2)9-3-11-32-16-6-4-15(25)5-7-16/h4-7,12-13,20,22H,3,8-11,14,26H2,1-2H3,(H,27,29)/t20-,22+/m1/s1\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C23H29ClFN3O4/c1-30-21-13-19(26)18(24)12-17(21)23(29)27-20-8-10-28(14-22(20)31-2)9-3-11-32-16-6-4-15(25)5-7-16/h4-7,12-13,20,22H,3,8-11,14,26H2,1-2H3,(H,27,29)/t20-,22+/m1/s1\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the pathway with the identifier \"PC7_2523\"?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_2523\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifier for a gene described as \"family with sequence similarity 227, member A\"?", "output": "MATCH (n:Gene) WHERE n.description = \"family with sequence similarity 227, member A\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get the identifier for the compound with the specific URL \"http://www.drugbank.ca/drugs/DB00563\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00563\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier for the compound with the inchi attribute set to \"InChI=1S/C16H14O3/c1-11(16(18)19)13-8-5-9-14(10-13)15(17)12-6-3-2-4-7-12/h2-11H,1H3,(H,18,19)\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C16H14O3/c1-11(16(18)19)13-8-5-9-14(10-13)15(17)12-6-3-2-4-7-12/h2-11H,1H3,(H,18,19)\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of the gene that matches the given URL \"http://identifiers.org/ncbigene/23568\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/23568\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the compound whose InChI is defined as \"InChI=1S/C13H6Cl6O2/c14-6-2-8(16)12(20)4(10(6)18)1-5-11(19)7(15)3-9(17)13(5)21/h2-3,20-21H,1H2\".", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C13H6Cl6O2/c14-6-2-8(16)12(20)4(10(6)18)1-5-11(19)7(15)3-9(17)13(5)21/h2-3,20-21H,1H2\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name corresponding to the compound with the InChI \"InChI=1S/C11H11F3N2O3/c1-6(2)10(17)15-7-3-4-9(16(18)19)8(5-7)11(12,13)14/h3-6H,1-2H3,(H,15,17)\" in the database?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C11H11F3N2O3/c1-6(2)10(17)15-7-3-4-9(16(18)19)8(5-7)11(12,13)14/h3-6H,1-2H3,(H,15,17)\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the compound that has the name \"Metixene.\"", "output": "MATCH (n:Compound) WHERE n.name = \"Metixene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name of the symptom linked to the specific URL \"http://identifiers.org/mesh/D019080\"?", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D019080\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name of the pathway identified by \"PC7_4207\" in the database?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_4207\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the gene with a description of \"mitochondrial ribosomal protein L44\"?", "output": "MATCH (n:Gene) WHERE n.description = \"mitochondrial ribosomal protein L44\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the name of the pharmacologic class with the specific URL \"http://purl.bioontology.org/ontology/NDFRT/N0000187063\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000187063\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of pharmacologic classes whose license type is \"CC BY 4.0\".", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique identifier of the symptom labeled as \"Syncope\"?", "output": "MATCH (n:Symptom) WHERE n.name = \"Syncope\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all pathways whose source is identified as \"Reactome via Pathway Commons.\"", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of all cellular components whose license is \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class has the identifier \"N0000190482\" and what is its name?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier = \"N0000190482\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the name of the gene that uses \"http://identifiers.org/ncbigene/84914\" as its URL identifier?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/84914\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the gene whose URL is \"http://identifiers.org/ncbigene/84287\".", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/84287\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifier is returned for a cellular component whose name is \"eukaryotic translation initiation factor 2B complex\"?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"eukaryotic translation initiation factor 2B complex\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the name of the compound whose InChIKey is \"LZCDAPDGXCYOEH-UHFFFAOYSA-N\".", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=LZCDAPDGXCYOEH-UHFFFAOYSA-N\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound has a URL of \"http://www.drugbank.ca/drugs/DB00962\" and what is its name?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00962\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique identifier associated with the symptom \"Psychomotor Agitation\"?", "output": "MATCH (n:Symptom) WHERE n.name = \"Psychomotor Agitation\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the unique identifier for a CellularComponent called \"BLOC-3 complex\"?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"BLOC-3 complex\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the pathways whose license is \"CC BY 4.0\" and return their unique identifiers.", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I need to know the gene name associated with the URL \"http://identifiers.org/ncbigene/152518\". What is it?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/152518\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the compound with the InChIKey \"InChIKey=HNDVDQJCIGZPNO-YFKPBYRVSA-N\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=HNDVDQJCIGZPNO-YFKPBYRVSA-N\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers for pharmacologic classes that come from the \"FDA via DrugCentral\" source?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we retrieve the identifier of a compound that matches the InChIKey \"InChIKey=XAUDJQYHKZQPEU-KVQBGUIXSA-N\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=XAUDJQYHKZQPEU-KVQBGUIXSA-N\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of molecular functions that possess the \"CC BY 4.0\" license.", "output": "MATCH (n:MolecularFunction) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the name of the compound whose URL corresponds to \"http://www.drugbank.ca/drugs/DB00464\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00464\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of cellular components that possess the license type \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I retrieve the identifier for the biological process that is labeled as \"pore complex assembly\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name = \"pore complex assembly\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound that has the URL \"http://www.drugbank.ca/drugs/DB00348\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00348\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of genes that have the \"CC0 1.0\" licensing?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of a cellular component named \"cell tip\"?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"cell tip\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the gene whose name is \"SMPD1\".", "output": "MATCH (n:Gene) WHERE n.name = \"SMPD1\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathway names are associated with the source labeled \"PID via Pathway Commons\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"PID via Pathway Commons\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the cellular component whose name is \"elongin complex\".", "output": "MATCH (n:CellularComponent) WHERE n.name = \"elongin complex\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of all symptoms whose license is categorized as \"CC0 1.0\".", "output": "MATCH (n:Symptom) WHERE n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for pathways that are licensed as \"CC BY 4.0\".", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find identifiers of all genes that have been assigned a license type of \"CC0 1.0\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the pathways sourced from \"Reactome via Pathway Commons\" in our database?", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier for the compound located at the DrugBank URL \"http://www.drugbank.ca/drugs/DB00936\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00936\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the symptom that has the URL \"http://identifiers.org/mesh/D001836\"?", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D001836\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all compounds with a \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound's identifier corresponds to the given InChI string \"InChI=1S/C13H13N3/c1-2-16-13-5-11-9-3-8(6-14-7-9)10(11)4-12(13)15-1/h1-2,4-5,8-9,14H,3,6-7H2/t8-,9+\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C13H13N3/c1-2-16-13-5-11-9-3-8(6-14-7-9)10(11)4-12(13)15-1/h1-2,4-5,8-9,14H,3,6-7H2/t8-,9+\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of names for pharmacologic class entities with a source of \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of all biological processes that come with a \"CC BY 4.0\" license?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the identifiers for genes where the license is specified as \"CC0 1.0\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the name of the BiologicalProcess that corresponds to the URL \"http://purl.obolibrary.org/obo/GO_0060973\".", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0060973\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifier corresponds to the symptom with the name \"Chronic Pain\"?", "output": "MATCH (n:Symptom) WHERE n.name = \"Chronic Pain\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of cellular components that originate from the Gene Ontology source.", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of all pathways that have \"Reactome via Pathway Commons\" as their source.", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do you get the identifiers of compounds that have DrugBank mentioned as their source?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of all biological processes that hold the \"CC BY 4.0\" licensing.", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound that has the InChIKey \"UVSMNLNDYGZFPF-UHFFFAOYNA-N\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=UVSMNLNDYGZFPF-UHFFFAOYNA-N\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of symptoms that are licensed under \"CC0 1.0\"?", "output": "MATCH (n:Symptom) WHERE n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the gene named \"LECT1\"?", "output": "MATCH (n:Gene) WHERE n.name = \"LECT1\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifier is associated with the compound that goes by the name \"Fenoterol\"?", "output": "MATCH (n:Compound) WHERE n.name = \"Fenoterol\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the pathway named \"DNA Replication\"?", "output": "MATCH (n:Pathway) WHERE n.name = \"DNA Replication\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers for all symptoms marked with the \"CC0 1.0\" license?", "output": "MATCH (n:Symptom) WHERE n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the gene with the identifier 92283?", "output": "MATCH (n:Gene) WHERE n.identifier = 92283 RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the cellular components whose license is \"CC BY 4.0\" and provide their names?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the identifier for the molecular function whose URL is \"http://purl.obolibrary.org/obo/GO_0032934\"?", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0032934\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the names of pathways whose license is specified as \"CC BY 4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of biological processes that are available under the \"CC BY 4.0\" license.", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name of the anatomy node that has an identifier of \"UBERON:0003129\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier = \"UBERON:0003129\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all gene names associated with a CC0 1.0 license?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are associated with the source called Entrez Gene?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers for anatomy nodes that come from the \"Uberon\" source?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pathway names where the license type is \"CC BY 4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of pharmacologic classes where the class type is specified as \"Mechanism of Action\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.class_type = \"Mechanism of Action\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy entries are associated with a license of \"CC BY 3.0\"?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the MolecularFunction node that matches the URL \"http://purl.obolibrary.org/obo/GO_0010997\".", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0010997\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of genes that have been released with a CC0 1.0 license.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of pathways whose license is \"CC0 1.0\"?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC0 1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers are associated with DrugBank as their source?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the anatomy elements that possess a \"CC BY 3.0\" license and provide their names.", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of compounds that originate from DrugBank?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function corresponds to the identifier \"GO:0005086,\" and what is its name?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier = \"GO:0005086\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compound names are associated with the \"CC BY-NC 4.0\" license category?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of biological processes that originate from the Gene Ontology source.", "output": "MATCH (n:BiologicalProcess) WHERE n.source = \"Gene Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the anatomy entity with the URL \"http://purl.obolibrary.org/obo/UBERON_0001003\"?", "output": "MATCH (n:Anatomy) WHERE n.url = \"http://purl.obolibrary.org/obo/UBERON_0001003\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function has the URL \"http://purl.obolibrary.org/obo/GO_0005010\" and what is its name?", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0005010\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the biological process with the URL \"http://purl.obolibrary.org/obo/GO_0086065\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0086065\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the name of the cellular component with the given identifier \"GO:0042825\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier = \"GO:0042825\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the name of the SideEffect node that has the URL \"http://identifiers.org/umls/C0750151\"?", "output": "MATCH (n:SideEffect) WHERE n.url = \"http://identifiers.org/umls/C0750151\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers are associated with anatomy entries whose source is \"Uberon\"?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for pathways licensed under \"CC BY 3.0\".", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for pharmacologic classes where the class type is specified as \"Chemical/Ingredient\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.class_type = \"Chemical/Ingredient\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways carry the \"CC BY 4.0\" license, and what are their corresponding names?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve up to eight identifiers of genes whose description is \"RAB24, member RAS oncogene family.\"", "output": "MATCH (n:Gene) WHERE n.description = \"RAB24, member RAS oncogene family\" RETURN n.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the gene associated with Treacher Collins-Franceschetti syndrome 1?", "output": "MATCH (n:Gene) WHERE n.description = \"Treacher Collins-Franceschetti syndrome 1\" RETURN n.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which two genes, if any, have the description \"neuroblastoma breakpoint family, member 19-like\" and what are their identifiers?", "output": "MATCH (n:Gene) WHERE n.description = \"neuroblastoma breakpoint family, member 19-like\" RETURN n.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve identifiers for no more than eight genes that hold the \"CC0 1.0\" license?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of the gene nodes that have the URL \"http://identifiers.org/ncbigene/84287\".", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/84287\" RETURN n.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that match the InChI value \"InChI=1S/C23H29ClFN3O4/c1-30-21-13-19(26)18(24)12-17(21)23(29)27-20-8-10-28(14-22(20)31-2)9-3-11-32-16-6-4-15(25)5-7-16/h4-7,12-13,20,22H,3,8-11,14,26H2,1-2H3,(H,27,29)/t20-,22+/m1/s1\", listing only up to five of them?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C23H29ClFN3O4/c1-30-21-13-19(26)18(24)12-17(21)23(29)27-20-8-10-28(14-22(20)31-2)9-3-11-32-16-6-4-15(25)5-7-16/h4-7,12-13,20,22H,3,8-11,14,26H2,1-2H3,(H,27,29)/t20-,22+/m1/s1\" RETURN n.name LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names of the first eight compounds that match the URL \"http://www.drugbank.ca/drugs/DB00464\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00464\" RETURN n.name LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of up to four anatomy nodes that have the URL set to \"http://purl.obolibrary.org/obo/UBERON_0001003\".", "output": "MATCH (n:Anatomy) WHERE n.url = \"http://purl.obolibrary.org/obo/UBERON_0001003\" RETURN n.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers are returned for the pharmacologic class titled \"Increased Hematopoietic Stem Cell Mobilization\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.name = \"Increased Hematopoietic Stem Cell Mobilization\" RETURN n.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of cellular components that have the identifier \"GO:0042825,\" showing just four results.", "output": "MATCH (n:CellularComponent) WHERE n.identifier = \"GO:0042825\" RETURN n.name LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of the nine molecular functions that are licensed under \"CC BY 4.0.\"", "output": "MATCH (n:MolecularFunction) WHERE n.license = \"CC BY 4.0\" RETURN n.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the gene identifiers for \"LECT1\", limited to nine results?", "output": "MATCH (n:Gene) WHERE n.name = \"LECT1\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find up to eight identifiers for the compound with the URL \"http://www.drugbank.ca/drugs/DB00936\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00936\" RETURN n.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one obtain the identifiers of the cellular component with the name \"elongin complex,\" limiting the results to four?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"elongin complex\" RETURN n.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of no more than six genes with the URL \"http://identifiers.org/ncbigene/84914\".", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/84914\" RETURN n.name LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifiers for cellular components with the name \"eukaryotic translation initiation factor 2B complex\"?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"eukaryotic translation initiation factor 2B complex\" RETURN n.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of the first three genes with the description \"family with sequence similarity 227, member A\"?", "output": "MATCH (n:Gene) WHERE n.description = \"family with sequence similarity 227, member A\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for up to five pathways that have the license type \"CC BY 4.0\".", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve six identifiers of anatomy nodes that specify \"Uberon\" as their source?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN n.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifier values are returned for the cellular component labeled as \"BLOC-3 complex\"?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"BLOC-3 complex\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifier of one biological process where the license is specified as \"CC BY 4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve and display the identifier of a gene with a \"CC0 1.0\" license. What is it?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of three symptoms that possess a \"CC0 1.0\" license.", "output": "MATCH (n:Symptom) WHERE n.license = \"CC0 1.0\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers correspond to genes labeled \"mitochondrial ribosomal protein L44,\" limited to six results?", "output": "MATCH (n:Gene) WHERE n.description = \"mitochondrial ribosomal protein L44\" RETURN n.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for compounds where the InChI matches \"InChI=1S/C13H6Cl6O2/c14-6-2-8(16)12(20)4(10(6)18)1-5-11(19)7(15)3-9(17)13(5)21/h2-3,20-21H,1H2\", but only show the first ten results.", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C13H6Cl6O2/c14-6-2-8(16)12(20)4(10(6)18)1-5-11(19)7(15)3-9(17)13(5)21/h2-3,20-21H,1H2\" RETURN n.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular component with a CC BY 4.0 license is the query retrieving the name of first?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.name LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How could you retrieve the names of genes linked to the URL \"http://identifiers.org/ncbigene/158067,\" showing only up to seven entries?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/158067\" RETURN n.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve up to three identifiers for the gene that has the name \"SMPD1.\"", "output": "MATCH (n:Gene) WHERE n.name = \"SMPD1\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of genes licensed under \"CC0 1.0\" with a limit of nine?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve up to three identifiers for the molecular function that corresponds to the URL \"http://purl.obolibrary.org/obo/GO_0010997\".", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0010997\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifier associated with the Gene node whose URL is exactly \"http://identifiers.org/ncbigene/23568\", limiting the result to six entries.", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/23568\" RETURN n.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the identifiers of \"DNA Replication\" pathways, limited to nine entries?", "output": "MATCH (n:Pathway) WHERE n.name = \"DNA Replication\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of up to seven compounds that have the URL \"http://www.drugbank.ca/drugs/DB00348\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00348\" RETURN n.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names are associated with the identifier \"PC7_4207,\" displaying only the first seven matches?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_4207\" RETURN n.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve nine or fewer compound identifiers whose InChI property is exactly \"InChI=1S/C13H13N3/c1-2-16-13-5-11-9-3-8(6-14-7-9)10(11)4-12(13)15-1/h1-2,4-5,8-9,14H,3,6-7H2/t8-,9+\".", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C13H13N3/c1-2-16-13-5-11-9-3-8(6-14-7-9)10(11)4-12(13)15-1/h1-2,4-5,8-9,14H,3,6-7H2/t8-,9+\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What name is returned for the compound with the URL \"http://www.drugbank.ca/drugs/DB00962\" in the dataset?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00962\" RETURN n.name LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of three compounds whose license is specified as \"CC BY-NC 4.0\".", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN n.name LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of molecular functions whose identifier matches \"GO:0005086\", with a maximum return of nine entries.", "output": "MATCH (n:MolecularFunction) WHERE n.identifier = \"GO:0005086\" RETURN n.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve up to five names of molecular functions that have the exact URL \"http://purl.obolibrary.org/obo/GO_0005010\".", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0005010\" RETURN n.name LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the Molecular Function node for the given URL: \"http://purl.obolibrary.org/obo/GO_0032934\".", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0032934\" RETURN n.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of compounds that have the name \"Metixene\" up to a maximum of nine results?", "output": "MATCH (n:Compound) WHERE n.name = \"Metixene\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of the first ten compounds with the specific InChIKey \"InChIKey=XAUDJQYHKZQPEU-KVQBGUIXSA-N\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=XAUDJQYHKZQPEU-KVQBGUIXSA-N\" RETURN n.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How does this query fetch the names of two pathways originating from the source \"PID via Pathway Commons\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"PID via Pathway Commons\" RETURN n.name LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain identifiers for a maximum of four symptoms with a \"CC0 1.0\" license?", "output": "MATCH (n:Symptom) WHERE n.license = \"CC0 1.0\" RETURN n.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological process identifiers are we retrieving that have a \"CC BY 4.0\" license, limited to four results?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the first two identifiers for the compound with the URL \"http://www.drugbank.ca/drugs/DB00563\" in the database?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00563\" RETURN n.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of symptoms having the identifier URL \"http://identifiers.org/mesh/D001836\"?", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D001836\" RETURN n.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which three compounds from DrugBank have their identifiers retrieved in this query?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find and return the names of five pathways that have \"Reactome via Pathway Commons\" as their source.", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n.name LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of molecular functions with the URL \"http://purl.obolibrary.org/obo/GO_0032029\", limiting the results to six.", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0032029\" RETURN n.name LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the pharmacologic class associated with the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000187063\"? Please give me up to seven results.", "output": "MATCH (n:PharmacologicClass) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000187063\" RETURN n.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pathway names that hold a \"CC BY 4.0\" license, with a maximum of four results?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.name LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the molecular function identifiers with a \"CC BY 4.0\" license, listing up to nine of them.", "output": "MATCH (n:MolecularFunction) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which two cellular component identifiers are retrieved from nodes with the source 'Gene Ontology'?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN n.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the gene names for the node that has the URL \"http://identifiers.org/ncbigene/152518\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/152518\" RETURN n.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is a selection of nine pathway names provided by the source \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound has the name associated with the InChI formula \"InChI=1S/C11H11F3N2O3/c1-6(2)10(17)15-7-3-4-9(16(18)19)8(5-7)11(12,13)14/h3-6H,1-2H3,(H,15,17)\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C11H11F3N2O3/c1-6(2)10(17)15-7-3-4-9(16(18)19)8(5-7)11(12,13)14/h3-6H,1-2H3,(H,15,17)\" RETURN n.name LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the first four cellular components sourced from the Gene Ontology database?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN n.name LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of the first five symptoms labeled as \"Syncope\"?", "output": "MATCH (n:Symptom) WHERE n.name = \"Syncope\" RETURN n.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for a biological process node with the specific URL \"http://purl.obolibrary.org/obo/GO_0086065\", limiting the results to three.", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0086065\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have the identifier \"PC7_2523,\" and what are their names, limited to eight entries?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_2523\" RETURN n.name LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds with the InChIKey \"InChIKey=LZCDAPDGXCYOEH-UHFFFAOYSA-N\" in the database?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=LZCDAPDGXCYOEH-UHFFFAOYSA-N\" RETURN n.name LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifiers of the initial nine DrugBank compounds recorded in the database?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of each compound with the \"CC BY-NC 4.0\" license, up to four entries?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN n.name LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic class names are associated with the identifier \"N0000190482,\" showing at most seven entries?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier = \"N0000190482\" RETURN n.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of the first seven pharmacologic classes from the source \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN n.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of symptoms that share the identifier \"D020069\", showing only a maximum of ten entries?", "output": "MATCH (n:Symptom) WHERE n.identifier = \"D020069\" RETURN n.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene records have their license set to \"CC0 1.0\", and what are their identifiers?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the first seven symptom names where the source is indicated as MeSH in the records.", "output": "MATCH (n:Symptom) WHERE n.source = \"MeSH\" RETURN n.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the name of the compound that matches the InChIKey \"UVSMNLNDYGZFPF-UHFFFAOYNA-N\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=UVSMNLNDYGZFPF-UHFFFAOYNA-N\" RETURN n.name LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and display the identifiers of three cellular components that use the \"CC BY 4.0\" license?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers for the first nine symptoms labeled as \"Chronic Pain\" in the database?", "output": "MATCH (n:Symptom) WHERE n.name = \"Chronic Pain\" RETURN n.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify a biological process node that has the \"CC BY 4.0\" license and return its identifier.", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of up to three pathways sourced from \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n.name LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of ten pharmacologic classes that hold the \"CC BY 4.0\" license.", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN n.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers correspond to the symptom named \"Psychomotor Agitation\", with a maximum of four results?", "output": "MATCH (n:Symptom) WHERE n.name = \"Psychomotor Agitation\" RETURN n.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list up to nine names of anatomy entities that have the identifier \"UBERON:0003129\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier = \"UBERON:0003129\" RETURN n.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers are returned for compounds when their InChIKey is \"InChIKey=HNDVDQJCIGZPNO-YFKPBYRVSA-N\", limiting the results to three?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=HNDVDQJCIGZPNO-YFKPBYRVSA-N\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list up to two identifiers of compounds that match the InChI representation \"InChI=1S/C16H14O3/c1-11(16(18)19)13-8-5-9-14(10-13)15(17)12-6-3-2-4-7-12/h2-11H,1H3,(H,18,19)\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C16H14O3/c1-11(16(18)19)13-8-5-9-14(10-13)15(17)12-6-3-2-4-7-12/h2-11H,1H3,(H,18,19)\" RETURN n.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, restricted to four, have their license set as \"CC0 1.0\", and what are their identifiers?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes, specifically those with a class type of \"Mechanism of Action,\" have their first three identifiers returned?", "output": "MATCH (n:PharmacologicClass) WHERE n.class_type = \"Mechanism of Action\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases correspond to the identifier \"DOID:175\" in the database?", "output": "MATCH (n:Disease) WHERE n.identifier = \"DOID:175\" RETURN n.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifiers of the first seven pathway nodes that are licensed with \"CC BY 4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the first two identifiers of cellular components with a \"CC BY 4.0\" license?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are some gene names that have the source specified as \"Entrez Gene,\" and show up to four of them?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" RETURN n.name LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How does the query extract and display nine anatomical names linked to Uberon from the dataset?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN n.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list up to six identifiers for biological processes where the license is \"CC BY 4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list two pathways whose license is \"CC BY 4.0\" by their names?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.name LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are associated with chromosome 3, limited to three results?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"3\" RETURN n.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list up to nine pharmacologic class names sourced from the FDA via DrugCentral?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN n.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names can be found on chromosome 5, limited to the first five results?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"5\" RETURN n.name LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifier can be returned for an anatomy node with the \"Uberon\" source?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN n.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the names of three symptoms that originate from the MeSH source?", "output": "MATCH (n:Symptom) WHERE n.source = \"MeSH\" RETURN n.name LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of genes, with a maximum of ten, whose license type is \"CC0 1.0\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names of symptoms does the query retrieve with the URL \"http://identifiers.org/mesh/D019080\"?", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D019080\" RETURN n.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names are returned from anatomy nodes with a license type of \"CC BY 3.0\", limiting the output to six results?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN n.name LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of each pathway with a \"CC BY 3.0\" license, with a maximum of five names being returned?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 3.0\" RETURN n.name LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the Gene Ontology source, what is a molecular function name that can be retrieved?", "output": "MATCH (n:MolecularFunction) WHERE n.source = \"Gene Ontology\" RETURN n.name LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve up to four identifiers of anatomical nodes associated with the MeSH ID \"D017536\"?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D017536\" RETURN n.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers does the query retrieve for MolecularFunction nodes that have a \"CC BY 4.0\" license, with a cap of eight entries?", "output": "MATCH (n:MolecularFunction) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain the distinct InChIKey for a compound whose InChI is given as \"InChI=1S/C16H38N2/c1-17(2,3)15-13-11-9-7-8-10-12-14-16-18(4,5)6/h7-16H2,1-6H3/q+2\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C16H38N2/c1-17(2,3)15-13-11-9-7-8-10-12-14-16-18(4,5)6/h7-16H2,1-6H3/q+2\" RETURN DISTINCT n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of the molecular function that has the name \"peptide-methionine (R)-S-oxide reductase activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"peptide-methionine (R)-S-oxide reductase activity\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the distinct identifier for the gene that has the description \"1-acylglycerol-3-phosphate O-acyltransferase 2\".", "output": "MATCH (n:Gene) WHERE n.description = \"1-acylglycerol-3-phosphate O-acyltransferase 2\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the distinct URL for the compound identified by \"DB04890\"?", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB04890\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of genes that have the description \"sodium channel, voltage gated, type X alpha subunit\"?", "output": "MATCH (n:Gene) WHERE n.description = \"sodium channel, voltage gated, type X alpha subunit\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the collection of licenses for the \"Dihydrofolate Reductase Inhibitors\" pharmacologic class?", "output": "MATCH (n:PharmacologicClass) WHERE n.name = \"Dihydrofolate Reductase Inhibitors\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct sources associated with the molecular function named \"fatty-acyl-CoA synthase activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"fatty-acyl-CoA synthase activity\" RETURN DISTINCT n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the distinct identifier for the \"Hypoxia-mediated EMT and Stemness\" pathway node.", "output": "MATCH (n:Pathway) WHERE n.name = \"Hypoxia-mediated EMT and Stemness\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique licenses correspond to the compound with the name \"Carbinoxamine\"?", "output": "MATCH (n:Compound) WHERE n.name = \"Carbinoxamine\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the unique identifier for the Pathway named \"Signaling by FGFR in disease\"?", "output": "MATCH (n:Pathway) WHERE n.name = \"Signaling by FGFR in disease\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct URLs for all compounds where the license is \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct URL associated with the compound \"Estradiol valerate/Dienogest\"?", "output": "MATCH (n:Compound) WHERE n.name = \"Estradiol valerate/Dienogest\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the specific identifier for the pathway that has the name \"Signaling by Activin.\"", "output": "MATCH (n:Pathway) WHERE n.name = \"Signaling by Activin\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the distinct URL of the Pathway node that has \"PC7_7767\" as its identifier.", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_7767\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene identifiers correspond to the description \"outer dense fiber of sperm tails 4\"?", "output": "MATCH (n:Gene) WHERE n.description = \"outer dense fiber of sperm tails 4\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct licenses can be found for pathways originating from the source \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique licenses of the gene described as \"interphotoreceptor matrix proteoglycan 1\"?", "output": "MATCH (n:Gene) WHERE n.description = \"interphotoreceptor matrix proteoglycan 1\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve a list of unique identifiers for pathways with the source specified as \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique chromosome is associated with the gene described as \"oviductal glycoprotein 1, 120kDa\"?", "output": "MATCH (n:Gene) WHERE n.description = \"oviductal glycoprotein 1, 120kDa\" RETURN DISTINCT n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the unique ID of the gene that is labeled as \"OAF\"?", "output": "MATCH (n:Gene) WHERE n.name = \"OAF\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the license details of the compound whose URL is \"http://www.drugbank.ca/drugs/DB08820\".", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB08820\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you return the distinct license of the gene with a URL specified as \"http://identifiers.org/ncbigene/26301\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/26301\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the distinct identifier associated with the molecular function called \"transcription factor activity, RNA polymerase II basal transcription factor binding\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"transcription factor activity, RNA polymerase II basal transcription factor binding\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique URLs of cellular components sourced from the Gene Ontology database?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound with the InChIKey \"InChIKey=AIXAANGOTKPUOY-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=AIXAANGOTKPUOY-UHFFFAOYSA-N\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct ID of the gene with the name \"SDC4\"?", "output": "MATCH (n:Gene) WHERE n.name = \"SDC4\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the different URLs associated with pathways possessing a \"CC BY 4.0\" license.", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the unique name of the pharmacologic class associated with the identifier \"N0000175982\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier = \"N0000175982\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the distinct name of the compound with the specified InChI string \"InChI=1S/C20H23NO4/c22-13-4-3-12-9-15-20(24)6-5-14(23)18-19(20,16(12)17(13)25-18)7-8-21(15)10-11-1-2-11/h3-4,11,15,18,22,24H,1-2,5-10H2/t15-,18+,19+,20-/m1/s1\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C20H23NO4/c22-13-4-3-12-9-15-20(24)6-5-14(23)18-19(20,16(12)17(13)25-18)7-8-21(15)10-11-1-2-11/h3-4,11,15,18,22,24H,1-2,5-10H2/t15-,18+,19+,20-/m1/s1\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify pharmacologic class names with the \"CC BY 4.0\" license without repeating any names.", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct name of the molecular function that has the identifier \"GO:0008374\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier = \"GO:0008374\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the unique license associated with the pathway that has the identifier \"PC7_3326\"?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_3326\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the distinct URL connected to the identifier \"GO:0070061\" within the `MolecularFunction` nodes.", "output": "MATCH (n:MolecularFunction) WHERE n.identifier = \"GO:0070061\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique licenses are returned for genes with a description of \"UBA domain containing 1\"?", "output": "MATCH (n:Gene) WHERE n.description = \"UBA domain containing 1\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique identifier for a cellular component linked to the URL \"http://purl.obolibrary.org/obo/GO_0032045\"?", "output": "MATCH (n:CellularComponent) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0032045\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct URLs can be retrieved for biological processes whose source is specified as \"Gene Ontology\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.source = \"Gene Ontology\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the distinct license associated with the pharmacologic class named \"Ketolides\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.name = \"Ketolides\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different licenses that apply to the disease entity with the name \"azoospermia\"?", "output": "MATCH (n:Disease) WHERE n.name = \"azoospermia\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct cellular component names, as identified by the Gene Ontology, can be retrieved?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct licenses associated with the molecular function that has the identifier \"GO:0015277\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier = \"GO:0015277\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique licenses associated with the symptom named \"Tremor\"?", "output": "MATCH (n:Symptom) WHERE n.name = \"Tremor\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct InChI value for the compound with the name \"Propylthiouracil\"?", "output": "MATCH (n:Compound) WHERE n.name = \"Propylthiouracil\" RETURN DISTINCT n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the exclusive list of compound names associated with the \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the exclusive identifier for the symptom \"Infantile Apparent Life-Threatening Event\"?", "output": "MATCH (n:Symptom) WHERE n.name = \"Infantile Apparent Life-Threatening Event\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct source entries related to the pharmacologic class whose URL is \"http://purl.bioontology.org/ontology/NDFRT/N0000009916\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000009916\" RETURN DISTINCT n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct pharmacologic class names that have the license \"CC BY 4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct compound names associated with the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one find the unique license of a symptom node given its URL \"http://identifiers.org/mesh/D054058\"?", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D054058\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct URL associated with the compound labeled with identifier \"DB01013\"?", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB01013\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the unique identifier associated with the \"CBM complex\" cellular component?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"CBM complex\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique anatomy names exist that are shared with a CC BY 3.0 license?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of pharmacologic class names that are uniquely associated with the \"CC BY 4.0\" license?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the list of distinct identifiers for pharmacologic classes that are shared under the \"CC BY 4.0\" license.", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the corresponding InChIKey for a compound whose InChI is \"InChI=1S/C31H36N2O11/c1-14(2)7-8-16-13-17(9-11-19(16)34)27(37)33-21-22(35)18-10-12-20(15(3)24(18)42-28(21)38)41-29-23(36)25(43-30(32)39)26(40-6)31(4,5)44-29/h7,9-13,23,25-26,29,34-36H,8H2,1-6H3,(H2,32,39)(H,33,37)/t23-,25+,26-,29-/m1/s1\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C31H36N2O11/c1-14(2)7-8-16-13-17(9-11-19(16)34)27(37)33-21-22(35)18-10-12-20(15(3)24(18)42-28(21)38)41-29-23(36)25(43-30(32)39)26(40-6)31(4,5)44-29/h7,9-13,23,25-26,29,34-36H,8H2,1-6H3,(H2,32,39)(H,33,37)/t23-,25+,26-,29-/m1/s1\" RETURN DISTINCT n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the name of the biological process linked to the URL \"http://purl.obolibrary.org/obo/GO_0000097\", ensuring it is distinct.", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0000097\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique descriptions of genes sourced from Entrez Gene?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" RETURN DISTINCT n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct InChIKey of the compound found at the specified DrugBank URL \"http://www.drugbank.ca/drugs/DB01324\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB01324\" RETURN DISTINCT n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound has the unique URL \"http://www.drugbank.ca/drugs/DB08871\", and what is its name?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB08871\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct licenses associated with cellular components in the Gene Ontology database?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all unique pathway sources that use the \"CC BY 4.0\" license.", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the unique description of the gene with the URL identifier \"http://identifiers.org/ncbigene/51667\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/51667\" RETURN DISTINCT n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct types of licenses exist for the cellular component identified as \"calcium channel complex\"?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"calcium channel complex\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct name of the biological process linked to the specific URL \"http://purl.obolibrary.org/obo/GO_0060956\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0060956\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique chromosomes are associated with genes that come from the Entrez Gene source?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" RETURN DISTINCT n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the distinct ID of the gene with the name \"SLC18A3\"?", "output": "MATCH (n:Gene) WHERE n.name = \"SLC18A3\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs are retrieved for anatomy nodes whose source is Uberon, ensuring each is unique?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the different URLs of genes that reside on chromosome 1?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"1\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct identifiers for pharmacologic classes that originate from the \"FDA via DrugCentral\" source.", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are uniquely identified with the source being \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique names associated with pharmacologic classes that possess a \"CC BY 4.0\" licensing.", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique licenses are associated with the cellular component that has the identifier \"GO:0070022\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier = \"GO:0070022\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of genes that have a license labeled as \"CC0 1.0\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct URLs for all SideEffect nodes that have \"UMLS via SIDER 4.1\" as their source?", "output": "MATCH (n:SideEffect) WHERE n.source = \"UMLS via SIDER 4.1\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique URLs associated with anatomy entities that have a \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the distinct pathway identifiers for those that have a source labeled as WikiPathways?", "output": "MATCH (n:Pathway) WHERE n.source = \"WikiPathways\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the distinct URLs for all genes associated with chromosome 6?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"6\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What source is associated with the Pathway that has the identifier \"PC7_3060\"?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_3060\" RETURN DISTINCT n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers for genes sourced from \"Entrez Gene\" in the database?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the distinct InChI for the compound that matches the URL \"http://www.drugbank.ca/drugs/DB08947\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB08947\" RETURN DISTINCT n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct CellularComponent names that are associated with the \"CC BY 4.0\" license?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the distinct license information for the biological process node with the given URL \"http://purl.obolibrary.org/obo/GO_0071599\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0071599\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the description of the gene identified by the URL \"http://identifiers.org/ncbigene/3670\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/3670\" RETURN DISTINCT n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct sources associated with the molecular function named \"malonyltransferase activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name = \"malonyltransferase activity\" RETURN DISTINCT n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the different URLs for genes that hold a CC0 1.0 license?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique licenses are associated with molecular functions sourced from the Gene Ontology?", "output": "MATCH (n:MolecularFunction) WHERE n.source = \"Gene Ontology\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List all the unique InChIKeys for compounds whose license is \"CC BY-NC 4.0\".", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the distinctive identifier for the anatomy labeled \"brain\"?", "output": "MATCH (n:Anatomy) WHERE n.name = \"brain\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return all the unique URLs of compounds that are licensed with \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier for the gene that corresponds to the website \"http://identifiers.org/ncbigene/5596\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/5596\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique gene names with the license type \"CC0 1.0\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the distinct International Chemical Identifier (InChI) for the compound that has the identifier \"DB00630\".", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB00630\" RETURN DISTINCT n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique identifiers belong to pharmacologic classes with a class type labeled \"Physiologic Effect\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.class_type = \"Physiologic Effect\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the unique ID numbers for each biological process that is covered by the \"CC BY 4.0\" license.", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct URLs for all cellular components where the license is \"CC BY 4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the specific license of the Pathway node with the identifier \"PC7_1543\"?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_1543\" RETURN DISTINCT n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have unique names and are associated with the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct URL is listed for the compound with the identifier \"DB00308\"?", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB00308\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique sources associated with the symptom that has the identifier \"D017109\"?", "output": "MATCH (n:Symptom) WHERE n.identifier = \"D017109\" RETURN DISTINCT n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the distinct URLs of biological processes with a \"CC BY 4.0\" licensing?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique sources listed for the compound named \"Imipramine\" in the database?", "output": "MATCH (n:Compound) WHERE n.name = \"Imipramine\" RETURN DISTINCT n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the pharmacologic class names for the entries that appear after skipping the first seven, limited to five results.", "output": "MATCH (n:PharmacologicClass) RETURN n.name SKIP 7 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names are returned when skipping the first three records and limiting the results to 15?", "output": "MATCH (n:Disease) RETURN n.name SKIP 3 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers of the symptoms after skipping the first four, displaying only ten results?", "output": "MATCH (n:Symptom) RETURN n.identifier SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of symptoms by bypassing the first seven and then limiting the result to 15 entries.", "output": "MATCH (n:Symptom) RETURN n.name SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you fetch the identifiers of Pathway nodes, beginning after skipping the first four entries and limiting the results to ten?", "output": "MATCH (n:Pathway) RETURN n.identifier SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve a list of up to 15 symptom identifiers, starting the count after leaving out the first six in the database.", "output": "MATCH (n:Symptom) RETURN n.identifier SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names are returned when you skip the first nine results and then limit the output to ten?", "output": "MATCH (n:Disease) RETURN n.name SKIP 9 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the next fifteen symptom IDs available after ignoring the first seven results?", "output": "MATCH (n:Symptom) RETURN n.identifier SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which Pathway identifiers are returned if you skip the first eight and limit the results to five?", "output": "MATCH (n:Pathway) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptom identifiers come after the first seven when listing them with a limit of 10 results?", "output": "MATCH (n:Symptom) RETURN n.identifier SKIP 7 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers are retrieved if the query skips the initial four genes and then returns the next ten?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me the gene names that are retrieved when the first eight results are bypassed, and a limit of 15 is applied?", "output": "MATCH (n:Gene) RETURN n.name SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathway identifiers come after the first eight when returning five results from the database?", "output": "MATCH (n:Pathway) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve the identifiers for diseases, omitting the first ten, and limiting the results to just ten entries?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 10 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the identifiers of five molecular functions, bypassing the initial six results?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names are retrieved when we skip the first 10 and then fetch the next 10?", "output": "MATCH (n:Disease) RETURN n.name SKIP 10 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are returned if we skip the first 7 genes and limit the results to 10?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 7 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of the next ten disease names after skipping the first five results?", "output": "MATCH (n:Disease) RETURN n.name SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of pharmacologic classes found in the result set when you ignore the first 9 entries and take the next 10?", "output": "MATCH (n:PharmacologicClass) RETURN n.name SKIP 9 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain identifiers for the pharmacologic classes, skipping the first three entries and limiting the results to 15?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier SKIP 3 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain ten pharmacologic class identifiers, ignoring the first seven results in the list?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier SKIP 7 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the next ten disease identifiers listed after bypassing the first five results?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "After skipping the initial two results, what are the identifiers of the next five genes in the database?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 2 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function names are listed after the first six in the results, limiting to five?", "output": "MATCH (n:MolecularFunction) RETURN n.name SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function identifiers are returned when the query skips six entries and then retrieves the next five?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease names come after skipping the first ten, showing only the next fifteen results?", "output": "MATCH (n:Disease) RETURN n.name SKIP 10 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene identifiers are available when the query skips the first ten matches and limits the return to ten entries?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 10 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve ten pharmacologic class names, after skipping the first eight entries in the list?", "output": "MATCH (n:PharmacologicClass) RETURN n.name SKIP 8 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I fetch the names of five pathways, while skipping the initial seven?", "output": "MATCH (n:Pathway) RETURN n.name SKIP 7 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve 10 gene identifiers, skipping the first 10 entries in the database?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 10 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers of pathways by omitting the first nine and showing the subsequent five results?", "output": "MATCH (n:Pathway) RETURN n.identifier SKIP 9 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene names retrieved when you skip the first four entries from a complete list and then select the next five?", "output": "MATCH (n:Gene) RETURN n.name SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers are returned for anatomy nodes when the query omits the first five, fetching just the following five nodes?", "output": "MATCH (n:Anatomy) RETURN n.identifier SKIP 5 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get the identifiers of five genes, ignoring the first eight results in the dataset?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the molecular functions retrieved, starting from the eighth one and limited to 15 results?", "output": "MATCH (n:MolecularFunction) RETURN n.name SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers are returned for Pathway nodes after discarding the first two, with a limit of five results?", "output": "MATCH (n:Pathway) RETURN n.identifier SKIP 2 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the anatomy node identifiers, skipping the first five records and limiting to five results?", "output": "MATCH (n:Anatomy) RETURN n.identifier SKIP 5 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of pharmacologic classes, skipping the first three, and limiting the results to 15?", "output": "MATCH (n:PharmacologicClass) RETURN n.name SKIP 3 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers correspond to diseases in the database, starting after the fourth entry, with a total of ten results returned?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are obtained when the query skips the first gene and limits the result to ten entries?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 1 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the output of the gene names if we ignore the first and fetch the next five?", "output": "MATCH (n:Gene) RETURN n.name SKIP 1 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the output of the disease identifiers if you bypass the first two entries and limit the result to ten?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 2 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names can I find if I ignore the first ten records and then view the subsequent ten?", "output": "MATCH (n:Gene) RETURN n.name SKIP 10 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers are returned for biological processes when you omit the first five results and limit the output to ten?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway identifiers are returned if the first six are bypassed and the next five are selected?", "output": "MATCH (n:Pathway) RETURN n.identifier SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers are listed for ten pharmacologic classes when the query skips the first six?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier SKIP 6 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of the genes, starting from the third one and up to a total of 10.", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 2 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of symptoms starting after the eighth one, with a maximum of five results?", "output": "MATCH (n:Symptom) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological process names are retrieved when skipping the first seven entries and limiting the results to ten?", "output": "MATCH (n:BiologicalProcess) RETURN n.name SKIP 7 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways' names are returned if we choose to ignore the first four listed in the dataset and limit the result to the next five?", "output": "MATCH (n:Pathway) RETURN n.name SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names appear in the results when skipping the first three and limiting to fifteen?", "output": "MATCH (n:Gene) RETURN n.name SKIP 3 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the symptoms starting from the seventh result, and how many will be retrieved if up to fifteen are displayed?", "output": "MATCH (n:Symptom) RETURN n.name SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy names appear in the database when we exclude the first 10 and display only the next 5?", "output": "MATCH (n:Anatomy) RETURN n.name SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve ten gene identifiers starting from the ninth entry onwards?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 8 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the next five identifiers for anatomy records if the first ten entries are not included in the results?", "output": "MATCH (n:Anatomy) RETURN n.identifier SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the output of the query that skips the first eight molecular function nodes and retrieves the identifiers of the subsequent five?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names are displayed when you fetch 15 of them after skipping the initial one?", "output": "MATCH (n:Pathway) RETURN n.name SKIP 1 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names of ten anatomy entities after skipping the initial five in the database?", "output": "MATCH (n:Anatomy) RETURN n.name SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for 15 molecular functions, omitting the first nine entries.", "output": "MATCH (n:MolecularFunction) RETURN n.identifier SKIP 9 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the next five gene identifiers returned after bypassing the initial ten entries?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes, skipping the first eight in the list and limiting the results to fifteen?", "output": "MATCH (n:Gene) RETURN n.name SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "After excluding the first four BiologicalProcess entries, what are the identifiers of the next five?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get a list of 15 disease identifiers starting after the fourth entry in the sequence?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 4 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do you get the Disease identifiers from the database, starting after the first two, and taking a total of five?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 2 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "After ignoring the first eight Pathway nodes, what are the next five Pathway names retrieved?", "output": "MATCH (n:Pathway) RETURN n.name SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve 15 molecular function identifiers, ignoring the initial three?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier SKIP 3 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the sequence of PharmacologicClass identifiers retrieved when you bypass the first 6 entries and take the subsequent 10?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier SKIP 6 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which five disease identifiers are retrieved right after the initial six are ignored in the database?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which five molecular functions are displayed after skipping the first four entries?", "output": "MATCH (n:MolecularFunction) RETURN n.name SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me the cellular component identifiers that appear after skipping the initial five, fetching the next five in line?", "output": "MATCH (n:CellularComponent) RETURN n.identifier SKIP 5 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the pathways, starting from the fifth one in the list, with a total of five results being returned?", "output": "MATCH (n:Pathway) RETURN n.name SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which 15 gene identifiers are retrieved from the database starting from the 9th entry?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "If you skip the first eight diseases, what are the identifiers of the following five diseases returned by the query?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptom names appear when you skip the first one and limit the results to ten entries?", "output": "MATCH (n:Symptom) RETURN n.name SKIP 1 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the molecular function identifiers, disregarding the initial four and obtaining up to fifteen results?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier SKIP 4 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve 15 Anatomy node identifiers, beginning the retrieval from the 9th entry?", "output": "MATCH (n:Anatomy) RETURN n.identifier SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names appear if you skip the first four entries and display the next five?", "output": "MATCH (n:Pathway) RETURN n.name SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers correspond to the pharmacologic classes located after the first four, limited to the next five found?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes are listed from positions five to nine in the dataset?", "output": "MATCH (n:PharmacologicClass) RETURN n.name SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are listed after skipping the first 7 in the result, and what are their names?", "output": "MATCH (n:Disease) RETURN n.name SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers belong to the next five diseases after the first one in the query results?", "output": "MATCH (n:Disease) RETURN n.identifier SKIP 1 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of ten symptoms after skipping the first three from the database?", "output": "MATCH (n:Symptom) RETURN n.name SKIP 3 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "After skipping the first four, what are the next 15 cellular component identifiers that can be retrieved?", "output": "MATCH (n:CellularComponent) RETURN n.identifier SKIP 4 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the molecular functions, excluding the first two in the list, when fetching the next 15 records?", "output": "MATCH (n:MolecularFunction) RETURN n.name SKIP 2 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the following five gene identifiers after skipping the first gene?", "output": "MATCH (n:Gene) RETURN n.identifier SKIP 1 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of compounds by starting from the seventh one and returning the next fifteen.", "output": "MATCH (n:Compound) RETURN n.name SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I list the names of anatomical nodes in the database, skipping the first, and limiting the results to ten?", "output": "MATCH (n:Anatomy) RETURN n.name SKIP 1 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list five anatomy names starting from the tenth one in the database?", "output": "MATCH (n:Anatomy) RETURN n.name SKIP 9 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which 15 molecular function identifiers come after the first eight in the sequence?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the next five symptom names after skipping the first nine in the list?", "output": "MATCH (n:Symptom) RETURN n.name SKIP 9 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve ten anatomical names from the database after omitting the initial five?", "output": "MATCH (n:Anatomy) RETURN n.name SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the names of ten symptoms by ignoring the first four and selecting the subsequent set?", "output": "MATCH (n:Symptom) RETURN n.name SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for compounds, skipping the first 10 results and displaying only the next 10?", "output": "MATCH (n:Compound) RETURN n.identifier SKIP 10 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names of cellular components are returned from the database after overlooking the first nine entries?", "output": "MATCH (n:CellularComponent) RETURN n.name SKIP 9 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers correspond to compounds in the database when excluding the first five and retrieving up to fifteen subsequent entries?", "output": "MATCH (n:Compound) RETURN n.identifier SKIP 5 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifiers for a set of ten symptoms, excluding the first four?", "output": "MATCH (n:Symptom) RETURN n.identifier SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which names of symptoms appear when you skip the first three entries and then retrieve the next five from the dataset?", "output": "MATCH (n:Symptom) RETURN n.name SKIP 3 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the molecular function names that rank from 6th to 20th in order?", "output": "MATCH (n:MolecularFunction) RETURN n.name SKIP 5 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which 15 pathway identifiers can be retrieved starting with the ninth one in a sequence of pathways?", "output": "MATCH (n:Pathway) RETURN n.identifier SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic class names appear in the database if you bypass the very first one and display the next ten?", "output": "MATCH (n:PharmacologicClass) RETURN n.name SKIP 1 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all anatomy nodes where the license property is not empty.", "output": "MATCH (n:Anatomy) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all nodes labeled as BiologicalProcess that possess a non-null name attribute.", "output": "MATCH (n:BiologicalProcess) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all Gene nodes where the name is specified and not empty?", "output": "MATCH (n:Gene) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pharmacologic classes without an assigned identifier property.", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all pharmacologic class nodes that possess a non-null license attribute?", "output": "MATCH (n:PharmacologicClass) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve anatomy nodes that possess an identifier.", "output": "MATCH (n:Anatomy) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all gene nodes that contain a non-null license value?", "output": "MATCH (n:Gene) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all Pathway nodes where the identifier property is not defined.", "output": "MATCH (n:Pathway) WHERE n.identifier IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all symptom nodes that have their name property filled in?", "output": "MATCH (n:Symptom) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all gene nodes that contain a URL?", "output": "MATCH (n:Gene) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all pathway entities that contain an identifier that is not null?", "output": "MATCH (n:Pathway) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pathways for which the URL field is not populated.", "output": "MATCH (n:Pathway) WHERE n.url IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all pharmacologic class nodes that have a specified class type?", "output": "MATCH (n:PharmacologicClass) WHERE n.class_type IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all genes whose description attribute has not been filled in?", "output": "MATCH (n:Gene) WHERE n.description IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve Anatomy nodes where the source field is filled in?", "output": "MATCH (n:Anatomy) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all nodes labeled as PharmacologicClass where the name is specified?", "output": "MATCH (n:PharmacologicClass) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the anatomy elements that do not contain any license information.", "output": "MATCH (n:Anatomy) WHERE n.license IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all the BiologicalProcess nodes that include a non-null URL attribute?", "output": "MATCH (n:BiologicalProcess) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What anatomy nodes have a non-null MeSH ID in the database?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all pharmacologic class nodes that have a URL associated with them?", "output": "MATCH (n:PharmacologicClass) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all molecular function entities that include a non-null license attribute.", "output": "MATCH (n:MolecularFunction) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic class nodes exist where the identifier property is specified and not empty?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all nodes representing biological processes where the identifier is not empty.", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do you retrieve pathways whose source field is empty?", "output": "MATCH (n:Pathway) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all molecular function nodes that possess a non-null name attribute?", "output": "MATCH (n:MolecularFunction) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the pathway nodes that possess a non-null name property within the graph?", "output": "MATCH (n:Pathway) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me all disease nodes that possess a non-null identifier value?", "output": "MATCH (n:Disease) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all pathway nodes that possess a license?", "output": "MATCH (n:Pathway) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find pharmacologic classes that haven't been assigned a URL value?", "output": "MATCH (n:PharmacologicClass) WHERE n.url IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all anatomy nodes where their name attribute is specified?", "output": "MATCH (n:Anatomy) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all gene nodes where the source property is currently null?", "output": "MATCH (n:Gene) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all `SideEffect` nodes that have a null or missing source attribute?", "output": "MATCH (n:SideEffect) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the list of genes that contain a non-null source value.", "output": "MATCH (n:Gene) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all disease entries that contain an associated URL.", "output": "MATCH (n:Disease) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all genes that have no URL specified?", "output": "MATCH (n:Gene) WHERE n.url IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease nodes contain a license field that is populated with data?", "output": "MATCH (n:Disease) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which PharmacologicClass nodes have a defined source value?", "output": "MATCH (n:PharmacologicClass) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all compound nodes that possess a non-null InChIKey property?", "output": "MATCH (n:Compound) WHERE n.inchikey IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all disease nodes that contain a value in the 'source' attribute?", "output": "MATCH (n:Disease) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway entries contain a source attribute that is not null?", "output": "MATCH (n:Pathway) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve genes that have no license attributed to them?", "output": "MATCH (n:Gene) WHERE n.license IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all 'MolecularFunction' nodes which possess a valid 'identifier'?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which 'Anatomy' entries have their BTO ID attribute set to null?", "output": "MATCH (n:Anatomy) WHERE n.bto_id IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which MolecularFunction nodes include a non-null source field in their data?", "output": "MATCH (n:MolecularFunction) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pathways for which a URL is specified.", "output": "MATCH (n:Pathway) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all molecular functions where the source information is absent.", "output": "MATCH (n:MolecularFunction) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all gene nodes that have an identifier value?", "output": "MATCH (n:Gene) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes in the database currently have a missing or null value for their name property?", "output": "MATCH (n:PharmacologicClass) WHERE n.name IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all Anatomy nodes where the BTO ID is provided?", "output": "MATCH (n:Anatomy) WHERE n.bto_id IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all cellular components where the URL is specified and not empty.", "output": "MATCH (n:CellularComponent) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes that have a null value for their chromosome?", "output": "MATCH (n:Gene) WHERE n.chromosome IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function nodes contain a non-null URL attribute?", "output": "MATCH (n:MolecularFunction) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all diseases in the database where the name field is not set?", "output": "MATCH (n:Disease) WHERE n.name IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all anatomy entries with non-null URL fields from the graph?", "output": "MATCH (n:Anatomy) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get all the disease entries with a defined name from the graph?", "output": "MATCH (n:Disease) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all biological processes that do not have a URL associated with them in the database?", "output": "MATCH (n:BiologicalProcess) WHERE n.url IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes labeled as \"Compound\" contain non-null name properties?", "output": "MATCH (n:Compound) WHERE n.name IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have chromosome information that isn't null in the database?", "output": "MATCH (n:Gene) WHERE n.chromosome IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all symptom entries that possess an identifier value?", "output": "MATCH (n:Symptom) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find symptoms that haven't been assigned any license information?", "output": "MATCH (n:Symptom) WHERE n.license IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I locate cellular component nodes that have a null value for their name property?", "output": "MATCH (n:CellularComponent) WHERE n.name IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all cellular components in the database that are missing a license attribute?", "output": "MATCH (n:CellularComponent) WHERE n.license IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component nodes possess a non-null identifier attribute?", "output": "MATCH (n:CellularComponent) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all nodes labeled as SideEffect where the URL field is filled in.", "output": "MATCH (n:SideEffect) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve symptoms that have not been provided with a name attribute?", "output": "MATCH (n:Symptom) WHERE n.name IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find molecular function records that do not include a license detail?", "output": "MATCH (n:MolecularFunction) WHERE n.license IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes in the system have no license information provided?", "output": "MATCH (n:PharmacologicClass) WHERE n.license IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find diseases for which the identifier property is currently not set?", "output": "MATCH (n:Disease) WHERE n.identifier IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological process nodes possess a non-null license attribute?", "output": "MATCH (n:BiologicalProcess) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all compounds in the dataset where the inchikey property is absent.", "output": "MATCH (n:Compound) WHERE n.inchikey IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all symptom nodes that include a URL?", "output": "MATCH (n:Symptom) WHERE n.url IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all symptom nodes where the license field is filled out?", "output": "MATCH (n:Symptom) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components have a non-null license attribute?", "output": "MATCH (n:CellularComponent) WHERE n.license IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all diseases that are missing a license field in their properties?", "output": "MATCH (n:Disease) WHERE n.license IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the disease nodes where the URL property is missing?", "output": "MATCH (n:Disease) WHERE n.url IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all anatomy nodes where the URL property is missing or not assigned?", "output": "MATCH (n:Anatomy) WHERE n.url IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all pharmacologic classes that do not have a specified class type?", "output": "MATCH (n:PharmacologicClass) WHERE n.class_type IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all symptoms in the database that do not have a specified source?", "output": "MATCH (n:Symptom) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound nodes have a non-empty identifier field in the database?", "output": "MATCH (n:Compound) WHERE n.identifier IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all pathways that are lacking a name value in the dataset?", "output": "MATCH (n:Pathway) WHERE n.name IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all biological process entities where the source attribute is present.", "output": "MATCH (n:BiologicalProcess) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy records have a null value for their identifier attribute?", "output": "MATCH (n:Anatomy) WHERE n.identifier IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all Compound nodes where the source is specified?", "output": "MATCH (n:Compound) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all genes that have non-empty descriptions?", "output": "MATCH (n:Gene) WHERE n.description IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pathways whose license attribute is currently unset or empty?", "output": "MATCH (n:Pathway) WHERE n.license IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes labeled as PharmacologicClass have a null value for their source property?", "output": "MATCH (n:PharmacologicClass) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all side effect nodes that include a non-null source attribute?", "output": "MATCH (n:SideEffect) WHERE n.source IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list all the genes that currently lack an ID in our dataset?", "output": "MATCH (n:Gene) WHERE n.identifier IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all compound nodes where the source property is missing?", "output": "MATCH (n:Compound) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the molecular function entries that have no identifier specified?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compounds have a null value for their identifier property in the database?", "output": "MATCH (n:Compound) WHERE n.identifier IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the molecular function records where the URL field is not set.", "output": "MATCH (n:MolecularFunction) WHERE n.url IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound nodes in the graph have a specified InChI property?", "output": "MATCH (n:Compound) WHERE n.inchi IS NOT NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find compounds where the name attribute has not been defined?", "output": "MATCH (n:Compound) WHERE n.name IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all anatomy entities whose source attribute has not been assigned?", "output": "MATCH (n:Anatomy) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components have no value set for the source property?", "output": "MATCH (n:CellularComponent) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve MolecularFunction nodes from the graph where the name property is not specified.", "output": "MATCH (n:MolecularFunction) WHERE n.name IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all the compounds that lack an InChI notation in their node properties.", "output": "MATCH (n:Compound) WHERE n.inchi IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are recorded without any associated source data?", "output": "MATCH (n:Disease) WHERE n.source IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the symptom nodes that do not have an identifier property set?", "output": "MATCH (n:Symptom) WHERE n.identifier IS NULL RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct anatomy identifiers linked to diseases through the LOCALIZES_DlA relationship, with the condition that the disease source is not \"Dise\"?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source <> \"Dise\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique identifiers of genes that are linked by a 'COVARIES_GcG' relationship to any gene not having an \"http\" URL?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct identifiers for genes that are connected to another gene by a 'COVARIES_GcG' relationship, excluding those genes with a \"CC0\" license?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license <> \"CC0 \" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct gene identifiers linked to any gene whose description isn't \"inte\" through a 'COVARIES_GcG' relationship?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.description <> \"inte\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of different gene names associated with genes through COVARIES_GcG relationships when the gene's license is not \"CC0\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license <> \"CC0 \" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique gene names that are linked through the COVARIES_GcG relationship to other genes that do not have a \"CC0\" license?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license <> \"CC0 \" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct gene identifiers are linked through the 'COVARIES_GcG' relationship to genes that do not have a URL equal to \"http\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different gene names that connect via the COVARIES_GcG relationship from genes with URLs other than \"http\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique genes connected via the ASSOCIATES_DaG relationship to diseases, omitting the disease called \"age\"?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) WHERE n.name <> \"age \" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers linked by an \"EXPRESSES_AeG\" relationship from anatomy nodes not associated with the \"Uber\" source? ", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source <> \"Uber\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of unique diseases linked to compounds through the PALLIATES_CpD relationship, where the compound's name isn't \"Acet\"?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.name <> \"Acet\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct diseases linked by a \"RESEMBLES_DrD\" relationship to another disease, where the originating disease does not have an identifier of \"DOID\"?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m:Disease) WHERE n.identifier <> \"DOID\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique disease identifiers are connected to compounds through the relationship 'PALLIATES_CpD', excluding compounds with the source labeled as 'Drug'?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.source <> \"Drug\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct gene names are there that are connected to genes located on chromosomes other than chromosome 7 through a \"COVARIES_GcG\" relationship?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.chromosome <> \"7\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of unique gene identifiers linked via the ASSOCIATES_DaG relationship to diseases that lack a \"CC B\" license?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene names are associated with any compound through the BINDS_CbG relationship, given that the compound's InChI identifier is not exactly \"InCh\"?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.inchi <> \"InCh\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct anatomy identifiers are associated with diseases that do not come from the \"Dise\" source via the LOCALIZES_DlA relationship?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source <> \"Dise\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique molecular function identifiers are associated with genes that have a URL other than \"http\" through the PARTICIPATES_GpMF relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct disease identifiers are linked to compounds with a license other than \"CC B\" through the TREATS_CtD relationship?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique gene names that are regulated through 'REGULATES_GrG' relationships by genes positioned on chromosomes other than the X chromosome?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m:Gene) WHERE n.chromosome <> \"X\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene names associated with upregulation by diseases, ignoring diseases with the identifier \"DOID\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.identifier <> \"DOID\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What's the total number of distinct gene identifiers affected by the DOWNREGULATES_CdG relationship, when not considering the compound \"DB00\"?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.identifier <> \"DB00\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct genes that are upregulated by diseases, considering only diseases that do not have a URL equal to \"http\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct anatomy entities localized by diseases, excluding those where the disease's URL is \"http\"?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the unique genes that have an \"UPREGULATES_AuG\" relationship from anatomy nodes, provided those anatomy nodes do not have a BTO ID of \"BTO:\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id <> \"BTO:\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique gene identifiers that are upregulated by anatomical entities, excluding those with a \"BTO:\" in their IDs?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id <> \"BTO:\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers linked to anatomy nodes, where the source does not equal Uber?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source <> \"Uber\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct genes are expressed by anatomy entities that do not have a URL tagged as \"http\"?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene identifiers are upregulated by anatomy nodes that do not have the MeSH ID \"D011\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.mesh_id <> \"D011\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique names of genes that are upregulated by anatomical parts not labeled with the identifier \"UBER\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.identifier <> \"UBER\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinctive anatomy identifiers involved in disease localization, considering only those diseases with licenses other than \"CC B\"?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique genes are expressed by anatomical elements, with the condition that the anatomy identifier is not \"UBER\"?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.identifier <> \"UBER\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct gene identifiers that are downregulated by diseases, excluding those named \"panc\"?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.name <> \"panc\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct identifiers for genes that take part in interactions with other genes, excluding those where the interacting gene's source is \"Entr\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.source <> \"Entr\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct identifiers for genes that are bound by compounds with a license other than CC B?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct anatomy names linked to diseases holding a license other than \"CC B\"?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct cellular component identifiers that are connected to genes excluding those whose description is \"heat\"?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.description <> \"heat\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the unique identifiers of genes that are downregulated by any disease not holding a \"CC B\" license?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique anatomy entities where diseases, excluding those with the identifier \"DOID,\" are localized?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.identifier <> \"DOID\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique identifiers for diseases that have a resemblance relationship, where the original disease's license is not \"CC B\"?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m:Disease) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique gene identifiers associated with anatomy entities not from the \"Uber\" source?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source <> \"Uber\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct genes affected by diseases, excluding the one specifically named \"panc,\" via upregulation connections?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.name <> \"panc\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the unique count of interacting gene names associated with genes that do not belong to chromosome 17?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.chromosome <> \"17\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct anatomy identifiers connected to diseases from sources other than \"Dise\" through the localization relationship?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source <> \"Dise\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you determine the count of unique genes whose identifiers are upregulated by any disease except the one identified as \"DOID\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.identifier <> \"DOID\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct symptom identifiers linked to diseases excluding those with a \"CC B\" license?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different genes that are subject to downregulation by anatomical structures whose BTO ID is not \"BTO:\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.bto_id <> \"BTO:\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct gene names influenced by downregulation from anatomy nodes, excluding those with a MeSH ID of \"D011\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.mesh_id <> \"D011\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of different genes that participate in a COVARIES_GcG relationship with gene nodes other than \"ZSCA\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.name <> \"ZSCA\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers affected by diseases with names other than \"panc\" through downregulation?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.name <> \"panc\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers that have interactions with any gene except \"DDX5\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.name <> \"DDX5\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct gene names does the \"IL2\" gene co-vary with through the \"COVARIES_GcG\" relationship?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.name <> \"IL2\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes expressed by anatomy items that do not have a BTO ID matching \"BTO:\"?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.bto_id <> \"BTO:\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct genes downregulated by any compound, as long as the compound's identifier is not \"DB00\"?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.identifier <> \"DB00\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique compound names that are connected through a 'RESEMBLES_CrC' relationship to compounds with an InChI key different from \"InCh\"?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.inchikey <> \"InCh\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct disease identifiers treated by compounds when the compound's URL is not \"http\"?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you determine the number of different anatomy names that are localized by diseases, provided the disease name isn't \"vasc\"?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.name <> \"vasc\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes that have a relationship of upregulation from anatomical nodes, provided the BTO ID is different from \"BTO:\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id <> \"BTO:\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct gene identifiers are there which are downregulated by anatomical entities, excluding those entities with a Mesh ID equal to \"D011\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.mesh_id <> \"D011\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique gene names connected through interactions with genes excluding those described as \"golg\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.description <> \"golg\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct compound identifiers found in pharmacologic classes excluding those with a \"CC B\" license?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct anatomy identifiers that have a localization relationship with diseases from sources other than \"Dise\"?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source <> \"Dise\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of different anatomy names linked to diseases where the disease's URL is not \"http\"?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct genes that are downregulated due to relationships with anatomy items excluding those with a CC B license?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene identifiers are there for genes that are upregulated by anatomical entities, with the constraint that the source of those entities is not 'Uber'?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.source <> \"Uber\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene names are upregulated by diseases with a license other than \"CC B\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct symptom identifiers linked to diseases where the URL does not match \"http\"?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique gene identifiers that compounds with a license different from \"CC B\" have an effect on through downregulation?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers for genes that are upregulated by any compound except those labeled as \"Drug\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.source <> \"Drug\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct gene names upregulated by diseases lacking the \"CC B\" license?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes that are downregulated by diseases which are not sourced from \"Dise\"?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.source <> \"Dise\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct gene names that have interactions with genes excluding those with the URL \"http\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of different gene names downregulated by anatomical nodes, considering only those anatomical nodes without the URL \"http\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct names of genes that interact with any gene whose URL attribute is not \"http\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct pathway identifiers for pathways linked to genes that do not have a \"CC0\" license?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.license <> \"CC0 \" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique cellular component identifiers to which genes are related, given that the gene description does not equal \"zinc\"?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.description <> \"zinc\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene identifiers are regulated in an upregulating manner by anatomical entries excluding those with a \"CC B\" license?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the number of different genes influenced by anatomy nodes, given that the license is not \"CC B\", using the \"UPREGULATES_AuG\" relation?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of unique disease names associated with compounds that have a non-\"Drug\" source and provide palliative effects?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.source <> \"Drug\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct genes that are bound by any compound, except the one with the identifier \"DB00\"?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.identifier <> \"DB00\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers that have covary relationships from genes excluding those with a \"CC0 \" license?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license <> \"CC0 \" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct pathway names associated with genes that do not have the CC0 license?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.license <> \"CC0 \" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers regulated positively by anatomy nodes excluding those identified as \"UBER\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.identifier <> \"UBER\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What count of unique gene identifiers are downregulated by anatomy nodes that aren't marked with the \"CC B\" license?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers upregulated by compounds, other than the compound identified as \"DB00\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.identifier <> \"DB00\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes that are upregulated by any anatomical component, provided the component's name is not \"pros\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.name <> \"pros\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene identifiers that are regulated by other genes, excluding those with the description \"auto\"?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m:Gene) WHERE n.description <> \"auto\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct symptoms presented by diseases that are not named 'spin'?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) WHERE n.name <> \"spin\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct gene names expressed in anatomical nodes that are not named \"pros\"?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.name <> \"pros\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct gene identifiers that are upregulated by compounds where the URL is not equal to \"http\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you calculate the number of unique compound identifiers that belong to pharmacologic classes with a URL not equal to \"http\"?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct anatomical parts where diseases not linked to the URL \"http\" localize?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.url <> \"http\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct pathway identifiers associated with genes other than the one named CRK?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.name <> \"CRK\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct biological process identifiers associated with genes whose name is not RIPK?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) WHERE n.name <> \"RIPK\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique compound identifiers associated with pharmacologic classes that do not have the identifier \"N000\"?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.identifier <> \"N000\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes that are upregulated by any compound with an InChIKey not equal to \"InCh\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.inchikey <> \"InCh\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct identifiers for compounds that resemble other compounds, excluding those compounds with a \"CC B\" license?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.license <> \"CC B\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique disease identifiers are treated by compounds that do not have the identifier \"DB00\"?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) WHERE n.identifier <> \"DB00\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique disease identifiers are there in the network of palliative connections with compounds, excluding those associated with the compound \"Cele\"?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.name <> \"Cele\" RETURN COUNT(DISTINCT(m.identifier))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct gene names upregulated through interactions with compounds excluding those with the identifier \"DB00\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.identifier <> \"DB00\" RETURN COUNT(DISTINCT(m.name))"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the license detail for each symptom entered in our database?", "output": "MATCH (n:Symptom) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the license assigned to each of the BiologicalProcess entities in the database?", "output": "MATCH (n:BiologicalProcess) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find out the license attribute for every disease entity stored?", "output": "MATCH (n:Disease) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier for every Pathway record within the database?", "output": "MATCH (n:Pathway) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of all symptoms stored in the database?", "output": "MATCH (n:Symptom) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the license values for all nodes labeled with 'CellularComponent'?", "output": "MATCH (n:CellularComponent) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the class_type values of all nodes labeled as PharmacologicClass?", "output": "MATCH (n:PharmacologicClass) RETURN n.class_type"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers for every cellular component in this database?", "output": "MATCH (n:CellularComponent) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the license details for each Anatomy node?", "output": "MATCH (n:Anatomy) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license attributes for all nodes labeled as \"Compound\"?", "output": "MATCH (n:Compound) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the license field from all \"Gene\" nodes?", "output": "MATCH (n:Gene) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URL property for every 'Pathway' entity in the database?", "output": "MATCH (n:Pathway) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names of each biological process in the dataset?", "output": "MATCH (n:BiologicalProcess) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the source information for every gene node within the dataset.", "output": "MATCH (n:Gene) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses for all pharmacologic classes?", "output": "MATCH (n:PharmacologicClass) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier property of every PharmacologicClass type node?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the chromosome information for each gene?", "output": "MATCH (n:Gene) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URLs linked to each disease within the graph?", "output": "MATCH (n:Disease) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve and show me the names of every pharmacologic class.", "output": "MATCH (n:PharmacologicClass) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain the identifiers of all \"BiologicalProcess\" nodes within the dataset?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the 'source' attribute from each 'Pathway' node?", "output": "MATCH (n:Pathway) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license information for each pathway in the dataset?", "output": "MATCH (n:Pathway) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get the URLs related to all the biological processes?", "output": "MATCH (n:BiologicalProcess) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the method to extract the identifiers of all MolecularFunction nodes from the dataset?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the different sources from where the pharmacologic class information is retrieved?", "output": "MATCH (n:PharmacologicClass) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the unique identifiers for each disease node within the dataset.", "output": "MATCH (n:Disease) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs linked to pharmacologic class nodes in this dataset?", "output": "MATCH (n:PharmacologicClass) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the unique identifiers of nodes that belong to the 'Anatomy' category?", "output": "MATCH (n:Anatomy) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses are recorded for molecular function entities?", "output": "MATCH (n:MolecularFunction) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the BTO IDs of all nodes labeled as \"Anatomy\" in the database?", "output": "MATCH (n:Anatomy) RETURN n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What mesh_id values are present for nodes labeled as Anatomy?", "output": "MATCH (n:Anatomy) RETURN n.mesh_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the source attributes of nodes labeled 'Anatomy'?", "output": "MATCH (n:Anatomy) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the description details for every node labeled 'Gene'?", "output": "MATCH (n:Gene) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the URL links for all symptoms stored in our system?", "output": "MATCH (n:Symptom) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the web links for every node labeled SideEffect. What are they?", "output": "MATCH (n:SideEffect) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs for all entities labeled \"Anatomy\"?", "output": "MATCH (n:Anatomy) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all diseases recorded in the database?", "output": "MATCH (n:Disease) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the unique identifiers of every compound recorded in the graph?", "output": "MATCH (n:Compound) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From where has the information for each disease been collected?", "output": "MATCH (n:Disease) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifier for every node with the label 'Gene'?", "output": "MATCH (n:Gene) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all Pathway nodes in the database?", "output": "MATCH (n:Pathway) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you extract the source attribute for every node labeled 'Compound'?", "output": "MATCH (n:Compound) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list all identifiers found under the SideEffect label?", "output": "MATCH (n:SideEffect) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the names of all gene entities in the system?", "output": "MATCH (n:Gene) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names have been assigned to each symptom in our database collection?", "output": "MATCH (n:Symptom) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs associated with each Gene node in the database?", "output": "MATCH (n:Gene) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the URLs for each node labeled as \"CellularComponent\"?", "output": "MATCH (n:CellularComponent) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs correspond to the entities categorized under the 'MolecularFunction' label?", "output": "MATCH (n:MolecularFunction) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the values of the 'source' property for all nodes classified as CellularComponent?", "output": "MATCH (n:CellularComponent) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What anatomical names are retrieved from the 'Anatomy' nodes in the data?", "output": "MATCH (n:Anatomy) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the originating sources for all symptoms recorded in the database?", "output": "MATCH (n:Symptom) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all cellular components listed in the database?", "output": "MATCH (n:CellularComponent) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs of every compound in the database?", "output": "MATCH (n:Compound) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the InChI codes of every compound stored in the graph?", "output": "MATCH (n:Compound) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the set of names returned from nodes under the MolecularFunction label?", "output": "MATCH (n:MolecularFunction) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of all nodes labeled as 'SideEffect'?", "output": "MATCH (n:SideEffect) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of up to seven genes that are linked to compounds with a \"CC BY-NC 4.0\" license through the BINDS_CbG relationship?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.license = \"CC BY-NC 4.0\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find and return the identifiers of genes expressed by anatomical structures sourced from Uberon, limiting the output to nine items?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source = \"Uberon\" RETURN m.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes that have a 'COVARIES_GcG' relationship with the gene having the URL \"http://identifiers.org/ncbigene/84254\", with a maximum of ten results?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/84254\" RETURN m.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of the genes, to a maximum of seven, expressed by the anatomy feature known as \"UBERON:0002367\".", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.identifier = \"UBERON:0002367\" RETURN m.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve up to seven gene identifiers that are influenced by the gene described as \"autophagy related 16-like 1 (S. cerevisiae)\".", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m:Gene) WHERE n.description = \"autophagy related 16-like 1 (S. cerevisiae)\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify up to six genes associated with interleukin 26 through a COVARIES_GcG relationship and provide their identifiers.", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.description = \"interleukin 26\" RETURN m.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for up to six genes that are associated with anatomical entities whose source is classified as \"Uberon\".", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source = \"Uberon\" RETURN m.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are expressed in the anatomy node identified by the URL \"http://purl.obolibrary.org/obo/UBERON_0001003\" and are limited to six results?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.url = \"http://purl.obolibrary.org/obo/UBERON_0001003\" RETURN m.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes, limited to 10, that have a COVARIES_GcG relationship with the gene having the URL \"http://identifiers.org/ncbigene/7746\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/7746\" RETURN m.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve one gene identifier that is directly influenced by an anatomy node having the license \"CC BY 3.0\" through downregulation.", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN m.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes that share a 'COVARIES_GcG' relationship with any gene whose license is marked as \"CC0 1.0\", with a maximum of nine gene names.", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license = \"CC0 1.0\" RETURN m.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What single pathway identifier is connected to a gene, given that the gene's license is CC0 1.0, via a PARTICIPATES_GpPW relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.license = \"CC0 1.0\" RETURN m.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene identifiers connected via the COVARIES_GcG relationship to genes that are under an open CC0 1.0 license, restricted to five entries?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license = \"CC0 1.0\" RETURN m.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify up to eight pathway identifiers that are associated with \"HIST1H3B\" via the PARTICIPATES_GpPW relationship.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.name = \"HIST1H3B\" RETURN m.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of up to five genes that have a \"COVARIES_GcG\" relationship with the gene identified by the URL \"http://identifiers.org/ncbigene/6632\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/6632\" RETURN m.name LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the initial ten gene identifiers associated with age-related macular degeneration via the ASSOCIATES_DaG relationship?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) WHERE n.name = \"age related macular degeneration\" RETURN m.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers are related to \"DOID:5875\" by the \"RESEMBLES_DrD\" relationship, limited to the first three?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m:Disease) WHERE n.identifier = \"DOID:5875\" RETURN m.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease identifiers are retrieved for treatments involving compounds with a \"CC BY-NC 4.0\" license, limited to three occurrences?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) WHERE n.license = \"CC BY-NC 4.0\" RETURN m.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which three pathway identifiers is the \"CRK\" gene involved with according to the `PARTICIPATES_GpPW` relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.name = \"CRK\" RETURN m.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify six gene names that are linked to the compound having the identifier \"DB00246\" via a BINDS_CbG bond.", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.identifier = \"DB00246\" RETURN m.name LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify two symptoms that are connected through a \"PRESENTS_DpS\" relationship to diseases that specify a \"CC BY 3.0\" license.", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) WHERE n.license = \"CC BY 3.0\" RETURN m.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the names of diseases that have a palliating relationship with the compound named Acetophenazine, with a maximum of ten entries.", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.name = \"Acetophenazine\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes expressed in anatomical structures from the \"Uberon\" database, with a limit of seven results?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source = \"Uberon\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for five compounds included in the pharmacologic class linked with the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000185607\".", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000185607\" RETURN m.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are upregulated by the disease with the URL \"http://purl.obolibrary.org/obo/DOID_1793\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_1793\" RETURN m.name LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of genes that are linked through a \"COVARIES_GcG\" relationship to genes with the license type \"CC0 1.0\", limiting the results to nine genes?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license = \"CC0 1.0\" RETURN m.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that have a COVARIES_GcG connection originating from genes on chromosome number 7, limited to ten results?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.chromosome = \"7\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are upregulated by the anatomy labeled \"UBERON:0002367,\" limited to three results?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.identifier = \"UBERON:0002367\" RETURN m.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease identifiers are associated with treatments by the compound given the URL \"http://www.drugbank.ca/drugs/DB00700\", considering only the first ten matches?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00700\" RETURN m.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene's name is returned when a compound with a \"CC BY-NC 4.0\" license is matched in a binding relationship?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.license = \"CC BY-NC 4.0\" RETURN m.name LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathway identifiers involve the gene with the description \"adenylate cyclase activating polypeptide 1 (pituitary)\" according to this query?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.description = \"adenylate cyclase activating polypeptide 1 (pituitary)\" RETURN m.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are associated with being downregulated by the anatomy specified by the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.url = \"http://purl.obolibrary.org/obo/UBERON_0002367\" RETURN m.name LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene that is upregulated by the compound with the specified DrugBank URL, \"http://www.drugbank.ca/drugs/DB00305\".", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00305\" RETURN m.identifier LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of each cellular component associated with the gene \"heat shock 70kDa protein 1-like\" through participation?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.description = \"heat shock 70kDa protein 1-like\" RETURN m.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of up to nine genes that are upregulated by the anatomy entity with the BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id = \"BTO:0001129\" RETURN m.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the first seven gene identifiers that are subject to downregulation by pancreatic cancer according to the database.", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.name = \"pancreatic cancer\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that are connected to \"golgi brefeldin A resistant guanine nucleotide exchange factor 1\" through an INTERACTS_GiG relationship?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.description = \"golgi brefeldin A resistant guanine nucleotide exchange factor 1\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the identifiers of genes that the compound with identifier \"DB00432\" downregulates, with a maximum of eight results.", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.identifier = \"DB00432\" RETURN m.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the set of gene identifiers that have an upregulation relationship with the anatomy item having the BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id = \"BTO:0001129\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifiers of genes that pancreatic cancer causes to be downregulated, limited to ten results?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.name = \"pancreatic cancer\" RETURN m.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the database, what is the name of a compound connected by a 'RESEMBLES_CrC' relationship to the compound with the InChIKey \"VRQVVMDWGGWHTJ-CQSZACIVSA-N\"?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.inchikey = \"InChIKey=VRQVVMDWGGWHTJ-CQSZACIVSA-N\" RETURN m.name LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that the compound with the InChI identifier \"InChI=1S/C15H18N4O5/c1-5-9(16)12(21)8-6(4-24-14(17)22)15(23-2)13-7(18-13)3-19(15)10(8)11(5)20/h6-7,13,18H,3-4,16H2,1-2H3,(H2,17,22)/t6-,7+,13+,15-/m1/s1\" is known to downregulate?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.inchi = \"InChI=1S/C15H18N4O5/c1-5-9(16)12(21)8-6(4-24-14(17)22)15(23-2)13-7(18-13)3-19(15)10(8)11(5)20/h6-7,13,18H,3-4,16H2,1-2H3,(H2,17,22)/t6-,7+,13+,15-/m1/s1\" RETURN m.name LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of ten compounds that are connected to a DrugBank compound via the RESEMBLES_CrC relationship.", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.source = \"DrugBank\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which five gene identifiers are regulated by the anatomy node having the BTO ID \"BTO:0001129\" through the relationship type UPREGULATES_AuG?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id = \"BTO:0001129\" RETURN m.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the identifiers of up to two biological processes that the gene \"RIPK3\" is related to through the PARTICIPATES_GpBP relationship.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) WHERE n.name = \"RIPK3\" RETURN m.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names appear in the query result when finding the first two genes upregulated by the compound whose InChIKey is \"GGXKWVWZWMLJEH-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.inchikey = \"InChIKey=GGXKWVWZWMLJEH-UHFFFAOYSA-N\" RETURN m.name LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which four gene identifiers are returned that are influenced by anatomy nodes from the Uberon source through upregulation?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.source = \"Uberon\" RETURN m.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify up to four gene names that are affected by diseases through downregulation relationships, with the data source being Disease Ontology?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.source = \"Disease Ontology\" RETURN m.name LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list up to six identifiers for anatomy nodes connected to Disease Ontology diseases through localization relationships?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source = \"Disease Ontology\" RETURN m.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of two genes that are downregulated by the anatomy entity with BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.bto_id = \"BTO:0001129\" RETURN m.name LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are upregulated by DrugBank-sourced compounds, and return their identifiers with a limit of two?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.source = \"DrugBank\" RETURN m.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes downregulated by anatomy entities with a \"CC BY 3.0\" license in the database?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN m.identifier LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the gene identifiers that are enhanced by the prostate gland through the UPREGULATES_AuG relationship?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.name = \"prostate gland\" RETURN m.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of cellular components where the gene identified by the description \"zinc finger, FYVE domain containing 27\" takes part.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.description = \"zinc finger, FYVE domain containing 27\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes that have an upregulation relationship with the anatomy node identified by \"UBERON:0002367,\" with a cap of seven results.", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.identifier = \"UBERON:0002367\" RETURN m.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find three compound identifiers that belong to the pharmacologic class identified by the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000191267\"?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000191267\" RETURN m.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of up to four genes that experience downregulation by an anatomy node labeled with Mesh ID \"D011467\" through AdG.", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.mesh_id = \"D011467\" RETURN m.name LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return the identifiers of the first five compounds that resemble any compound having a \"CC BY-NC 4.0\" licensing?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN m.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the names of up to nine biological processes associated with the gene identified by the URL \"http://identifiers.org/ncbigene/2217\"?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) WHERE n.url = \"http://identifiers.org/ncbigene/2217\" RETURN m.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the anatomical locations where the disease with the identifier \"http://purl.obolibrary.org/obo/DOID_9970\" localizes, according to the database?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_9970\" RETURN m.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are retrieved from associations with multiple sclerosis, with a maximum of ten results?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) WHERE n.name = \"multiple sclerosis\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for compounds from pharmacologic classes that include them under a \"CC BY 4.0\" license, limiting the results to five?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.license = \"CC BY 4.0\" RETURN m.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are expressed by the anatomy node corresponding to BTO ID \"BTO:0000122\"?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.bto_id = \"BTO:0000122\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list six gene identifiers that are connected to \"Entrez Gene\" source genes through the INTERACTS_GiG relationship?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.source = \"Entrez Gene\" RETURN m.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes, limited to six, that are upregulated by the disease defined by the identifier \"DOID:11612\".", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.identifier = \"DOID:11612\" RETURN m.name LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify up to four gene identifiers that are targets of upregulation by an anatomical structure with a mesh ID of \"D011467\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.mesh_id = \"D011467\" RETURN m.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the set of identifiers for anatomical entities related to diseases from the \"Disease Ontology\" source, with a maximum of 10 entries returned?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source = \"Disease Ontology\" RETURN m.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene identifiers, up to eight, are associated with a downregulation relationship by compounds under the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.license = \"CC BY-NC 4.0\" RETURN m.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are associated with diseases that upregulate them and have a license of \"CC BY 3.0,\" showing only the first three results?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN m.name LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which six genes have their identifiers returned when they are downregulated by diseases licensed under \"CC BY 3.0\"?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN m.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound names belong to the \"Neurokinin 1 Antagonists\" pharmacologic class, limited to the first ten results?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.name = \"Neurokinin 1 Antagonists\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify eight genes associated with compounds from DrugBank that have an 'UPREGULATES_CuG' effect.", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.source = \"DrugBank\" RETURN m.identifier LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for biological processes that include participation from genes licensed under CC0 1.0, with a cap of nine results.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) WHERE n.license = \"CC0 1.0\" RETURN m.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list six anatomy identifiers where a disease from the Disease Ontology is localized?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source = \"Disease Ontology\" RETURN m.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of up to nine genes bound by a compound with the InChI identifier \"InChI=1S/C14H10Cl4/c15-10-7-5-9(6-8-10)13(14(17)18)11-3-1-2-4-12(11)16/h1-8,13-14H\"?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.inchi = \"InChI=1S/C14H10Cl4/c15-10-7-5-9(6-8-10)13(14(17)18)11-3-1-2-4-12(11)16/h1-8,13-14H\" RETURN m.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of no more than two anatomical entities related to the disease specified by the URL \"http://purl.obolibrary.org/obo/DOID_175\".", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_175\" RETURN m.name LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases, limited to nine, share a resemblance to a disease that holds the \"CC BY 3.0\" license, and what are their identifiers?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m:Disease) WHERE n.license = \"CC BY 3.0\" RETURN m.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for a maximum of six genes connected to diseases that have a \"CC BY 3.0\" license?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN m.identifier LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, up to a limit of seven, are influenced by downregulation from the anatomical part identified by MeSH ID \"D011467\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.mesh_id = \"D011467\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier for each molecular function that the gene at \"http://identifiers.org/ncbigene/5172\" takes part in, limited to four results?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) WHERE n.url = \"http://identifiers.org/ncbigene/5172\" RETURN m.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of anatomical entities that diseases from the Disease Ontology localize to, considering only the first three results?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source = \"Disease Ontology\" RETURN m.identifier LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list up to four symptom identifiers linked to the disease with the specific URL \"http://purl.obolibrary.org/obo/DOID_1826\"?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_1826\" RETURN m.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are palliated by Celecoxib, as indicated by their identifiers, limited to seven entries?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.name = \"Celecoxib\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of the first nine genes upregulated by the disease with the identifier \"DOID:0050742\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.identifier = \"DOID:0050742\" RETURN m.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of up to ten genes that interact with the gene identified by the URL \"http://identifiers.org/ncbigene/3276\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/3276\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are returned when querying for up to nine genes that share a covariance link with the IL2 gene?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.name = \"IL2\" RETURN m.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of a maximum of four diseases palliated by compounds whose source is DrugBank?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.source = \"DrugBank\" RETURN m.identifier LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene names of the first seven genes regulated by anatomy entities licensed as \"CC BY 3.0\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN m.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the anatomical locations, using their identifiers, where the disease with the URL \"http://purl.obolibrary.org/obo/DOID_11612\" is localized.", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_11612\" RETURN m.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, up to a maximum of seven, are being upregulated by anatomy nodes that have the license \"CC BY 3.0\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN m.identifier LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of two genes that are directly interacting with the gene associated with the URL \"http://identifiers.org/ncbigene/2563\".", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/2563\" RETURN m.name LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway identifiers correspond to pathways that have the participation of genes holding a \"CC0 1.0\" license, limited to the first five matches?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.license = \"CC0 1.0\" RETURN m.identifier LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of gene identifiers that have an upregulation relationship with the compound \"DB00543\", showing only the first nine results?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.identifier = \"DB00543\" RETURN m.identifier LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that are upregulated by pancreatic cancer according to this database?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.name = \"pancreatic cancer\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of up to five genes associated with diseases from the Disease Ontology source?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) WHERE n.source = \"Disease Ontology\" RETURN m.name LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of compounds included in the pharmacologic class with the specific URL \"http://purl.bioontology.org/ontology/NDFRT/N0000175976\"?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000175976\" RETURN m.identifier LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of up to nine diseases that compounds from DrugBank are known to palliate?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.source = \"DrugBank\" RETURN m.name LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound names are similar to DrugBank compounds, with a limit of seven results?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.source = \"DrugBank\" RETURN m.name LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are connected by a covariance relationship to the gene \"ZSCAN9\", and what are their names, with a limit of ten?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.name = \"ZSCAN9\" RETURN m.name LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names are connected to the gene described by \"chromosome 2 open reading frame 42\" through participation?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.description = \"chromosome 2 open reading frame 42\" RETURN m.name LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct identifiers correspond to the cellular components in which the gene \"zinc finger, FYVE domain containing 27\" is involved through the PARTICIPATES_GpCC relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.description = \"zinc finger, FYVE domain containing 27\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list distinct disease identifiers for diseases connected via \"RESEMBLES_DrD\" to a disease with a \"CC BY 3.0\" license?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m:Disease) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes that have a \"COVARIES_GcG\" relationship with the gene having the URL \"http://identifiers.org/ncbigene/7746\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/7746\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of genes linked through the \"INTERACTS_GiG\" relationship with the gene described as \"golgi brefeldin A resistant guanine nucleotide exchange factor 1\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.description = \"golgi brefeldin A resistant guanine nucleotide exchange factor 1\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the set of unique identifiers for diseases that share the \"RESEMBLES_DrD\" relationship with the disease having identifier \"DOID:5875\"?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m:Disease) WHERE n.identifier = \"DOID:5875\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique gene identifiers result from the \"COVARIES_GcG\" association with genes that have a license of \"CC0 1.0\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license = \"CC0 1.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique molecular function identifiers are associated with the gene \"SLC38A1\" through the PARTICIPATES_GpMF relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) WHERE n.name = \"SLC38A1\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the gene identifiers that are uniquely linked to compounds with a \"CC BY-NC 4.0\" license via the BINDS_CbG relationship?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of CellularComponents that genes from the Entrez Gene source are associated with according to the PARTICIPATES_GpCC relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.source = \"Entrez Gene\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names of genes are returned from the database that are connected through a BINDS_CbG relationship with the compound identified by \"DB00246\"?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.identifier = \"DB00246\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct names of compounds are found through the RESEMBLES_CrC relationship starting from compounds in the DrugBank source?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.source = \"DrugBank\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of genes that are downregulated by the anatomy entity with BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.bto_id = \"BTO:0001129\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds, connected through a \"RESEMBLES_CrC\" relationship, have a name and resemble the compound with the given InChIKey \"InChIKey=AAKJLRGGTJKAMG-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.inchikey = \"InChIKey=AAKJLRGGTJKAMG-UHFFFAOYSA-N\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene names are linked via a COVARIES_GcG relationship to genes that have the license \"CC0 1.0\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license = \"CC0 1.0\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct gene identifiers correspond to genes regulated by the gene known as \"autophagy related 16-like 1 (S. cerevisiae)\"?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m:Gene) WHERE n.description = \"autophagy related 16-like 1 (S. cerevisiae)\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique gene identifiers expressed within anatomy entities sourced from Uberon?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source = \"Uberon\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique identifiers of all genes that have a covaried relationship with the gene linked to \"http://identifiers.org/ncbigene/84254\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/84254\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct gene identifiers are linked to anatomical nodes sourced from \"Uberon\" through the \"UPREGULATES_AuG\" relationship?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.source = \"Uberon\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes that are upregulated by the anatomy entity with the BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id = \"BTO:0001129\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct gene names are upregulated by the anatomical part marked as \"UBERON:0002367\" through the UPREGULATES_AuG relationship?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.identifier = \"UBERON:0002367\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the unique identifiers of all compounds that are part of the pharmacologic class designated by the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000175976\".", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000175976\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct identifiers of genes are expressed in anatomy entities that come from the Uberon source?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source = \"Uberon\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of compounds that resemble the compound with the InChIKey \"InChIKey=VRQVVMDWGGWHTJ-CQSZACIVSA-N\" through the RESEMBLES_CrC relationship?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.inchikey = \"InChIKey=VRQVVMDWGGWHTJ-CQSZACIVSA-N\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are uniquely linked through expression to the anatomy identified as UBERON:0002367?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.identifier = \"UBERON:0002367\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique gene identifiers that experience upregulation from the anatomy node specified by the BTO ID \"BTO:0001129\".", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id = \"BTO:0001129\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the unique gene names that are connected via a 'COVARIES_GcG' relationship to genes possessing a \"CC0 1.0\" license?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.license = \"CC0 1.0\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct gene names expressed by the anatomy labeled as \"prostate gland\" in the database?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.name = \"prostate gland\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions have identifiers connected through \"PARTICIPATES_GpMF\" with genes possessing a \"CC0 1.0\" license?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) WHERE n.license = \"CC0 1.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of genes that are downregulated by anatomy entities with the MeSH ID \"D011467\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.mesh_id = \"D011467\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct identifiers of pathways that involve the gene with the description 'adenylate cyclase activating polypeptide 1 (pituitary)'.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.description = \"adenylate cyclase activating polypeptide 1 (pituitary)\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes expressed in the anatomical entity with the BTO ID \"BTO:0000122\"?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.bto_id = \"BTO:0000122\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have unique identifiers linked to compounds that hold a \"CC BY-NC 4.0\" license in their treatment records?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene names are associated with compounds that hold a \"CC BY-NC 4.0\" license through a binding relationship?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the set of unique gene names linked to diseases through downregulation, sourced from Disease Ontology?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.source = \"Disease Ontology\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, according to their unique identifiers, are expressed by anatomical parts in the Uberon database?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.source = \"Uberon\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of cellular components that the \"heat shock 70kDa protein 1-like\" gene is associated with?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.description = \"heat shock 70kDa protein 1-like\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique gene identifiers can be associated with compounds that have the \"CC BY-NC 4.0\" license and downregulate these genes?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have a COVARIES_GcG relationship with the gene 'ZSCAN9,' and what are their distinct names?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.name = \"ZSCAN9\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes are distinctly connected to the disease \"multiple sclerosis\" through the ASSOCIATES_DaG relationship?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) WHERE n.name = \"multiple sclerosis\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene identifiers are linked to the anatomical concept that has the URL \"http://purl.obolibrary.org/obo/UBERON_0001003\" through an EXPRESSES_AeG relationship?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) WHERE n.url = \"http://purl.obolibrary.org/obo/UBERON_0001003\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes that are upregulated by the anatomical structure with identifier \"UBERON:0002367\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.identifier = \"UBERON:0002367\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene identifiers are associated with upregulation by an anatomy node having MeSH ID \"D011467\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.mesh_id = \"D011467\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of the biological processes connected to the gene with the identifier \"http://identifiers.org/ncbigene/3091\" via the PARTICIPATES_GpBP relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) WHERE n.url = \"http://identifiers.org/ncbigene/3091\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are distinctively downregulated by any disease entity holding a CC BY 3.0 license?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have unique identifiers that are upregulated by anatomy nodes under the \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene identifiers are associated through covariance with the gene having the description \"interleukin 26\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.description = \"interleukin 26\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique gene identifiers that the anatomical structure, having MeSH ID \"D011467,\" downregulates.", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.mesh_id = \"D011467\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the specific names of genes that receive upregulation from anatomy entities licensed as CC BY 3.0?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are uniquely affected by the upregulation relationship from the anatomy node with the BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) WHERE n.bto_id = \"BTO:0001129\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the list of distinct names for compounds that are part of pharmacologic classes identified by the FDA through DrugCentral.", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.source = \"FDA via DrugCentral\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene names are associated through COVARIES_GcG relationships with the gene at \"http://identifiers.org/ncbigene/6632\"?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/6632\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique names of all genes that are upregulated by the disease linked to the URL \"http://purl.obolibrary.org/obo/DOID_1793\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_1793\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct disease identifiers that the compound from DrugBank, with the URL \"http://www.drugbank.ca/drugs/DB00700,\" is used to treat?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00700\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes downregulated by the compound with InChI string \"InChI=1S/C22H23N3O4/c1-4-16-6-5-7-17(12-16)25-22-18-13-20(28-10-8-26-2)21(29-11-9-27-3)14-19(18)23-15-24-22/h1,5-7,12-15H,8-11H2,2-3H3,(H,23,24,25)\"?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.inchi = \"InChI=1S/C22H23N3O4/c1-4-16-6-5-7-17(12-16)25-22-18-13-20(28-10-8-26-2)21(29-11-9-27-3)14-19(18)23-15-24-22/h1,5-7,12-15H,8-11H2,2-3H3,(H,23,24,25)\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique identifiers do genes have that are upregulated by the compound with the DrugBank URL \"http://www.drugbank.ca/drugs/DB00305\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00305\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers for genes which are downregulated by anatomy entities licensed under \"CC BY 3.0\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different gene names that connect with genes present on chromosome 17 through the INTERACTS_GiG relationship?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.chromosome = \"17\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct anatomy names where diseases licensed under \"CC BY 3.0\" localize?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of genes that are upregulated by the compound with the InChIKey identifier \"GGXKWVWZWMLJEH-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.inchikey = \"InChIKey=GGXKWVWZWMLJEH-UHFFFAOYSA-N\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct gene names get downregulated by the compound that has the identifier \"DB00748\"?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) WHERE n.identifier = \"DB00748\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers for anatomy parts localized by diseases from the Disease Ontology dataset?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source = \"Disease Ontology\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique anatomy identifiers are connected to diseases originating from the \"Disease Ontology\" database?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.source = \"Disease Ontology\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are upregulated by a disease with the identifier \"DOID:11612\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.identifier = \"DOID:11612\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes upregulated by compounds sourced from DrugBank?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.source = \"DrugBank\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that are downregulated by the anatomical entity with the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\"?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.url = \"http://purl.obolibrary.org/obo/UBERON_0002367\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of diseases that compounds from DrugBank are known to palliate?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.source = \"DrugBank\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of anatomical entities where diseases labeled with a \"CC BY 3.0\" license are known to localize?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct compound identifiers that are part of pharmacologic classes licensed as \"CC BY 4.0.\"", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.license = \"CC BY 4.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers for genes that compounds sourced from DrugBank upregulate?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.source = \"DrugBank\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that are upregulated by the disease named \"pancreatic cancer\"?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.name = \"pancreatic cancer\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes upregulated by the compound \"Dihomo-gamma-linolenic acid\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.name = \"Dihomo-gamma-linolenic acid\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the molecular function names connected to the \"AK1\" gene through the PARTICIPATES_GpMF relationship?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) WHERE n.name = \"AK1\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique identifiers of genes are upregulated by the compound with the InChIKey \"InChIKey=SLAYUXIURFNXPG-CRAIPNDOSA-N\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.inchikey = \"InChIKey=SLAYUXIURFNXPG-CRAIPNDOSA-N\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all diseases that the compound 'Acetophenazine' helps to palliate?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.name = \"Acetophenazine\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct diseases have a palliative relationship with compounds sourced from DrugBank according to the database?", "output": "MATCH (n:Compound)-[r1:PALLIATES_CpD]->(m:Disease) WHERE n.source = \"DrugBank\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have unique identifiers and are similar to compounds with a \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the different gene identifiers impacted by the downregulation relationship from pancreatic cancer.", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.name = \"pancreatic cancer\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, identified by their unique IDs, are downregulated by anatomical parts that carry the \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of genes that the compound with the identifier \"DB00661\" upregulates?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.identifier = \"DB00661\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the set of distinct compound identifiers that belong to the pharmacologic class identified by the specific URL?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000185607\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are uniquely associated with genes interacting with \"DDX5\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.name = \"DDX5\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names do we retrieve for compounds that resemble those listed under DrugBank according to our database?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) WHERE n.source = \"DrugBank\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct compound names that are categorized under the \"Neurokinin 1 Antagonists\" pharmacologic class?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.name = \"Neurokinin 1 Antagonists\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct gene identifiers that are related to the disease \"age related macular degeneration\".", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) WHERE n.name = \"age related macular degeneration\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are uniquely upregulated by the compound with the identifier \"DB00543\"?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) WHERE n.identifier = \"DB00543\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of cellular components that the gene with the description \"chromosome 2 open reading frame 42\" participates in?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.description = \"chromosome 2 open reading frame 42\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct gene names associated with diseases that have the \"CC BY 3.0\" license and upregulate genes?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers for compounds associated with the pharmacologic class identified by the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000191267\"?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000191267\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are uniquely upregulated by the disease identified as DOID:0050742?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) WHERE n.identifier = \"DOID:0050742\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the pathways, by their unique identifiers, that include participation of genes with the \"CC0 1.0\" license.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.license = \"CC0 1.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct gene names are associated with the compound that possesses the InChI string \"InChI=1S/C14H10Cl4/c15-10-7-5-9(6-8-10)13(14(17)18)11-3-1-2-4-12(11)16/h1-8,13-14H\"?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) WHERE n.inchi = \"InChI=1S/C14H10Cl4/c15-10-7-5-9(6-8-10)13(14(17)18)11-3-1-2-4-12(11)16/h1-8,13-14H\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that co-vary with the gene named \"IL2\" according to the COVARIES_GcG relationship?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) WHERE n.name = \"IL2\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique symptom identifiers are presented by diseases with a licensing agreement set to \"CC BY 3.0\"?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) WHERE n.license = \"CC BY 3.0\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the distinct identifiers for symptoms that are presented by the disease having the URL \"http://purl.obolibrary.org/obo/DOID_1826\"?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_1826\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of distinct identifiers for genes that pancreatic cancer downregulates?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) WHERE n.name = \"pancreatic cancer\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular component identifiers can be found from the participation of genes that have \"Entrez Gene\" as their source?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) WHERE n.source = \"Entrez Gene\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct gene names are returned for genes that interact with the gene specified by the URL \"http://identifiers.org/ncbigene/2563\"?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/2563\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the unique anatomical sites where the disease with identifier DOID:10871 is known to localize?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) WHERE n.identifier = \"DOID:10871\" RETURN DISTINCT m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of compounds included in the pharmacologic class with the identifier \"N0000007151\"?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) WHERE n.identifier = \"N0000007151\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all unique pathway identifiers where genes on chromosome 11 are participants.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) WHERE n.chromosome = \"11\" RETURN DISTINCT m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve identifiers of diseases that downregulate certain genes, after ignoring the initial seven matches, and limit the display to ten results?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN n.identifier SKIP 7 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifiers for five diseases that present with symptoms, skipping over the first three entries in the result set?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) RETURN n.identifier SKIP 3 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find 15 identifiers of pharmacologic classes associated with compounds, ignoring the initial 10 identifiers in the result list?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.identifier SKIP 10 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifiers of 15 diseases that resemble different diseases, ignoring the first 7 entries in the results?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m:Disease) RETURN n.identifier SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers appear among specific cellular components after bypassing the first six results and selecting only the next five?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN n.identifier SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the identifiers of diseases associated with genes, while ignoring the first match and only capturing the next 15?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) RETURN n.identifier SKIP 1 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do the identifiers of genes participating in cellular components appear when the query outputs from the eleventh result onwards, stopping after ten entries?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN n.identifier SKIP 10 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names of genes, which are part of any pathway, can be retrieved if you skip the first result and limit the number of gene names to fifteen? ", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.name SKIP 1 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers are returned if we skip the first eight and limit the results to 15, where the compounds upregulate specific genes?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) RETURN n.identifier SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the names of genes that have interactions with any other gene, omitting the first two results and limiting the output to fifteen?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) RETURN n.name SKIP 2 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show the names of pharmacologic classes, related to compounds, by skipping the first 8 entries and returning the next 15?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.name SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of diseases that downregulate genes, but begin the list after skipping the initial six entries and return up to five entries.", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN n.identifier SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of genes participating in any molecular function, but ignore the first two and show only the next ten results.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.identifier SKIP 2 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What anatomical entity names are retrieved after skipping the first five that have an expression relationship with genes, with a maximum of ten results displayed?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) RETURN n.name SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers, from those participating in pathways, are listed when skipping the first ten entries and limiting the results to five?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.identifier SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers are similar to other diseases, with the results skipping the first one and limiting to five diseases in total?", "output": "MATCH (n:Disease)-[r1:RESEMBLES_DrD]->(m:Disease) RETURN n.identifier SKIP 1 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find 15 disease names that are linked to genes, skipping the first 6, and show me those results.", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) RETURN n.name SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifiers of anatomy nodes that express a specific range of genes, skipping the first six matches and displaying the next ten?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) RETURN n.identifier SKIP 6 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the names of five genes that participate in some molecular functions after ignoring the first nine matches?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.name SKIP 9 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the pharmacologic classes that incorporate compounds, with results starting after the first 10 and fetching five classes only?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.name SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve identifiers for fifteen compounds, after skipping six, that exert a downregulating effect on genes?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) RETURN n.identifier SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we obtain the identifiers of diseases linked to specific anatomical parts, while skipping the first three entries and limiting the results to ten?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.identifier SKIP 3 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers from the pharmacologic classes that include compounds can be found after omitting the first five results, limited to ten?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.identifier SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the disease identifiers associated with symptoms, ignoring the first eight and displaying the following five results?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are participating in some cellular component, with a display starting after the first 10 and limiting the results to 5?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN n.name SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of the diseases localized in anatomical areas, excluding the first eight we come across, and limiting the output to the next ten?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.identifier SKIP 8 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you display the names of pharmacologic classes that contain a compound, beginning from the tenth result and listing up to ten classes?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.name SKIP 9 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Show me five disease identifiers after skipping the first eight, each disease known for upregulating some gene.", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "After skipping the first ten results, which compound names appear as being analogous to another compound in the next five results?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) RETURN n.name SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of diseases linked to anatomy, omitting the first eight and returning only ten results thereafter?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.name SKIP 8 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names can be retrieved by skipping the first and limiting to the next 15 genes participating in biological processes?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN n.name SKIP 1 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are known to upregulate genes in the database, and can you provide the names of these diseases after skipping the first eight found, with a limit of fifteen?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) RETURN n.name SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers, connected to genes, are retrieved if the first three matches are omitted and only ten are shown?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) RETURN n.identifier SKIP 3 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the disease identifiers that have a localization relationship with instances of anatomy, skipping the first five results and showing the next fifteen?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.identifier SKIP 5 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain gene identifiers for the next 15 genes involved in pathways after bypassing the first six?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.identifier SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers correspond to pharmacologic classes linked to compounds, omitting the first three entries and retrieving up to five?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.identifier SKIP 3 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "After skipping the first six entries, what are the next 15 pharmacologic class identifiers that have a specific association with compounds?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.identifier SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find up to 15 gene identifiers that take part in pathways, starting from the seventh result onward?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.identifier SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find five gene identifiers involved in pathways when we exclude the first seven results from the list?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.identifier SKIP 7 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify ten disease names linked to genes, excluding the first five entries from the list?", "output": "MATCH (n:Disease)-[r1:ASSOCIATES_DaG]->(m:Gene) RETURN n.name SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find the identifiers of genes, starting from the fourth result, that have a participation role in any molecular function and limit the results to five?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.identifier SKIP 3 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for the diseases linked to anatomical structures, bypassing the first 9 entries and returning the next 15.", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.identifier SKIP 9 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the set of diseases linked to anatomical entities, which ones, starting after the third, are limited to just fifteen in this query's results?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.name SKIP 3 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Among diseases affecting gene expression by downregulation, what are the identifiers of the five diseases after skipping the first six results?", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN n.identifier SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of five gene identifiers engaged in biological processes, after bypassing the first ten in the result set?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN n.identifier SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers can be found that take part in some pathways, when we skip the first seven records and then retrieve the following 15?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.identifier SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of ten compounds that resemble other compounds, omitting the first four in the retrieval?", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) RETURN n.name SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve the identifiers of genes from a list of gene pairs linked by 'COVARIES_GcG,' considering only those pairs after the first 9 found?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) RETURN n.identifier SKIP 9 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of the pharmacologic classes that include compounds, skipping the first three results and returning five?", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.identifier SKIP 3 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are involved in biological processes, and display only the names, beginning from the fifth entry and returning a maximum of 15?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN n.name SKIP 4 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of gene names that regulate other genes, displaying only the results from the 10th to the 24th in the sequence?", "output": "MATCH (n:Gene)-[r1:REGULATES_GrG]->(m:Gene) RETURN n.name SKIP 9 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of genes that are linked to other genes via the 'COVARIES_GcG' relationship, while skipping the first match and limiting the results to 15?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) RETURN n.identifier SKIP 1 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which five disease names come after the first nine when looking at diseases that upregulate genes?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) RETURN n.name SKIP 9 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for compounds linked by the 'RESEMBLES_CrC' relationship, but ignore the first five and limit the output to 15 results.", "output": "MATCH (n:Compound)-[r1:RESEMBLES_CrC]->(m:Compound) RETURN n.identifier SKIP 5 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the disease names that are localizing to anatomy parts after skipping seven results and displaying up to fifteen?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.name SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of ten diseases that act to downregulate genes, omitting the initial two entries.", "output": "MATCH (n:Disease)-[r1:DOWNREGULATES_DdG]->(m:Gene) RETURN n.name SKIP 2 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for ten Pharmacologic Classes, bypassing the first five, which include Compounds based on the INCLUDES_PCiC relationship.", "output": "MATCH (n:PharmacologicClass)-[r1:INCLUDES_PCiC]->(m:Compound) RETURN n.identifier SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that are covaried with other genes, skipping the first six results and showing the next five?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) RETURN n.name SKIP 6 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find the names of genes, specifying to ignore the first six in sequence, associated with another gene through the 'COVARIES_GcG' relationship, only listing up to 15?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) RETURN n.name SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers correspond to genes involved with cellular components if we skip the first seven and only show 15 results?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN n.identifier SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the identifiers for anatomy entities that upregulate genes, but only starting from the 10th after skipping the initial 9?", "output": "MATCH (n:Anatomy)-[r1:UPREGULATES_AuG]->(m:Gene) RETURN n.identifier SKIP 9 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are linked to molecular functions, ignoring the initial nine matches and displaying no more than 15?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.identifier SKIP 9 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of disease names that influence the upregulation of genes, skipping the first four and showing up to 15 results?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) RETURN n.name SKIP 4 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "After skipping six results, what are the names of 15 genes that engage in any type of molecular function?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.name SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "After ignoring the first four results, what are the next five gene names that have a relationship with molecular functions?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.name SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a list of gene identifiers that are associated with molecular functions, excluding the first ten and keeping a maximum of ten results?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.identifier SKIP 10 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of names for genes interacting with others, presented after the first result, up to a maximum of fifteen entries?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) RETURN n.name SKIP 1 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which five anatomy identifiers come after skipping the first four, where the anatomy expresses a specific gene?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) RETURN n.identifier SKIP 4 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of identifiers for compounds that cause gene upregulation, with the query skipping the first six matches in the results and limiting the number to ten?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) RETURN n.identifier SKIP 6 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy nodes, skipping the first ten, that have an expresses relationship with any gene, and returning the next fifteen results?", "output": "MATCH (n:Anatomy)-[r1:EXPRESSES_AeG]->(m:Gene) RETURN n.name SKIP 10 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of compounds that are connected to side effects, omitting the initial six matches and displaying only the next ten.", "output": "MATCH (n:Compound)-[r1:CAUSES_CcSE]->(m:SideEffect) RETURN n.identifier SKIP 6 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the disease names that are found in specific anatomical locations, omitting the first six and limiting to a total of fifteen entries?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.name SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes involved in pathways, excluding the first four entries, with a limit of fifteen results?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.identifier SKIP 4 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, after skipping the first three, show interactions with other genes, up to a total of fifteen names?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) RETURN n.name SKIP 3 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers are linked to anatomical entities, where the list starts after the first five and only includes the next fifteen?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.identifier SKIP 5 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Show the compound identifiers that come after the first nine which have a relationship of upregulating genes in the dataset, limited to ten results.", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) RETURN n.identifier SKIP 9 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of five compounds, starting after eight, that downregulate certain genes?", "output": "MATCH (n:Compound)-[r1:DOWNREGULATES_CdG]->(m:Gene) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the database, which compounds are associated with causing side effects, capturing their names while omitting the first eight results and showing up to fifteen?", "output": "MATCH (n:Compound)-[r1:CAUSES_CcSE]->(m:SideEffect) RETURN n.name SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes that participate in cellular components, excluding the first result and limiting the output to 15 entries?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN n.identifier SKIP 1 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are retrieved when searching for genes interconnected by the 'COVARIES_GcG' relationship, while skipping the first match and limiting the results to 10?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) RETURN n.name SKIP 1 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the relationships where compounds are bound to genes, what are the names of the compounds if we ignore the first five and display only the next ten?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) RETURN n.name SKIP 5 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the identifiers for 15 Anatomy nodes that downregulate a Gene, excluding the first five matches.", "output": "MATCH (n:Anatomy)-[r1:DOWNREGULATES_AdG]->(m:Gene) RETURN n.identifier SKIP 5 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the identifiers for ten genes that are associated with pathways, but only after skipping the first six matches?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.identifier SKIP 6 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the genes that partake in biological processes, which identifiers are in positions six through ten after skipping the initial five?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN n.identifier SKIP 5 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers, specifically those related to treating diseases, appear after the sixth entry in the record, with up to 15 entries displayed?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) RETURN n.identifier SKIP 6 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are five gene names linked to molecular functions, skipping the first nine results in the list?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.name SKIP 9 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "When examining genes that interact with each other, what are the identifiers of five genes, beginning after the eighth in the sequence?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) RETURN n.identifier SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find the identifiers of five gene nodes involved in interactions, starting after the initial nine results?", "output": "MATCH (n:Gene)-[r1:INTERACTS_GiG]->(m:Gene) RETURN n.identifier SKIP 9 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From a dataset of diseases localized to anatomical regions, which disease names appear after disregarding the first eight?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.name SKIP 8 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names appear in the database beginning from the sixth entry, where these diseases are known to upregulate genes?", "output": "MATCH (n:Disease)-[r1:UPREGULATES_DuG]->(m:Gene) RETURN n.name SKIP 5 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the identifiers of five genes, skipping the first entry, that have a \"COVARIES_GcG\" relationship with another gene?", "output": "MATCH (n:Gene)-[r1:COVARIES_GcG]->(m:Gene) RETURN n.identifier SKIP 1 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of compounds that have a relationship of causing side effects, omitting the first seven, and display the next set of fifteen names.", "output": "MATCH (n:Compound)-[r1:CAUSES_CcSE]->(m:SideEffect) RETURN n.name SKIP 7 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the identifiers of compounds involved in treating diseases, beginning from the 10th entry and up to 15 entries in total?", "output": "MATCH (n:Compound)-[r1:TREATS_CtD]->(m:Disease) RETURN n.identifier SKIP 9 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the sequence of compound names that bind to genes, beginning with the fifth compound and showing up to ten results?", "output": "MATCH (n:Compound)-[r1:BINDS_CbG]->(m:Gene) RETURN n.name SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes, involved in a pathway, starting from the 11th gene, with a limit of 5 results?", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.name SKIP 10 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify five gene names associated with any biological process, not counting the first eight found in the list.", "output": "MATCH (n:Gene)-[r1:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN n.name SKIP 8 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifiers of ten compounds that upregulate genes, excluding the first four matches?", "output": "MATCH (n:Compound)-[r1:UPREGULATES_CuG]->(m:Gene) RETURN n.identifier SKIP 4 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases that present certain symptoms, specifically starting from the tenth disease in the list?", "output": "MATCH (n:Disease)-[r1:PRESENTS_DpS]->(m:Symptom) RETURN n.name SKIP 9 LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of diseases that are connected to anatomical entities via localization, while passing over the first two and limiting the results to fifteen records?", "output": "MATCH (n:Disease)-[r1:LOCALIZES_DlA]->(m:Anatomy) RETURN n.identifier SKIP 2 LIMIT 15"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve a set of five compound identifiers, skipping the first seven, which are linked to side effects they cause?", "output": "MATCH (n:Compound)-[r1:CAUSES_CcSE]->(m:SideEffect) RETURN n.identifier SKIP 7 LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all different Pathway identifiers, sorted from lowest to highest?", "output": "MATCH (n:Pathway) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the unique diseases' names in the database and have them sorted in ascending order?", "output": "MATCH (n:Disease) RETURN DISTINCT n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve a sorted list of distinct URLs for each \"Gene\" node in the database?", "output": "MATCH (n:Gene) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique licenses associated with the pharmacologic classes, sorted in ascending order?", "output": "MATCH (n:PharmacologicClass) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the unique identifiers of pharmacologic classes in the database, sorted in ascending order?", "output": "MATCH (n:PharmacologicClass) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve every unique molecular function name in ascending alphabetical order?", "output": "MATCH (n:MolecularFunction) RETURN DISTINCT n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct sources from the pathway nodes sorted in ascending order?", "output": "MATCH (n:Pathway) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all unique symptom identifiers, arranged in alphabetical order?", "output": "MATCH (n:Symptom) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get a sorted list of unique licenses used in Pathway nodes?", "output": "MATCH (n:Pathway) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the distinct InChIKeys of compounds and sort them in ascending order?", "output": "MATCH (n:Compound) RETURN DISTINCT n.inchikey ORDER BY n.inchikey ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve a sorted list of different URLs from all Pathway entities?", "output": "MATCH (n:Pathway) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct URLs linked to pharmacologic classes, sorted alphabetically?", "output": "MATCH (n:PharmacologicClass) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique mesh_ids of all nodes labeled as Anatomy, sorted in ascending order?", "output": "MATCH (n:Anatomy) RETURN DISTINCT n.mesh_id ORDER BY n.mesh_id ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of unique licenses for all nodes labeled as 'BiologicalProcess,' sorted alphabetically?", "output": "MATCH (n:BiologicalProcess) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain all unique compound licenses, arranged in alphabetical order?", "output": "MATCH (n:Compound) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one retrieve all unique anatomy node identifiers sorted from smallest to largest?", "output": "MATCH (n:Anatomy) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of pharmacologic classes in the database, sorted in ascending order?", "output": "MATCH (n:PharmacologicClass) RETURN DISTINCT n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve each distinct URL linked to symptoms, organized from the smallest to largest?", "output": "MATCH (n:Symptom) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain all different disease identifiers sorted from A to Z?", "output": "MATCH (n:Disease) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain an alphabetically sorted list of all unique identifiers associated with genes?", "output": "MATCH (n:Gene) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique licenses are attributed to diseases, sorted in ascending order?", "output": "MATCH (n:Disease) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the unique list of the URLs for each \"Disease\" node, sorted in ascending order?", "output": "MATCH (n:Disease) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique URLs associated with nodes labeled as 'CellularComponent,' sorted in ascending order?", "output": "MATCH (n:CellularComponent) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain a sorted list of the unique names of cellular components?", "output": "MATCH (n:CellularComponent) RETURN DISTINCT n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct chromosomes found in the `Gene` nodes, sorted in ascending order?", "output": "MATCH (n:Gene) RETURN DISTINCT n.chromosome ORDER BY n.chromosome ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique licenses associated with nodes labeled as \"MolecularFunction,\" sorted in ascending order?", "output": "MATCH (n:MolecularFunction) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique types of pharmacologic classes available, sorted in ascending order?", "output": "MATCH (n:PharmacologicClass) RETURN DISTINCT n.class_type ORDER BY n.class_type ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all unique names of symptoms and sort them alphabetically?", "output": "MATCH (n:Symptom) RETURN DISTINCT n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve a sorted list of unique URLs from compound entities in the database?", "output": "MATCH (n:Compound) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers for all the \"SideEffect\" nodes, sorted in ascending order?", "output": "MATCH (n:SideEffect) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the InChI values of different compounds with no duplicates, sorted from A to Z?", "output": "MATCH (n:Compound) RETURN DISTINCT n.inchi ORDER BY n.inchi ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a sorted list of distinct pathway names stored in the system?", "output": "MATCH (n:Pathway) RETURN DISTINCT n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct identifiers of all cellular components when sorted in ascending order?", "output": "MATCH (n:CellularComponent) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct sources of all nodes labeled as 'PharmacologicClass' when sorted in ascending order?", "output": "MATCH (n:PharmacologicClass) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a listing of all unique licenses linked to symptoms, sorted in ascending order?", "output": "MATCH (n:Symptom) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique URLs for nodes categorized under \"MolecularFunction\" in the database, sorted in ascending order?", "output": "MATCH (n:MolecularFunction) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique sources listed for diseases, sorted in ascending order?", "output": "MATCH (n:Disease) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct licenses associated with cellular components, sorted alphabetically?", "output": "MATCH (n:CellularComponent) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain a list of distinct 'MolecularFunction' identifiers organized in an ascending sequence?", "output": "MATCH (n:MolecularFunction) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique sources of symptoms, sorted in ascending order?", "output": "MATCH (n:Symptom) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct gene licenses and sort them alphabetically?", "output": "MATCH (n:Gene) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve a non-redundant, ascending list of identifiers for all biological processes?", "output": "MATCH (n:BiologicalProcess) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the distinct URLs for nodes labeled as \"Anatomy,\" sorted alphabetically?", "output": "MATCH (n:Anatomy) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a sorted list of unique BTO IDs from the nodes classified under the label Anatomy?", "output": "MATCH (n:Anatomy) RETURN DISTINCT n.bto_id ORDER BY n.bto_id ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which different URLs exist for entities in the BiologicalProcess category, sorted from A to Z?", "output": "MATCH (n:BiologicalProcess) RETURN DISTINCT n.url ORDER BY n.url ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the unique sources associated with the Anatomy nodes in the database, listed in ascending order?", "output": "MATCH (n:Anatomy) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of all genes in the database, sorted alphabetically?", "output": "MATCH (n:Gene) RETURN DISTINCT n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the unique sources associated with the BiologicalProcess nodes in ascending alphabetical order?", "output": "MATCH (n:BiologicalProcess) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct source values exist within nodes labeled as MolecularFunction, sorted from A to Z?", "output": "MATCH (n:MolecularFunction) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the ordered list of unique descriptions from the \"Gene\" nodes in the database?", "output": "MATCH (n:Gene) RETURN DISTINCT n.description ORDER BY n.description ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a list of all unique gene sources, displayed in ascending alphabetical order?", "output": "MATCH (n:Gene) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique compound identifiers exist, and how are they ordered from smallest to largest?", "output": "MATCH (n:Compound) RETURN DISTINCT n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct licenses associated with anatomy entries stored in the database?", "output": "MATCH (n:Anatomy) RETURN DISTINCT n.license ORDER BY n.license ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of all compounds sorted in ascending order?", "output": "MATCH (n:Compound) RETURN DISTINCT n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of all different compound sources, ordered from A to Z?", "output": "MATCH (n:Compound) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a sorted list of distinct sources from which the cellular components originate?", "output": "MATCH (n:CellularComponent) RETURN DISTINCT n.source ORDER BY n.source ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all disease names and their identifiers sorted in ascending order?", "output": "MATCH (n:Disease) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names and IDs of pharmacologic classes, with the results sorted by name, and identifiers sorted in descending order?", "output": "MATCH (n:PharmacologicClass) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve and sort the identifiers and names of pharmacologic classes in an ascending order?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the name and identifier of each compound with the results sorted by name and identifier in ascending order?", "output": "MATCH (n:Compound) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all symptom names along with their identifiers, sorted in ascending order by name and, for names that are the same, sorted by identifiers in descending order?", "output": "MATCH (n:Symptom) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve a sorted list of cellular component identifiers and names, where sorting is based on identifiers first ascending and then names descending?", "output": "MATCH (n:CellularComponent) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a sorted list of disease identifiers alongside their names, with the list ordered by ascending identifiers and descending names?", "output": "MATCH (n:Disease) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I need an ordered list of symptom names and their corresponding identifiers; how can this be retrieved in ascending order?", "output": "MATCH (n:Symptom) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers and names of pharmacologic classes, with the list sorted by identifier and then by name in reverse alphabetical order?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I view all pathway names and identifiers, sorted alphabetically by the names and then with identifiers sorted from highest to lowest?", "output": "MATCH (n:Pathway) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the names and identifiers of pathways, sorted by both identifier and name alphabetically?", "output": "MATCH (n:Pathway) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers and names of each MolecularFunction entity, with results sorted by identifier and name in ascending order?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the sorted list of pathway names and their corresponding identifiers?", "output": "MATCH (n:Pathway) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get a sorted list of compound names along with their identifiers, organizing them by name in ascending order and by identifier descending within the same name?", "output": "MATCH (n:Compound) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve a sorted list of Cellular Components based on their names and identifiers?", "output": "MATCH (n:CellularComponent) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers and names of all biological processes, ensuring they are sorted in ascending order first by their identifier and then by their name?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names and IDs of all biological processes, ensuring they are displayed in ascending order by both name and identifier?", "output": "MATCH (n:BiologicalProcess) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the method to fetch disease identifiers and names from the database, sorting them primarily by the identifier and secondarily by the name?", "output": "MATCH (n:Disease) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names and descending identifiers of diseases, sorted by their names?", "output": "MATCH (n:Disease) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names and identifiers of cellular components, sorted by name from A to Z and identifiers in descending order?", "output": "MATCH (n:CellularComponent) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names and identifiers of Biological Process entities, sorted first by their names in ascending order and then by their identifiers in descending order?", "output": "MATCH (n:BiologicalProcess) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What query can I use to obtain symptom identifiers and names, ordered by identifier alphabetically, with names sorted in reverse alphabetical order?", "output": "MATCH (n:Symptom) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the gene identifiers and names, sorted alphabetically by identifier and by name in descending sequence?", "output": "MATCH (n:Gene) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers and names of all BiologicalProcess nodes with the list sorted ascending by identifier and descending by name?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names and identifiers of molecular functions ordered by name and identifier in ascending order?", "output": "MATCH (n:MolecularFunction) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve a list of gene names and their corresponding identifiers, arranged in ascending order?", "output": "MATCH (n:Gene) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I retrieve a sorted list of gene identifiers and names from the database?", "output": "MATCH (n:Gene) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of anatomy nodes with their identifiers and names, sorted by identifier first and name in descending order?", "output": "MATCH (n:Anatomy) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the identifier and name for each Pathway from the database, sorted by identifier first and then by name in reverse order?", "output": "MATCH (n:Pathway) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve the names and unique identifiers of 'Anatomy' nodes, sorted alphabetically by their names, with identifiers arranged in descending order?", "output": "MATCH (n:Anatomy) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve and sort all compounds by their identifiers and names in an ascending sequence?", "output": "MATCH (n:Compound) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names and identifiers of all pharmacologic classes, sorted in ascending order?", "output": "MATCH (n:PharmacologicClass) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve and order the identifiers and names of all 'Anatomy' nodes alphabetically?", "output": "MATCH (n:Anatomy) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What query would you use to get the names and identifiers of cellular components in ascending order?", "output": "MATCH (n:CellularComponent) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get all anatomy node names and their identifiers sorted alphabetically?", "output": "MATCH (n:Anatomy) RETURN n.name, n.identifier ORDER BY n.name, n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the names and identifiers of molecular functions, arranged alphabetically by name and by identifier in descending order?", "output": "MATCH (n:MolecularFunction) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are the genes sorted by name and identifier, specifically ordering the names alphabetically and identifiers in reverse order, presented in the database?", "output": "MATCH (n:Gene) RETURN n.name, n.identifier ORDER BY n.name, n.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve and order the identifiers and names of all symptoms?", "output": "MATCH (n:Symptom) RETURN n.identifier, n.name ORDER BY n.identifier, n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers and names of compounds, arranged by identifier in increasing order, but with names sorted from Z to A?", "output": "MATCH (n:Compound) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I obtain the identifiers and names of each side effect, sorted initially by identifier and then in descending order by name?", "output": "MATCH (n:SideEffect) RETURN n.identifier, n.name ORDER BY n.identifier, n.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the BiologicalProcess whose URL attribute is set to \"http://purl.obolibrary.org/obo/GO_0086065\", sorting the results in alphabetical order.", "output": "MATCH (n:BiologicalProcess) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0086065\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we retrieve and sort in ascending order the gene identifiers for genes labeled with the description \"family with sequence similarity 227, member A\"?", "output": "MATCH (n:Gene) WHERE n.description = \"family with sequence similarity 227, member A\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the pharmacologic class name linked to the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000187063,\" and how is it sorted alphabetically?", "output": "MATCH (n:PharmacologicClass) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000187063\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the compound names that match the InChI \"InChI=1S/Mg.H2O4S/c;1-5(2,3)4/h;(H2,1,2,3,4)/q+2;/p-2\", and sort them in ascending order?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/Mg.H2O4S/c;1-5(2,3)4/h;(H2,1,2,3,4)/q+2;/p-2\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifiers of genes with the description \"neuroblastoma breakpoint family, member 19-like\" and sort them in ascending order?", "output": "MATCH (n:Gene) WHERE n.description = \"neuroblastoma breakpoint family, member 19-like\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name of the gene linked to the URL \"http://identifiers.org/ncbigene/152518\", sorted in ascending order?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/152518\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes with the description \"mitochondrial ribosomal protein L44\" sorted in ascending order?", "output": "MATCH (n:Gene) WHERE n.description = \"mitochondrial ribosomal protein L44\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the names of all genes with the license type \"CC0 1.0\", sorted alphabetically?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and list the identifiers in alphabetical order for genes described as \"RAB24, member RAS oncogene family\"?", "output": "MATCH (n:Gene) WHERE n.description = \"RAB24, member RAS oncogene family\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of biological process identifiers, sourced from the Gene Ontology, sorted in alphabetical order?", "output": "MATCH (n:BiologicalProcess) WHERE n.source = \"Gene Ontology\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve and sort alphabetically the names of all pathways with a license type of \"CC BY 3.0\".", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 3.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve a sorted list of cellular component names that have the license \"CC BY 4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and list the identifier for the compound whose URL is \"http://www.drugbank.ca/drugs/DB00563\" in ascending order?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00563\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of all compounds with the specified InChI value \"InChI=1S/C16H14O3/c1-11(16(18)19)13-8-5-9-14(10-13)15(17)12-6-3-2-4-7-12/h2-11H,1H3,(H,18,19)\" and sort them in ascending order?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C16H14O3/c1-11(16(18)19)13-8-5-9-14(10-13)15(17)12-6-3-2-4-7-12/h2-11H,1H3,(H,18,19)\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name of the symptom linked to the URL \"http://identifiers.org/mesh/D001836\" and sort it by name?", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D001836\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of cellular components that have the \"CC BY 4.0\" license, sorted from lowest to highest.", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers are returned when searching for a compound with the InChI \"InChI=1S/C13H13N3/c1-2-16-13-5-11-9-3-8(6-14-7-9)10(11)4-12(13)15-1/h1-2,4-5,8-9,14H,3,6-7H2/t8-,9+\" in ascending order of their identifiers?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C13H13N3/c1-2-16-13-5-11-9-3-8(6-14-7-9)10(11)4-12(13)15-1/h1-2,4-5,8-9,14H,3,6-7H2/t8-,9+\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find and sort by name all of the pathways that have \"PID via Pathway Commons\" as their data source.", "output": "MATCH (n:Pathway) WHERE n.source = \"PID via Pathway Commons\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all pathways whose source is \"Reactome via Pathway Commons\" in ascending alphabetical order.", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and sort alphabetically the identifiers of all cellular components named 'eukaryotic translation initiation factor 2B complex'?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"eukaryotic translation initiation factor 2B complex\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for all pathways that have been licensed under \"CC BY 4.0\" and display them in alphabetical order.", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and sort alphabetically the names of molecular functions which have a \"CC BY 4.0\" license?", "output": "MATCH (n:MolecularFunction) WHERE n.license = \"CC BY 4.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the name of the gene that has the specific URL \"http://identifiers.org/ncbigene/158067\" from the gene data set, and sort the results alphabetically?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/158067\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the identifiers of the pharmacologic class with the name \"Increased Hematopoietic Stem Cell Mobilization,\" sorting them from lowest to highest?", "output": "MATCH (n:PharmacologicClass) WHERE n.name = \"Increased Hematopoietic Stem Cell Mobilization\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes associated with Treacher Collins-Franceschetti syndrome 1, listed in ascending order?", "output": "MATCH (n:Gene) WHERE n.description = \"Treacher Collins-Franceschetti syndrome 1\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "If a compound has an InChI value of \"InChI=1S/C11H11F3N2O3/c1-6(2)10(17)15-7-3-4-9(16(18)19)8(5-7)11(12,13)14/h3-6H,1-2H3,(H,15,17)\", what is its name, and how would the names be ordered in an alphabetical list?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C11H11F3N2O3/c1-6(2)10(17)15-7-3-4-9(16(18)19)8(5-7)11(12,13)14/h3-6H,1-2H3,(H,15,17)\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the name of the compound linked to the URL \"http://www.drugbank.ca/drugs/DB00962\" and sort it in ascending order?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00962\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of the compound that corresponds to the InChIKey \"HNDVDQJCIGZPNO-YFKPBYRVSA-N\" and sort it alphabetically?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=HNDVDQJCIGZPNO-YFKPBYRVSA-N\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the identifiers for molecular functions whose license is \"CC BY 4.0\", sorted from A to Z?", "output": "MATCH (n:MolecularFunction) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve and sort by ascending order the identifiers of all symptoms whose license is \"CC0 1.0\"?", "output": "MATCH (n:Symptom) WHERE n.license = \"CC0 1.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve and sort the identifiers for anatomy entries whose source is Uberon in an ascending sequence?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the alphabetical list of compound names that have an InChI attribute equal to \"InChI=1S/C23H29ClFN3O4/c1-30-21-13-19(26)18(24)12-17(21)23(29)27-20-8-10-28(14-22(20)31-2)9-3-11-32-16-6-4-15(25)5-7-16/h4-7,12-13,20,22H,3,8-11,14,26H2,1-2H3,(H,27,29)/t20-,22+/m1/s1\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C23H29ClFN3O4/c1-30-21-13-19(26)18(24)12-17(21)23(29)27-20-8-10-28(14-22(20)31-2)9-3-11-32-16-6-4-15(25)5-7-16/h4-7,12-13,20,22H,3,8-11,14,26H2,1-2H3,(H,27,29)/t20-,22+/m1/s1\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the name of the pathway identified by \"PC7_2523\" and display it in ascending order?", "output": "MATCH (n:Pathway) WHERE n.identifier = \"PC7_2523\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and order the identifiers for all pathways with the name \"DNA Replication\" alphabetically in ascent order?", "output": "MATCH (n:Pathway) WHERE n.name = \"DNA Replication\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of all MolecularFunction nodes with a license type of \"CC BY 4.0\", sorted in ascending order?", "output": "MATCH (n:MolecularFunction) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of biological processes licensed as \"CC BY 4.0,\" with results displayed in ascending order by identifier?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you find and sort the identifiers of a MolecularFunction entity that has the URL \"http://purl.obolibrary.org/obo/GO_0032934\"?", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0032934\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the disease name whose identifier is \"DOID:175\" and list it in alphabetical order.", "output": "MATCH (n:Disease) WHERE n.identifier = \"DOID:175\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve and sort in ascending order the identifier of the gene with the URL \"http://identifiers.org/ncbigene/23568\"?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/23568\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of identifiers for symptoms specifically named \"Psychomotor Agitation,\" sorted from smallest to largest?", "output": "MATCH (n:Symptom) WHERE n.name = \"Psychomotor Agitation\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve and alphabetically sort the names of symptoms that use the URL \"http://identifiers.org/mesh/D019080\"?", "output": "MATCH (n:Symptom) WHERE n.url = \"http://identifiers.org/mesh/D019080\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of pathways that have the license \"CC BY 4.0\", sorted in ascending order?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all genes located on chromosome 5, sorted in ascending order?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"5\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers of cellular components associated with the Gene Ontology, and ensure they're in ascending order?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve an alphabetically ordered list of symptom names that come from the \"MeSH\" source?", "output": "MATCH (n:Symptom) WHERE n.source = \"MeSH\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and list, in ascending order, the identifiers of compounds that have the exact InChI code \"InChI=1S/C13H6Cl6O2/c14-6-2-8(16)12(20)4(10(6)18)1-5-11(19)7(15)3-9(17)13(5)21/h2-3,20-21H,1H2\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C13H6Cl6O2/c14-6-2-8(16)12(20)4(10(6)18)1-5-11(19)7(15)3-9(17)13(5)21/h2-3,20-21H,1H2\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and alphabetically sort the names of biological processes that originate from the Gene Ontology source?", "output": "MATCH (n:BiologicalProcess) WHERE n.source = \"Gene Ontology\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve and rank in ascending order the identifiers of pharmacologic classes with a source labeled \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we extract and sort the identifiers of genes that carry a \"CC0 1.0\" license in ascending sequence?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of compounds with the specific InChI key \"LZCDAPDGXCYOEH-UHFFFAOYSA-N\" sorted in ascending order?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=LZCDAPDGXCYOEH-UHFFFAOYSA-N\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of the gene linked to the URL \"http://identifiers.org/ncbigene/84287\", sorted in ascending order?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/84287\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of all genes on chromosome 5, ordered by name in ascending order?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"5\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the name of the `MolecularFunction` node that has the specific URL \"http://purl.obolibrary.org/obo/GO_0032029\", sorted alphabetically?", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0032029\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get an ordered list of names for anatomy items that are associated with the \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of MolecularFunction entities where their source is \"Gene Ontology,\" sorted alphabetically by their identifier?", "output": "MATCH (n:MolecularFunction) WHERE n.source = \"Gene Ontology\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular component identifiers, with the license \"CC BY 4.0\", exist in the database, sorted alphabetically?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the ordered name (ascending) of the compound that matches the URL \"http://www.drugbank.ca/drugs/DB00464\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00464\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of compound identifiers from the DrugBank source, presented in increasing order?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of the Anatomy entities whose mesh_id is \"D017536,\" sorted from lowest to highest?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D017536\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of genes that possess a \"CC0 1.0\" license and order them from smallest to largest.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and sort the identifiers for the compound at \"http://www.drugbank.ca/drugs/DB00936\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00936\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the ordered list of identifiers for the compound with the name \"Metixene\"?", "output": "MATCH (n:Compound) WHERE n.name = \"Metixene\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifiers for genes that are licensed under \"CC0 1.0\" and sort them in increasing order?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of cellular components listed in the database that are sourced from the Gene Ontology, sorted in alphabetical order?", "output": "MATCH (n:CellularComponent) WHERE n.source = \"Gene Ontology\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers from DrugBank do we have, sorted in ascending order?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the process to obtain the gene identifiers of 'LECT1', sorted from lowest to highest?", "output": "MATCH (n:Gene) WHERE n.name = \"LECT1\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the cellular components with the \"CC BY 4.0\" license sorted alphabetically by name?", "output": "MATCH (n:CellularComponent) WHERE n.license = \"CC BY 4.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get the identifiers of 'cell tip' cellular components, sorted in alphabetical order?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"cell tip\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve and order the name of a compound that matches the InChI Key \"UVSMNLNDYGZFPF-UHFFFAOYNA-N\" in ascending order?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=UVSMNLNDYGZFPF-UHFFFAOYNA-N\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me a list of identifiers for biological processes that have the \"CC BY 4.0\" license, sorted alphabetically by identifier?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the ordered identifiers of the compound with the given InChIKey \"InChIKey=XAUDJQYHKZQPEU-KVQBGUIXSA-N\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=XAUDJQYHKZQPEU-KVQBGUIXSA-N\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and sort the identifiers for symptoms called \"Chronic Pain\" in ascending order?", "output": "MATCH (n:Symptom) WHERE n.name = \"Chronic Pain\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of pathway names, licensed as \"CC BY 4.0\", arranged in ascending alphabetical order?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of biological processes sourced from the Gene Ontology, sorted in ascending order?", "output": "MATCH (n:BiologicalProcess) WHERE n.source = \"Gene Ontology\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve and sort the identifiers of genes found specifically on chromosome 3?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"3\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the names of anatomy nodes with the license \"CC BY 3.0\", displayed in ascending order?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds with a \"CC BY-NC 4.0\" license have their names sorted in ascending order?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the name of the molecular function where its URL equals \"http://purl.obolibrary.org/obo/GO_0005010\", and list it alphabetically.", "output": "MATCH (n:MolecularFunction) WHERE n.url = \"http://purl.obolibrary.org/obo/GO_0005010\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List all the gene names on chromosome 1 and arrange them in ascending order.", "output": "MATCH (n:Gene) WHERE n.chromosome = \"1\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound found using the DrugBank URL \"http://www.drugbank.ca/drugs/DB00348\", and how is it displayed in ascending order?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00348\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of anatomical entities with the URL \"http://purl.obolibrary.org/obo/UBERON_0001003,\" sorted in ascending order?", "output": "MATCH (n:Anatomy) WHERE n.url = \"http://purl.obolibrary.org/obo/UBERON_0001003\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of pathways licensed under \"CC0 1.0\", sorted in ascending alphabetical order?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC0 1.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes can be found on chromosome 5, and how are they ordered by name?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"5\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and list the names of genes that have the specific URL \"http://identifiers.org/ncbigene/84914,\" sorted alphabetically?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/84914\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of identifiers for Pathway nodes with the \"CC BY 3.0\" license, organized from the lowest to highest identifier?", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 3.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve and arrange alphabetically the names of pathways that are distributed under the \"CC BY 4.0\" license.", "output": "MATCH (n:Pathway) WHERE n.license = \"CC BY 4.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain a sorted list of identifiers from anatomy records that cite \"Uberon\" as their source?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a sorted list of pathway names where the source is \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway) WHERE n.source = \"Reactome via Pathway Commons\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological process identifiers are retrieved when filtering for a CC BY 4.0 license, with the results organized in ascending order?", "output": "MATCH (n:BiologicalProcess) WHERE n.license = \"CC BY 4.0\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the identifiers of all biological process entries labeled \"pore complex assembly,\" displayed in an ascending sequence?", "output": "MATCH (n:BiologicalProcess) WHERE n.name = \"pore complex assembly\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are the names of genes from \"Entrez Gene\" organized if sorted ascendingly?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifier corresponds to the compound associated with the InChIKey \"InChIKey=ATEBXHFBFRCZMA-VXTBVIBXSA-N\", and can it be ordered in ascending order?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=ATEBXHFBFRCZMA-VXTBVIBXSA-N\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all pharmacologic class names provided by the source \"FDA via DrugCentral\" and sort them alphabetically?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the Gene Ontology-named molecular functions, sorted by name in ascending order?", "output": "MATCH (n:MolecularFunction) WHERE n.source = \"Gene Ontology\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the pharmacologic class names associated with the identifier \"N0000190482\" sorted in ascending order?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier = \"N0000190482\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all biological processes identified from the \"Gene Ontology\" source, sorted in ascending alphabetical order?", "output": "MATCH (n:BiologicalProcess) WHERE n.source = \"Gene Ontology\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of the cellular components named \"BLOC-3 complex\" sorted in ascending order?", "output": "MATCH (n:CellularComponent) WHERE n.name = \"BLOC-3 complex\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and list the identifiers of the gene labeled \"SMPD1\" in a sequential order?", "output": "MATCH (n:Gene) WHERE n.name = \"SMPD1\" RETURN n.identifier ORDER BY n.identifier ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain an ordered list of names for molecular functions that come from the Gene Ontology?", "output": "MATCH (n:MolecularFunction) WHERE n.source = \"Gene Ontology\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of all the pharmacologic classes with a \"CC BY 4.0\" license, sorted alphabetically?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" RETURN n.name ORDER BY n.name ASC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the unique names of genes associated with the \"ZSCAN9\" gene through a \"COVARIES_GcG\" type relationship, sorted in descending alphabetical order.", "output": "MATCH (n:Gene { name: \"ZSCAN9\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers of diseases connected by a \"RESEMBLES_DrD\" relationship to diseases with the license \"CC BY 3.0\", sorted in reverse order?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" })-[r:RESEMBLES_DrD]->(m:Disease) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique biological process names linked to the gene via PARTICIPATES_GpBP from the URL \"http://identifiers.org/ncbigene/3091,\" listed in descending order by name.", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/3091\" })-[r:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct gene identifiers connected by the \"COVARIES_GcG\" relationship to the gene at \"http://identifiers.org/ncbigene/7746\", and sort these identifiers in descending order.", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/7746\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find and sort in descending order the identifiers of pathways linked to the gene described as \"adenylate cyclase activating polypeptide 1 (pituitary)\".", "output": "MATCH (n:Gene { description: \"adenylate cyclase activating polypeptide 1 (pituitary)\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify and return the names of all unique genes that have a \"COVARIES_GcG\" connection with the \"IL2\" gene, sorted by name in descending order.", "output": "MATCH (n:Gene { name: \"IL2\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes upregulated by the anatomy with mesh ID \"D011467,\" sorted in descending order?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct identifiers of genes influenced by the regulatory actions of the \"autophagy related 16-like 1 (S. cerevisiae)\" gene, sorted in reverse order.", "output": "MATCH (n:Gene { description: \"autophagy related 16-like 1 (S. cerevisiae)\" })-[r:REGULATES_GrG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the distinct identifiers of diseases that resemble the disease identified by \"DOID:5875\", sorted by identifier in reverse order?", "output": "MATCH (n:Disease { identifier: \"DOID:5875\" })-[r:RESEMBLES_DrD]->(m:Disease) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct identifiers of genes that are upregulated by the anatomy entity identified by BTO ID \"BTO:0001129\", sorted in descending order?", "output": "MATCH (n:Anatomy { bto_id: \"BTO:0001129\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct gene names that are sorted in reverse alphabetical order and have a COVARIES_GcG relationship with genes located on chromosome 7.", "output": "MATCH (n:Gene { chromosome: \"7\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of compounds connected by a \"RESEMBLES_CrC\" relationship to the compound identified by \"InChIKey=VRQVVMDWGGWHTJ-CQSZACIVSA-N\", and arrange these names in descending order.", "output": "MATCH (n:Compound { inchikey: \"InChIKey=VRQVVMDWGGWHTJ-CQSZACIVSA-N\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene names are linked to \"CC BY-NC 4.0\" licensed compounds via a BINDS_CbG relationship, and what is their order when sorted alphabetically from last to first?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" })-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of genes that interact with the gene having the description \"golgi brefeldin A resistant guanine nucleotide exchange factor 1,\" listed in descending order?", "output": "MATCH (n:Gene { description: \"golgi brefeldin A resistant guanine nucleotide exchange factor 1\" })-[r:INTERACTS_GiG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique symptom identifiers are related to diseases with a \"CC BY 3.0\" license, and how are they ordered in descending order by identifier?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" })-[r:PRESENTS_DpS]->(m:Symptom) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes that are upregulated by the anatomy identified as \"UBERON:0002367,\" sorted in descending order?", "output": "MATCH (n:Anatomy { identifier: \"UBERON:0002367\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct identifiers of genes that are upregulated by anatomy entities with a \"CC BY 3.0\" license, sorted in descending order?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique symptoms that are associated with the disease named \"spinal cancer\", sorted in descending order by symptom name?", "output": "MATCH (n:Disease { name: \"spinal cancer\" })-[r:PRESENTS_DpS]->(m:Symptom) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that are upregulated by the disease known as \"pancreatic cancer,\" ordered in descending alphabetical order?", "output": "MATCH (n:Disease { name: \"pancreatic cancer\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all unique identifiers of diseases that are treated by the compound with the identifier \"DB00227\" and sort them from greatest to least.", "output": "MATCH (n:Compound { identifier: \"DB00227\" })-[r:TREATS_CtD]->(m:Disease) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique identifiers of genes that the disease with identifier \"DOID:0050742\" upregulates, with the sequence arranged in decreasing order?", "output": "MATCH (n:Disease { identifier: \"DOID:0050742\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique identifiers of genes that have a \"COVARIES_GcG\" connection from the gene identified by the URL \"http://identifiers.org/ncbigene/84254\", sorted from highest to lowest identifier?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/84254\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct identifiers of genes that are downregulated by any compound carrying the \"CC BY-NC 4.0\" license, with results ordered in descending order.", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" })-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of genes that are upregulated by the disease with the URL \"http://purl.obolibrary.org/obo/DOID_1793,\" and how are these names ordered in descending order?", "output": "MATCH (n:Disease { url: \"http://purl.obolibrary.org/obo/DOID_1793\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are connected to the gene with the URL \"http://identifiers.org/ncbigene/6632\" via the 'COVARIES_GcG' relationship, and what is their order when sorted from highest to lowest?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/6632\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the disease identified by DOID:11612, which are the unique genes it upregulates and how are these gene names sorted from highest to lowest alphabetically?", "output": "MATCH (n:Disease { identifier: \"DOID:11612\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the list of unique gene identifiers that are influenced by the \"DOWNREGULATES_AdG\" relationship from the anatomy node with mesh_id \"D011467,\" sorted from highest to lowest.", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\" })-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes upregulated by the compound \"Dihomo-gamma-linolenic acid,\" sorted in descending order?", "output": "MATCH (n:Compound { name: \"Dihomo-gamma-linolenic acid\" })-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the unique identifiers of pathways where genes licensed as CC0 1.0 participate, and arrange them in reverse order.", "output": "MATCH (n:Gene { license: \"CC0 1.0\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct gene identifiers that are related to the gene \"interleukin 26\" by covariance, listing them in reverse alphabetical order.", "output": "MATCH (n:Gene { description: \"interleukin 26\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers of genes that are connected via 'COVARIES_GcG' relationships to genes licensed under CC0 1.0, sorted by identifier in descending order?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique gene IDs that are upregulated by anatomy nodes specified by Uberon, ordering the results starting with the highest identifier.", "output": "MATCH (n:Anatomy { source: \"Uberon\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases, represented by their unique identifiers, are palliated by Celecoxib, and how are these identifiers sorted in descending order?", "output": "MATCH (n:Compound { name: \"Celecoxib\" })-[r:PALLIATES_CpD]->(m:Disease) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have unique identifiers and are downregulated by pancreatic cancer, with the results arranged in descending order by identifier?", "output": "MATCH (n:Disease { name: \"pancreatic cancer\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of all distinct genes that are negatively regulated by the disease known as pancreatic cancer, sorted from largest to smallest.", "output": "MATCH (n:Disease { name: \"pancreatic cancer\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the unique compound identifiers that are part of the pharmacologic class linked to the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000191267\", and arrange them in descending order.", "output": "MATCH (n:PharmacologicClass { url: \"http://purl.bioontology.org/ontology/NDFRT/N0000191267\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that resemble DrugBank compounds according to the RESEMBLES_CrC relationship, in descending order?", "output": "MATCH (n:Compound { source: \"DrugBank\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct gene names expressed by the anatomy labeled as the prostate gland, sorted in descending order?", "output": "MATCH (n:Anatomy { name: \"prostate gland\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What descending list of unique pathway IDs is associated with the gene HIST1H3B through the PARTICIPATES_GpPW relationship?", "output": "MATCH (n:Gene { name: \"HIST1H3B\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes that are upregulated by the anatomy entity with the BTO ID \"BTO:0001129,\" listed in descending order?", "output": "MATCH (n:Anatomy { bto_id: \"BTO:0001129\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components, identified by unique identifiers, are linked to genes on chromosome 12 through the PARTICIPATES_GpCC relationship, arranged in descending order?", "output": "MATCH (n:Gene { chromosome: \"12\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes expressed in anatomy entities from the Uberon source, sorted in descending order?", "output": "MATCH (n:Anatomy { source: \"Uberon\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve unique compound identifiers linked to pharmacologic classes by the mechanism of action, arranged in descending order?", "output": "MATCH (n:PharmacologicClass { class_type: \"Mechanism of Action\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the distinct identifiers of pathways involving the \"CRK\" gene, ordered by identifier from largest to smallest.", "output": "MATCH (n:Gene { name: \"CRK\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the anatomy identified by \"UBERON:0002367\", what are the unique names of genes linked via an \"EXPRESSES_AeG\" relationship, sorted alphabetically in reverse order?", "output": "MATCH (n:Anatomy { identifier: \"UBERON:0002367\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct anatomy identifiers where diseases documented in the Disease Ontology localize, sorted in reverse order?", "output": "MATCH (n:Disease { source: \"Disease Ontology\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of cellular components, shown in descending order, that have a distinct participation relationship with the gene described as \"zinc finger, FYVE domain containing 27\"?", "output": "MATCH (n:Gene { description: \"zinc finger, FYVE domain containing 27\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases that the compound named \"Acetophenazine\" is used to palliate, ordered in descending order?", "output": "MATCH (n:Compound { name: \"Acetophenazine\" })-[r:PALLIATES_CpD]->(m:Disease) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct gene identifiers of genes related by \"COVARIES_GcG\" to \"Gene\" nodes, where these nodes have the license \"CC0 1.0\", and arrange them from highest to lowest.", "output": "MATCH (n:Gene { license: \"CC0 1.0\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the genes that are bound by the compound with the identifier \"DB00246,\" sorted in descending order?", "output": "MATCH (n:Compound { identifier: \"DB00246\" })-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique cellular component identifiers are linked to the gene with the description \"heat shock 70kDa protein 1-like\" through the PARTICIPATES_GpCC relationship?", "output": "MATCH (n:Gene { description: \"heat shock 70kDa protein 1-like\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct pathway identifiers where genes labeled with a CC0 1.0 license participate, sorted from highest to lowest?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway IDs are associated with genes on chromosome 11, with the results sorted from highest to lowest identifier?", "output": "MATCH (n:Gene { chromosome: \"11\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct symptom identifiers are presented by the disease with the URL \"http://purl.obolibrary.org/obo/DOID_1826\", and how are they organized in descending order?", "output": "MATCH (n:Disease { url: \"http://purl.obolibrary.org/obo/DOID_1826\" })-[r:PRESENTS_DpS]->(m:Symptom) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the unique identifiers for each gene that has an interaction with the gene \"DDX5,\" and list these identifiers in decreasing order.", "output": "MATCH (n:Gene { name: \"DDX5\" })-[r:INTERACTS_GiG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique names of genes that experience a downregulation interaction from diseases noted within the Disease Ontology, and sort these names in descending sequence.", "output": "MATCH (n:Disease { source: \"Disease Ontology\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list distinct gene identifiers that are connected to diseases with a \"CC BY 3.0\" license, specifically through a \"DOWNREGULATES_DdG\" relationship, in reverse alphabetical order?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy names, linked to diseases from the Disease Ontology, are returned uniquely and sorted alphabetically in reverse order?", "output": "MATCH (n:Disease { source: \"Disease Ontology\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct gene identifiers that are upregulated due to an interaction with the compound having the InChIKey \"SLAYUXIURFNXPG-CRAIPNDOSA-N\", and sort these identifiers in descending order.", "output": "MATCH (n:Compound { inchikey: \"InChIKey=SLAYUXIURFNXPG-CRAIPNDOSA-N\" })-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct genes whose expression is increased by diseases with the specified license \"CC BY 3.0,\" and display their names sorted from highest to lowest alphabetically.", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are upregulated by diseases licensed under \"CC BY 3.0\", and how are they listed when sorted in descending order?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct gene names are influenced by downregulation through the anatomy specified by the URL \"http://purl.obolibrary.org/obo/UBERON_0002367,\" sorted in reverse alphabetical order?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0002367\" })-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of compounds that resemble compounds with a \"CC BY-NC 4.0\" license, sorted in descending order?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What set of unique gene names are associated with 'COVARIES_GcG' relationships originating from genes under the CC0 1.0 license, sorted alphabetically backwards?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct genes have identifiers that are influenced by the prostate gland through upregulation, and how are these identifiers ordered?", "output": "MATCH (n:Anatomy { name: \"prostate gland\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the distinct gene identifiers that are downregulated by compound \"DB00432\", and list them in descending order.", "output": "MATCH (n:Compound { identifier: \"DB00432\" })-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique identifiers of genes connected to diseases licensed with CC BY 3.0, ensuring the list is ordered in descending order.", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" })-[r:ASSOCIATES_DaG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that interact with the gene identified by the URL \"http://identifiers.org/ncbigene/3276\", sorted in descending order?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/3276\" })-[r:INTERACTS_GiG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique gene identifiers associated with the disease \"age-related macular degeneration,\" listed in descending order?", "output": "MATCH (n:Disease { name: \"age related macular degeneration\" })-[r:ASSOCIATES_DaG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve the unique IDs of anatomical sites linked to diseases in the Disease Ontology, with the results displayed in descending order?", "output": "MATCH (n:Disease { source: \"Disease Ontology\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique anatomy identifiers for the disease that corresponds to \"http://purl.obolibrary.org/obo/DOID_11612\", sorted in reverse order?", "output": "MATCH (n:Disease { url: \"http://purl.obolibrary.org/obo/DOID_11612\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are uniquely upregulated by anatomical items with a \"CC BY 3.0\" license, and how are they sorted alphabetically in reverse?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique gene identifiers upregulated by compounds sourced from DrugBank, ordered in descending order?", "output": "MATCH (n:Compound { source: \"DrugBank\" })-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct gene identifiers that are linked to being downregulated by anatomical entities licensed as \"CC BY 3.0,\" sorted by identifier in descending order.", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" })-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene names are uniquely upregulated by the specific compound \"DB00661\", with the results sorted in decreasing order?", "output": "MATCH (n:Compound { identifier: \"DB00661\" })-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes that are expressed in anatomy parts sourced from Uberon, ordered in descending order?", "output": "MATCH (n:Anatomy { source: \"Uberon\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have distinct names and are associated with the compound characterized by the InChI code \"InChI=1S/C14H10Cl4/c15-10-7-5-9(6-8-10)13(14(17)18)11-3-1-2-4-12(11)16/h1-8,13-14H\" through a BINDS_CbG relationship?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C14H10Cl4/c15-10-7-5-9(6-8-10)13(14(17)18)11-3-1-2-4-12(11)16/h1-8,13-14H\" })-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique gene names that are upregulated by the anatomical entity with the identifier \"UBERON:0002367\", and how are these names ordered in descending alphabetical order?", "output": "MATCH (n:Anatomy { identifier: \"UBERON:0002367\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the distinct set of gene identifiers that are linked to compounds with the specific license \"CC BY-NC 4.0\", organizing them from the largest to the smallest identifier?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" })-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the ordered list of unique gene names that interact with the specific gene associated with the URL \"http://identifiers.org/ncbigene/2563\", starting from the end of the alphabet.", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/2563\" })-[r:INTERACTS_GiG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers of genes that have an interaction with genes having the \"Entrez Gene\" source, sorting the results by identifier in reverse order?", "output": "MATCH (n:Gene { source: \"Entrez Gene\" })-[r:INTERACTS_GiG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct compound identifiers associated with pharmacologic classes licensed under \"CC BY 4.0\", sorted from highest to lowest?", "output": "MATCH (n:PharmacologicClass { license: \"CC BY 4.0\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the distinct identifiers for anatomical locations associated with diseases sourced from the Disease Ontology, sorted by identifier from highest to lowest?", "output": "MATCH (n:Disease { source: \"Disease Ontology\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of genes that are covaried with genes licensed under \"CC0 1.0\", sorted in descending order?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" })-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene identifiers are present for genes linked to the anatomical entity with the URL \"http://purl.obolibrary.org/obo/UBERON_0001003\", and how are they ordered if descending?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0001003\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct anatomy identifiers that diseases from the Disease Ontology localize to, presented in descending order according to their identifier?", "output": "MATCH (n:Disease { source: \"Disease Ontology\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct pathway identifiers where genes from chromosome 2 participate, and how are they sorted starting from the largest?", "output": "MATCH (n:Gene { chromosome: \"2\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the names of all unique genes that are affected by downregulation due to compound DB00748, sorted in reverse alphabetical order.", "output": "MATCH (n:Compound { identifier: \"DB00748\" })-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of cellular components that the gene with the description \"chromosome 2 open reading frame 42\" is involved with, sorted in descending order?", "output": "MATCH (n:Gene { description: \"chromosome 2 open reading frame 42\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct gene names that experience downregulation from the Anatomy entity with the identifier \"BTO:0001129\", and how are these names arranged in reverse alphabetical order?", "output": "MATCH (n:Anatomy { bto_id: \"BTO:0001129\" })-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of all unique compounds associated with the pharmacologic class at \"http://purl.bioontology.org/ontology/NDFRT/N0000185607\", and display them in descending order.", "output": "MATCH (n:PharmacologicClass { url: \"http://purl.bioontology.org/ontology/NDFRT/N0000185607\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique compound identifiers are related to the pharmacologic class with the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000175976\", when ordered in descending order?", "output": "MATCH (n:PharmacologicClass { url: \"http://purl.bioontology.org/ontology/NDFRT/N0000175976\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of the genes that are distinctively upregulated by the anatomy entity with the identifier BTO:0001129, ordered highest to lowest?", "output": "MATCH (n:Anatomy { bto_id: \"BTO:0001129\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes whose identifiers appear in descending order due to being upregulated by the compound located at the URL \"http://www.drugbank.ca/drugs/DB00305\".", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00305\" })-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct gene identifiers are shown when querying for expressions linked to the anatomy node with a BTO ID of \"BTO:0000122\", with the results sorted in reverse order?", "output": "MATCH (n:Anatomy { bto_id: \"BTO:0000122\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT m.identifier ORDER BY m.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the collection of distinct compound names linked to the Neurokinin 1 Antagonists class, with the names organized in descending order?", "output": "MATCH (n:PharmacologicClass { name: \"Neurokinin 1 Antagonists\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of pathways associated with genes located on chromosome 5, listed in descending order?", "output": "MATCH (n:Gene { chromosome: \"5\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of pathways that genes located on chromosome 9 are involved in, listed in descending order?", "output": "MATCH (n:Gene { chromosome: \"9\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names can be found among those palliated by compounds coming from DrugBank, presented in reverse alphabetical order?", "output": "MATCH (n:Compound { source: \"DrugBank\" })-[r:PALLIATES_CpD]->(m:Disease) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find, in reverse alphabetical order, the names of genes that the anatomy entity having mesh_id \"D011467\" acts to downregulate?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\" })-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN DISTINCT m.name ORDER BY m.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve up to five pathway names ordered in ascending alphabetical order?", "output": "MATCH (n:Pathway) RETURN n.name ORDER BY n.name ASC LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve and order the initial nine identifiers for nodes labeled as CellularComponent?", "output": "MATCH (n:CellularComponent) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the top five anatomical nodes when sorted in descending order by name?", "output": "MATCH (n:Anatomy) RETURN n.name ORDER BY n.name DESC LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you extract and display the identifiers of the final seven diseases if sorted by their identifiers in decreasing order?", "output": "MATCH (n:Disease) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the Anatomy node with the highest value when ordered in descending order?", "output": "MATCH (n:Anatomy) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the first four identifiers of MolecularFunction nodes starting from the largest in reverse alphabetical order?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of up to nine pharmacologic class nodes arranged alphabetically?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which three anatomy node identifiers come first when sorted in alphabetical order?", "output": "MATCH (n:Anatomy) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which four disease nodes have the smallest identifiers when ordered from smallest to largest?", "output": "MATCH (n:Disease) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway identifiers appear among the last ten when sorted in descending order?", "output": "MATCH (n:Pathway) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which 10 cellular component identifiers appear last when sorted in descending order?", "output": "MATCH (n:CellularComponent) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the identifiers of the first ten genes when sorted in ascending order?", "output": "MATCH (n:Gene) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class names appear first when sorted in ascending order, and what are they?", "output": "MATCH (n:PharmacologicClass) RETURN n.name ORDER BY n.name ASC LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the six genes that come first when sorted in descending order by name?", "output": "MATCH (n:Gene) RETURN n.name ORDER BY n.name DESC LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the first four anatomy nodes when ordered alphabetically?", "output": "MATCH (n:Anatomy) RETURN n.name ORDER BY n.name ASC LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers of the top seven pharmacologic classes based on descending order?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which six cellular component names come last when sorted in reverse alphabetical order?", "output": "MATCH (n:CellularComponent) RETURN n.name ORDER BY n.name DESC LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which five gene identifiers come first if we arrange them from highest to lowest?", "output": "MATCH (n:Gene) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 5"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of seven molecular function names when sorted in descending order by their names?", "output": "MATCH (n:MolecularFunction) RETURN n.name ORDER BY n.name DESC LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers of four pathways sorted by their identifiers, starting from the lowest?", "output": "MATCH (n:Pathway) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names of pharmacologic classes are returned when ordered from Z to A, limited to three results?", "output": "MATCH (n:PharmacologicClass) RETURN n.name ORDER BY n.name DESC LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the last six biological process names sorted alphabetically in reverse order?", "output": "MATCH (n:BiologicalProcess) RETURN n.name ORDER BY n.name DESC LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which three symptom names appear first when ordering all symptom names in reverse alphabetical order?", "output": "MATCH (n:Symptom) RETURN n.name ORDER BY n.name DESC LIMIT 3"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the ordered list of the first four disease names when sorted from A to Z?", "output": "MATCH (n:Disease) RETURN n.name ORDER BY n.name ASC LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the first cellular component's name in alphabetical order according to this database?", "output": "MATCH (n:CellularComponent) RETURN n.name ORDER BY n.name ASC LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which seven symptoms come first when you arrange all symptom names in ascending order?", "output": "MATCH (n:Symptom) RETURN n.name ORDER BY n.name ASC LIMIT 7"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function has the smallest identifier when the identifiers are sorted in ascending order?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which six compound identifiers appear first if sorted in descending order?", "output": "MATCH (n:Compound) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 6"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the first couple of gene names when ordered from least to greatest by name?", "output": "MATCH (n:Gene) RETURN n.name ORDER BY n.name ASC LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain the identifiers of the four latest symptoms listed from highest to lowest?", "output": "MATCH (n:Symptom) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which names represent the initial two molecular functions when ordered by name in ascending order?", "output": "MATCH (n:MolecularFunction) RETURN n.name ORDER BY n.name ASC LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the top eight pathways when listed in descending alphabetical order?", "output": "MATCH (n:Pathway) RETURN n.name ORDER BY n.name DESC LIMIT 8"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which two biological process identifiers appear last when ordered in descending order?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier ORDER BY n.identifier DESC LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological process appears first when sorting the processes by name in ascending order?", "output": "MATCH (n:BiologicalProcess) RETURN n.name ORDER BY n.name ASC LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the first ten compound identifiers sorted by ascending alphabetical order?", "output": "MATCH (n:Compound) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 10"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the last two compound names when sorted in descending order by name?", "output": "MATCH (n:Compound) RETURN n.name ORDER BY n.name DESC LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you tell me the identifier of the symptom that comes first when identifiers are sorted from smallest to largest?", "output": "MATCH (n:Symptom) RETURN n.identifier ORDER BY n.identifier ASC LIMIT 1"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the last two diseases when listed in descending alphabetical order?", "output": "MATCH (n:Disease) RETURN n.name ORDER BY n.name DESC LIMIT 2"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the first four side effect nodes when their names are ordered alphabetically?", "output": "MATCH (n:SideEffect) RETURN n.name ORDER BY n.name ASC LIMIT 4"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nine compound names appear first when ordered alphabetically?", "output": "MATCH (n:Compound) RETURN n.name ORDER BY n.name ASC LIMIT 9"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of compounds and the corresponding count of genes they downregulate, with the results ranked from the most to the least number of genes downregulated?", "output": "MATCH (d:Compound)-[r:DOWNREGULATES_CdG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each compound license, how many times does a compound resemble another via the \u201cRESEMBLES_CrC\u201d relationship, and can you provide this count in descending order?", "output": "MATCH (d:Compound)-[r:RESEMBLES_CrC]->(s:Compound) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find and rank disease URLs based on the number of genes each disease upregulates, and what is the count of these genes for each disease in descending order?", "output": "MATCH (d:Disease)-[r:UPREGULATES_DuG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list disease URLs based on the number of symptoms they present, ranking them by the number of symptoms from highest to lowest?", "output": "MATCH (d:Disease)-[r:PRESENTS_DpS]->(s:Symptom) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list gene descriptions ordered by the number of pathways they are involved in, starting with the gene with the highest participation?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpPW]->(s:Pathway) RETURN d.description, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the list of pharmacologic class licenses and the count of associated compounds they include, ordered descending by compound count?", "output": "MATCH (d:PharmacologicClass)-[r:INCLUDES_PCiC]->(s:Compound) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find diseases and count the number of symptoms they present, ordering the results by the highest number of symptoms first?", "output": "MATCH (d:Disease)-[r:PRESENTS_DpS]->(s:Symptom) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the URLs of genes that connect to other genes through \"COVARIES_GcG\" relationships, sorted by the number of these connections in descending order.", "output": "MATCH (d:Gene)-[r:COVARIES_GcG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have URLs, and how many genes does each disease downregulate according to their relationship count, sorted in descending order?", "output": "MATCH (d:Disease)-[r:DOWNREGULATES_DdG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the number of pathways each gene, grouped by license, participates in, sorted by the highest count first?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpPW]->(s:Pathway) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I list genes grouped by their licenses, organized by the number of molecular functions they are involved in?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpMF]->(s:MolecularFunction) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs for diseases along with a count of their associated genes, sorted by the highest number of gene associations?", "output": "MATCH (d:Disease)-[r:ASSOCIATES_DaG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the URL of each disease along with the number of resembling diseases, sorted by the number of resemblances in descending order. ", "output": "MATCH (d:Disease)-[r:RESEMBLES_DrD]->(s:Disease) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of chromosomes sorted by the number of genes they regulate in descending order?", "output": "MATCH (d:Gene)-[r:REGULATES_GrG]->(s:Gene) RETURN d.chromosome, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of disease licenses along with the count of anatomical structures they localize to, sorted in descending order by the number of localizations?", "output": "MATCH (d:Disease)-[r:LOCALIZES_DlA]->(s:Anatomy) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each anatomy license, how many genes do they upregulate, and how do these counts compare when sorted from highest to lowest?", "output": "MATCH (d:Anatomy)-[r:UPREGULATES_AuG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of diseases palliated by each compound, and which compound identifiers are linked to them, sorted in descending order?", "output": "MATCH (d:Compound)-[r:PALLIATES_CpD]->(s:Disease) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifier names of genes and their corresponding count of connections to other genes based on the COVARIES_GcG relationship, sorted with the most connected gene first?", "output": "MATCH (d:Gene)-[r:COVARIES_GcG]->(s:Gene) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the mesh IDs of anatomy entities and count how many genes each entity upregulates, ordering the results by this count in descending order?", "output": "MATCH (d:Anatomy)-[r:UPREGULATES_AuG]->(s:Gene) RETURN d.mesh_id, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many cellular components are linked to each gene via the PARTICIPATES_GpCC relationship, and what is the URL for each gene? Please order the results by the number of components in descending order.", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpCC]->(s:CellularComponent) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the gene identifiers associated with the highest number of pathways and display this information sorted from most to fewest pathways?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpPW]->(s:Pathway) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes have the most gene associations based on the COVARIES_GcG relationship, and how do the counts compare?", "output": "MATCH (d:Gene)-[r:COVARIES_GcG]->(s:Gene) RETURN d.chromosome, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene description, how many cellular components are they connected to, and can you sort the results by the decreasing order of component count?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpCC]->(s:CellularComponent) RETURN d.description, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the gene URLs along with the count of pathways they are part of, sorted by the highest number of associated pathways?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpPW]->(s:Pathway) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify genes by their identifiers and count the cellular components they participate in, with results sorted from the greatest to the least number of components?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpCC]->(s:CellularComponent) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of pathways associated with genes from each chromosome, sorted by the highest pathway participation?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpPW]->(s:Pathway) RETURN d.chromosome, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of compounds that have the ability to upregulate genes, along with the number of genes affected by each in descending order of gene count?", "output": "MATCH (d:Compound)-[r:UPREGULATES_CuG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of diseases and their associated count of anatomical locations, sorted by the highest number of locations?", "output": "MATCH (d:Disease)-[r:LOCALIZES_DlA]->(s:Anatomy) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy entities have URLs, and how many genes do they upregulate, sorted by the number of genes they affect in descending order?", "output": "MATCH (d:Anatomy)-[r:UPREGULATES_AuG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list compounds by their identifiers along with the count of genes they bind to, arranged in decreasing order of the count?", "output": "MATCH (d:Compound)-[r:BINDS_CbG]->(s:Gene) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of anatomy nodes sorted by the number of associated expressed genes, from most to fewest?", "output": "MATCH (d:Anatomy)-[r:EXPRESSES_AeG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the BTO IDs of anatomy nodes alongside the count of genes they upregulate, sorted from the highest to lowest gene count?", "output": "MATCH (d:Anatomy)-[r:UPREGULATES_AuG]->(s:Gene) RETURN d.bto_id, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a ranked list of pharmacologic class identifiers based on the number of compounds included in each, from highest to lowest?", "output": "MATCH (d:PharmacologicClass)-[r:INCLUDES_PCiC]->(s:Compound) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses of diseases along with the number of other diseases they resemble, sorting the results by the resemblance count in descending order?", "output": "MATCH (d:Disease)-[r:RESEMBLES_DrD]->(s:Disease) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the URLs of genes based on the number of their interactions with other genes, sorted from the highest to the lowest interaction count.", "output": "MATCH (d:Gene)-[r:INTERACTS_GiG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many genes are downregulated by each disease, and what are the identifiers of these diseases, sorted in descending order of gene count?", "output": "MATCH (d:Disease)-[r:DOWNREGULATES_DdG]->(s:Gene) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many genes are bound by each compound based on their InChI, sorted from the compound binding the most genes to the least?", "output": "MATCH (d:Compound)-[r:BINDS_CbG]->(s:Gene) RETURN d.inchi, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the relationship between diseases' licenses and the number of genes they downregulate, presented in descending order of gene counts?", "output": "MATCH (d:Disease)-[r:DOWNREGULATES_DdG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sources of anatomy express genes and what is the count of genes expressed by each, displayed in descending order of gene count?", "output": "MATCH (d:Anatomy)-[r:EXPRESSES_AeG]->(s:Gene) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of compounds ordered by how many genes they bind to, in descending order of the count?", "output": "MATCH (d:Compound)-[r:BINDS_CbG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of diseases along with their respective counts of associated genes, sorted by the highest number of associations first?", "output": "MATCH (d:Disease)-[r:ASSOCIATES_DaG]->(s:Gene) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide a ranking of compound licenses based on the number of genes they bind within the database, showing the most bound genes at the top.", "output": "MATCH (d:Compound)-[r:BINDS_CbG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of diseases and their corresponding number of anatomical localizations, sorted from highest to lowest localization count?", "output": "MATCH (d:Disease)-[r:LOCALIZES_DlA]->(s:Anatomy) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the distribution of cellular component participation by gene licenses, listed in descending order of component count?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpCC]->(s:CellularComponent) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the InChIKey for compounds that cause gene downregulation and the respective count of downregulated genes, with the results sorted by descending order of the count?", "output": "MATCH (d:Compound)-[r:DOWNREGULATES_CdG]->(s:Gene) RETURN d.inchikey, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the diseases along with the count of genes each one upregulates, sorted by the highest count of genes?", "output": "MATCH (d:Disease)-[r:UPREGULATES_DuG]->(s:Gene) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the InChIKey of each compound and how many genes does each one bind to, sorted in descending order by the number of genes?", "output": "MATCH (d:Compound)-[r:BINDS_CbG]->(s:Gene) RETURN d.inchikey, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of pharmacologic classes, alongside the count of compounds they contain, sorted starting with the class that includes the most compounds?", "output": "MATCH (d:PharmacologicClass)-[r:INCLUDES_PCiC]->(s:Compound) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of genes downregulated by different anatomical parts, sorted by the count in descending order?", "output": "MATCH (d:Anatomy)-[r:DOWNREGULATES_AdG]->(s:Gene) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of anatomical parts that downregulate the largest number of genes?", "output": "MATCH (d:Anatomy)-[r:DOWNREGULATES_AdG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the licenses for anatomy entities along with the count of genes they express, with the results ordered by the highest expression count?", "output": "MATCH (d:Anatomy)-[r:EXPRESSES_AeG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of disease sources with the count of genes they upregulate, ordered from the most to the least number of upregulated genes?", "output": "MATCH (d:Disease)-[r:UPREGULATES_DuG]->(s:Gene) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we rank compounds by their license according to the number of genes they upregulate, showing the highest counts first?", "output": "MATCH (d:Compound)-[r:UPREGULATES_CuG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of compound licenses with the corresponding count of diseases palliated by them, arranged from the highest to the lowest count?", "output": "MATCH (d:Compound)-[r:PALLIATES_CpD]->(s:Disease) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of symptoms associated with each disease license, and how are these diseases ordered by the number of symptoms present in descending order?", "output": "MATCH (d:Disease)-[r:PRESENTS_DpS]->(s:Symptom) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the InChI identifiers of compounds and count the number of diseases each compound is known to palliate, sorted from most to least diseases?", "output": "MATCH (d:Compound)-[r:PALLIATES_CpD]->(s:Disease) RETURN d.inchi, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of interacting genes for each gene source, sorted by the highest number of interactions?", "output": "MATCH (d:Gene)-[r:INTERACTS_GiG]->(s:Gene) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of genes downregulated by diseases, grouped by their source, and which diseases have the highest counts?", "output": "MATCH (d:Disease)-[r:DOWNREGULATES_DdG]->(s:Gene) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene URL, how many associated molecular functions can be identified, and how are these counts ranked from largest to smallest?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpMF]->(s:MolecularFunction) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes and the count of cellular components they are associated with, sorted by the number of associations in descending order?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpCC]->(s:CellularComponent) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many genes are downregulated by each anatomical element, and what is the license type of these elements, when sorted in descending order by gene count?", "output": "MATCH (d:Anatomy)-[r:DOWNREGULATES_AdG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license of each source gene and determine how many target genes are linked to it through the 'COVARIES_GcG' relationship, displaying the results from the most to the least linked?", "output": "MATCH (d:Gene)-[r:COVARIES_GcG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease licenses are linked to the most genes through upregulation in descending order?", "output": "MATCH (d:Disease)-[r:UPREGULATES_DuG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of cellular components associated with genes from each chromosome, ordered by the number of components a chromosome's genes are involved in?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpCC]->(s:CellularComponent) RETURN d.chromosome, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have associated URLs, and how many diseases does each of these compounds help to palliate, ordered by the number of diseases from highest to lowest?", "output": "MATCH (d:Compound)-[r:PALLIATES_CpD]->(s:Disease) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of diseases sorted by how many symptoms they present, along with each disease's unique identifier?", "output": "MATCH (d:Disease)-[r:PRESENTS_DpS]->(s:Symptom) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list diseases along with the count of genes they upregulate, sorted from the highest to lowest gene count?", "output": "MATCH (d:Disease)-[r:UPREGULATES_DuG]->(s:Gene) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the sources of compounds that pally with diseases and count the diseases for each source, displaying them in order from the highest to lowest count.", "output": "MATCH (d:Compound)-[r:PALLIATES_CpD]->(s:Disease) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of chromosomes and show how many genes they interact with, sorted by interaction count from highest to lowest?", "output": "MATCH (d:Gene)-[r:INTERACTS_GiG]->(s:Gene) RETURN d.chromosome, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a ranking of disease names based on how many times they are resembled by other diseases?", "output": "MATCH (d:Disease)-[r:RESEMBLES_DrD]->(s:Disease) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many diseases can each compound treat according to the record, ordered by the number of diseases they treat in descending order?", "output": "MATCH (d:Compound)-[r:TREATS_CtD]->(s:Disease) RETURN d.inchikey, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many genes does each regulating gene control, and can I have a list of these regulating genes' URLs sorted by their regulatory influence?", "output": "MATCH (d:Gene)-[r:REGULATES_GrG]->(s:Gene) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many genes are associated with each disease license, and in what order do they appear from the highest gene count to the lowest?", "output": "MATCH (d:Disease)-[r:ASSOCIATES_DaG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the ranking of compound URLs by how many compounds each resembles, starting from the highest count?", "output": "MATCH (d:Compound)-[r:RESEMBLES_CrC]->(s:Compound) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the descriptions of genes along with the count of other genes they regulate, sorted by the count in decreasing order?", "output": "MATCH (d:Gene)-[r:REGULATES_GrG]->(s:Gene) RETURN d.description, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene identified by its source, how many biological processes does it participate in, and can you provide this list sorted by the highest to lowest count?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpBP]->(s:BiologicalProcess) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the distribution of genes across chromosomes in terms of their involvement in molecular functions, sorted by the highest number of functions participated in for each chromosome?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpMF]->(s:MolecularFunction) RETURN d.chromosome, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each compound along with how many genes it upregulates, sorted so that the compound upregulating the most genes appears first?", "output": "MATCH (d:Compound)-[r:UPREGULATES_CuG]->(s:Gene) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the licenses of the genes that have regulatory roles over other genes, sorted by how many genes they regulate in descending order?", "output": "MATCH (d:Gene)-[r:REGULATES_GrG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the number of genes that each anatomy acts upon through upregulation and sort the anatomies based on this gene count?", "output": "MATCH (d:Anatomy)-[r:UPREGULATES_AuG]->(s:Gene) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the URLs of compounds and the count of side effects they are linked to, sorted by the highest number of side effects first?", "output": "MATCH (d:Compound)-[r:CAUSES_CcSE]->(s:SideEffect) RETURN d.url, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of diseases alleviated by each compound, sorted from those with the most palliated diseases to those with the least, based on their InChIKey identifier?", "output": "MATCH (d:Compound)-[r:PALLIATES_CpD]->(s:Disease) RETURN d.inchikey, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many diseases resemble each specific disease and what are their identifiers, sorted by the number of resemblances in descending order?", "output": "MATCH (d:Disease)-[r:RESEMBLES_DrD]->(s:Disease) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene license, how many biological processes are they involved in and can you sort these counts from highest to lowest?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpBP]->(s:BiologicalProcess) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases downregulate genes, and how many genes does each one downregulate, sorted by the number of genes from highest to lowest?", "output": "MATCH (d:Disease)-[r:DOWNREGULATES_DdG]->(s:Gene) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds and how many diseases does each compound palliatively treat, sorted by the number of diseases they affect in descending order?", "output": "MATCH (d:Compound)-[r:PALLIATES_CpD]->(s:Disease) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, how many distinct pathways do they participate in, ordered from the most to the least pathways?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpPW]->(s:Pathway) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the order of compounds by their license that downregulate genes, sorted by the quantity of affected genes in descending order?", "output": "MATCH (d:Compound)-[r:DOWNREGULATES_CdG]->(s:Gene) RETURN d.license, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the chromosomes alongside the number of biological processes their genes participate in, sorted in descending order by the number of processes?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpBP]->(s:BiologicalProcess) RETURN d.chromosome, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct cellular components associated with each gene source, and how are these counts ordered from highest to lowest?", "output": "MATCH (d:Gene)-[r:PARTICIPATES_GpCC]->(s:CellularComponent) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of pharmacologic classes along with the count of compounds they contain, arranged in descending order by this count?", "output": "MATCH (d:PharmacologicClass)-[r:INCLUDES_PCiC]->(s:Compound) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many diseases is each compound, identified by its InChI, linked to as a treatment, and can you sort this information from the highest to the lowest count?", "output": "MATCH (d:Compound)-[r:TREATS_CtD]->(s:Disease) RETURN d.inchi, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy entities have BTO IDs, and how many genes does each entity downregulate, in descending order of the gene count?", "output": "MATCH (d:Anatomy)-[r:DOWNREGULATES_AdG]->(s:Gene) RETURN d.bto_id, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a ranking of source Compounds based on the number of Compounds they resemble with a Resembles_CrC relationship?", "output": "MATCH (d:Compound)-[r:RESEMBLES_CrC]->(s:Compound) RETURN d.source, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the anatomy entities along with the number of genes they express, sorted by the number of expressed genes in descending order?", "output": "MATCH (d:Anatomy)-[r:EXPRESSES_AeG]->(s:Gene) RETURN d.bto_id, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a ranking of genes based on how many other genes they interact with, using the 'INTERACTS_GiG' relationship?", "output": "MATCH (d:Gene)-[r:INTERACTS_GiG]->(s:Gene) RETURN d.name, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the gene descriptions and count how many times each gene is covaried with other genes, in descending order of these counts?", "output": "MATCH (d:Gene)-[r:COVARIES_GcG]->(s:Gene) RETURN d.description, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list compound identifiers along with the count of side effects they cause, sorted by the highest to lowest count?", "output": "MATCH (d:Compound)-[r:CAUSES_CcSE]->(s:SideEffect) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I list compounds by their unique InChIKeys along with the count of side effects they are associated with, ranked by the number of side effects in descending order?", "output": "MATCH (d:Compound)-[r:CAUSES_CcSE]->(s:SideEffect) RETURN d.inchikey, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of genes linked to each disease identifier, and how do these diseases rank by the number of gene associations they have?", "output": "MATCH (d:Disease)-[r:ASSOCIATES_DaG]->(s:Gene) RETURN d.identifier, COUNT(s) AS sCount ORDER BY sCount DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique compound URLs are associated with palliating diseases, and how are they sorted if listed from highest to lowest?", "output": "MATCH (c:Compound)-[r:PALLIATES_CpD]->(g:Disease) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find distinct URLs of diseases that have resemblance relationships with other diseases, and ensure these are sorted in reverse alphabetical order?", "output": "MATCH (c:Disease)-[r:RESEMBLES_DrD]->(g:Disease) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct disease identifiers are associated with the RESEMBLES_DrD relationship and how are they sorted in decreasing order?", "output": "MATCH (c:Disease)-[r:RESEMBLES_DrD]->(g:Disease) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve an ordered list of unique anatomy identifiers that are linked to genes through an upregulation relationship, starting with the highest?", "output": "MATCH (c:Anatomy)-[r:UPREGULATES_AuG]->(g:Gene) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes are uniquely associated with genes that have a 'COVARIES_GcG' relationship with other genes, with their identifiers ordered in descending order?", "output": "MATCH (c:Gene)-[r:COVARIES_GcG]->(g:Gene) RETURN DISTINCT c.chromosome ORDER BY c.chromosome DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve and order by descending sequence the distinct mesh IDs of anatomy nodes that downregulate genes?", "output": "MATCH (c:Anatomy)-[r:DOWNREGULATES_AdG]->(g:Gene) RETURN DISTINCT c.mesh_id ORDER BY c.mesh_id DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the unique URLs of diseases sorted in descending order that have symptoms indicated by the relationship PRESENTS_DpS.", "output": "MATCH (c:Disease)-[r:PRESENTS_DpS]->(g:Symptom) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct identifier labels for genes at the start of \"COVARIES_GcG\" relationships, sorted in descending order?", "output": "MATCH (c:Gene)-[r:COVARIES_GcG]->(g:Gene) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of distinct compound URLs where each compound downregulates a gene, sorted from highest to lowest?", "output": "MATCH (c:Compound)-[r:DOWNREGULATES_CdG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique URLs of anatomy entities that have an upregulating effect on genes, sorted in descending order?", "output": "MATCH (c:Anatomy)-[r:UPREGULATES_AuG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list the unique identifiers for diseases that have associations with genes, sorted in decreasing order?", "output": "MATCH (c:Disease)-[r:ASSOCIATES_DaG]->(g:Gene) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are the unique licenses of diseases, associated with symptoms, sorted in descending order when retrieved?", "output": "MATCH (c:Disease)-[r:PRESENTS_DpS]->(g:Symptom) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the sorted list of unique URLs associated with anatomical structures that express genes, arranged from Z to A?", "output": "MATCH (c:Anatomy)-[r:EXPRESSES_AeG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique gene names that are connected to other genes via the 'COVARIES_GcG' relationship, sorted in reverse alphabetical order?", "output": "MATCH (c:Gene)-[r:COVARIES_GcG]->(g:Gene) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique anatomical BTO IDs are returned for anatomical structures expressing genes, with the results sorted by descending order?", "output": "MATCH (c:Anatomy)-[r:EXPRESSES_AeG]->(g:Gene) RETURN DISTINCT c.bto_id ORDER BY c.bto_id DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct disease URLs can be found that correspond to diseases with a downregulating relationship to genes, sorted by URL in descending order?", "output": "MATCH (c:Disease)-[r:DOWNREGULATES_DdG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the different license types for diseases that are connected to other diseases via the \"RESEMBLES_DrD\" relationship, sorted from high to low?", "output": "MATCH (c:Disease)-[r:RESEMBLES_DrD]->(g:Disease) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the ordered list of compound URLs, without duplicates, that are connected to genes through a binding relationship, sorted in decreasing order?", "output": "MATCH (c:Compound)-[r:BINDS_CbG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the distinct URLs of genes that have regulatory effects on other genes, sorted in reverse order.", "output": "MATCH (c:Gene)-[r:REGULATES_GrG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct disease URLs are linked to genes via the \"ASSOCIATES_DaG\" relationship, sorted from Z to A?", "output": "MATCH (c:Disease)-[r:ASSOCIATES_DaG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique licenses pertain to diseases known to upregulate genes, when sorted in decreasing order?", "output": "MATCH (c:Disease)-[r:UPREGULATES_DuG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene URLs participate in cellular components, and how would they be sorted in descending order without duplicates?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpCC]->(g:CellularComponent) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers for diseases that are connected to anatomical structures via a 'LOCALIZES_DlA' relationship, ordered from highest to lowest?", "output": "MATCH (c:Disease)-[r:LOCALIZES_DlA]->(g:Anatomy) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a list of unique disease URLs where the diseases are known to upregulate genes, with the list sorted from highest to lowest URL value?", "output": "MATCH (c:Disease)-[r:UPREGULATES_DuG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique names of genes associated with cellular components are returned when sorted descendingly by name?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpCC]->(g:CellularComponent) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique pharmacologic class identifiers associated with compounds can be retrieved and sorted from highest to lowest?", "output": "MATCH (c:PharmacologicClass)-[r:INCLUDES_PCiC]->(g:Compound) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a descending, unique list of disease identifiers linked to symptoms?", "output": "MATCH (c:Disease)-[r:PRESENTS_DpS]->(g:Symptom) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct licenses are held by genes that have a \"REGULATES_GrG\" relationship with other genes, listed in decreasing order?", "output": "MATCH (c:Gene)-[r:REGULATES_GrG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of compounds that have a 'RESEMBLES_CrC' relationship with another compound, sorted in descending order?", "output": "MATCH (c:Compound)-[r:RESEMBLES_CrC]->(g:Compound) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve a list of unique InChI identifiers for compounds that have an upregulatory effect on genes, sorted in reverse order?", "output": "MATCH (c:Compound)-[r:UPREGULATES_CuG]->(g:Gene) RETURN DISTINCT c.inchi ORDER BY c.inchi DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the distinct URLs of genes that participate in pathways, sorted from highest to lowest?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpPW]->(g:Pathway) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class licenses are connected to compounds, and how are these licenses sorted in reverse order?", "output": "MATCH (c:PharmacologicClass)-[r:INCLUDES_PCiC]->(g:Compound) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct BTO ID values of anatomy nodes that have relationships indicating they upregulate genes, sorted in decreasing order?", "output": "MATCH (c:Anatomy)-[r:UPREGULATES_AuG]->(g:Gene) RETURN DISTINCT c.bto_id ORDER BY c.bto_id DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique licenses associated with genes that are involved in pathways, sorted in descending order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpPW]->(g:Pathway) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique licenses are assigned to diseases that localize in anatomical structures, sorted in reverse order?", "output": "MATCH (c:Disease)-[r:LOCALIZES_DlA]->(g:Anatomy) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique compound licenses are associated with compounds that have a downregulating effect on genes, sorted in reverse order?", "output": "MATCH (c:Compound)-[r:DOWNREGULATES_CdG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all unique disease names linked to the downregulation of genes, and how are these names ordered in the output?", "output": "MATCH (c:Disease)-[r:DOWNREGULATES_DdG]->(g:Gene) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the identifiers for compounds that uniquely bind to genes, and list them starting from the largest identifier?", "output": "MATCH (c:Compound)-[r:BINDS_CbG]->(g:Gene) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of unique gene identifiers involved in pathways, sorted from highest to lowest?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpPW]->(g:Pathway) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct URLs correspond to pharmacologic classes containing compounds, and how are they sorted from highest to lowest?", "output": "MATCH (c:PharmacologicClass)-[r:INCLUDES_PCiC]->(g:Compound) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique anatomical part identifiers that express genes are included when sorted from highest to lowest?", "output": "MATCH (c:Anatomy)-[r:EXPRESSES_AeG]->(g:Gene) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find and display the various licenses of anatomical parts involved in gene expression, sorted from top to bottom in terms of license order?", "output": "MATCH (c:Anatomy)-[r:EXPRESSES_AeG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a descending list of URLs for diseases that are linked to particular anatomical areas?", "output": "MATCH (c:Disease)-[r:LOCALIZES_DlA]->(g:Anatomy) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct URLs for genes that covary with other genes, sorted in descending order?", "output": "MATCH (c:Gene)-[r:COVARIES_GcG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct sources do anatomy entities that express genes come from, sorted from last to first?", "output": "MATCH (c:Anatomy)-[r:EXPRESSES_AeG]->(g:Gene) RETURN DISTINCT c.source ORDER BY c.source DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the unique licenses of diseases that participate in downregulating genes, and sort them from highest to lowest?", "output": "MATCH (c:Disease)-[r:DOWNREGULATES_DdG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct URLs for all anatomy entities that have a downregulation relationship with genes, listed in descending order?", "output": "MATCH (c:Anatomy)-[r:DOWNREGULATES_AdG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a descending-ordered list of distinct InChIKeys for compounds that play a role in gene downregulation?", "output": "MATCH (c:Compound)-[r:DOWNREGULATES_CdG]->(g:Gene) RETURN DISTINCT c.inchikey ORDER BY c.inchikey DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct licenses associated with genes that participate in cellular components, listed in descending order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpCC]->(g:CellularComponent) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique chromosomes that genes involved in the INTERACTS_GiG relationships belong to, sorted from highest to lowest?", "output": "MATCH (c:Gene)-[r:INTERACTS_GiG]->(g:Gene) RETURN DISTINCT c.chromosome ORDER BY c.chromosome DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the unique URLs for compounds that are recorded as treating diseases, and sort them from highest to lowest?", "output": "MATCH (c:Compound)-[r:TREATS_CtD]->(g:Disease) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I am interested in finding the unique InChIKeys of compounds that have an \"UPREGULATES_CuG\" relationship with genes; can you order these keys in descending format?", "output": "MATCH (c:Compound)-[r:UPREGULATES_CuG]->(g:Gene) RETURN DISTINCT c.inchikey ORDER BY c.inchikey DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the distinct names of pharmacologic classes that encompass compounds, sorted alphabetically from the last to the first?", "output": "MATCH (c:PharmacologicClass)-[r:INCLUDES_PCiC]->(g:Compound) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomical entities, identified by their unique MeSH IDs, are involved in expressing genes and how are these IDs sorted in descending order?", "output": "MATCH (c:Anatomy)-[r:EXPRESSES_AeG]->(g:Gene) RETURN DISTINCT c.mesh_id ORDER BY c.mesh_id DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one obtain a list of compound licenses that play a role in gene upregulation, arranged in descending order of the license?", "output": "MATCH (c:Compound)-[r:UPREGULATES_CuG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct URLs for genes that participate in molecular functions, sorted in reverse order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpMF]->(g:MolecularFunction) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the different licenses of diseases that are linked to genes, and sort these licenses from largest to smallest?", "output": "MATCH (c:Disease)-[r:ASSOCIATES_DaG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the sorted list of unique licenses for compounds known to treat diseases, sorted in order from highest to lowest?", "output": "MATCH (c:Compound)-[r:TREATS_CtD]->(g:Disease) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have unique identifiers that correlate with a downregulation effect on genes, sorted from highest to lowest identifier?", "output": "MATCH (c:Disease)-[r:DOWNREGULATES_DdG]->(g:Gene) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct licenses for compounds that have a palliative effect on diseases, sorted in descending order?", "output": "MATCH (c:Compound)-[r:PALLIATES_CpD]->(g:Disease) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique compound names that have a binding relationship with genes, sorted in descending order?", "output": "MATCH (c:Compound)-[r:BINDS_CbG]->(g:Gene) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct licenses associated with anatomy nodes that have relationships of type 'UPREGULATES_AuG' with any gene, listed in descending order?", "output": "MATCH (c:Anatomy)-[r:UPREGULATES_AuG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have a unique identifier and are involved in palliating diseases, and how are these identifiers ordered in descending order?", "output": "MATCH (c:Compound)-[r:PALLIATES_CpD]->(g:Disease) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct URLs for each gene that participates in an 'INTERACTS_GiG' relationship, sorted from Z to A?", "output": "MATCH (c:Gene)-[r:INTERACTS_GiG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are the distinct licenses of genes that take part in molecular functions listed when ordered from greatest to least?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpMF]->(g:MolecularFunction) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct sources of anatomical entities that downregulate genes, sorted in descending order?", "output": "MATCH (c:Anatomy)-[r:DOWNREGULATES_AdG]->(g:Gene) RETURN DISTINCT c.source ORDER BY c.source DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the ordered list of unique compound names that are associated with the downregulation of genes, sorted in descending alphabetical order?", "output": "MATCH (c:Compound)-[r:DOWNREGULATES_CdG]->(g:Gene) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds with distinct InChI identifiers are responsible for the downregulation of genes, and how are they sorted in descending order?", "output": "MATCH (c:Compound)-[r:DOWNREGULATES_CdG]->(g:Gene) RETURN DISTINCT c.inchi ORDER BY c.inchi DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the descending order of chromosomes linked to genes participating in some cellular components, considering only unique entries?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpCC]->(g:CellularComponent) RETURN DISTINCT c.chromosome ORDER BY c.chromosome DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain a set of unique URLs for genes associated with biological processes, ordered reverse alphabetically?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpBP]->(g:BiologicalProcess) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene identifiers are associated with cellular components, and how are they sorted in declining order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpCC]->(g:CellularComponent) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct licenses of genes that have interactions with other genes, sorted in descending order?", "output": "MATCH (c:Gene)-[r:INTERACTS_GiG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct mesh IDs of anatomical items that have an upregulating effect on genes, sorted in decreasing order?", "output": "MATCH (c:Anatomy)-[r:UPREGULATES_AuG]->(g:Gene) RETURN DISTINCT c.mesh_id ORDER BY c.mesh_id DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique sources of genes that are connected through the COVARIES_GcG relationship, listed in descending order?", "output": "MATCH (c:Gene)-[r:COVARIES_GcG]->(g:Gene) RETURN DISTINCT c.source ORDER BY c.source DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all unique diseases associated with any symptoms and sort their names in reverse alphabetical order?", "output": "MATCH (c:Disease)-[r:PRESENTS_DpS]->(g:Symptom) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique BTO IDs correspond to anatomy nodes that are involved in the downregulation of genes, ordered in reverse numerical order?", "output": "MATCH (c:Anatomy)-[r:DOWNREGULATES_AdG]->(g:Gene) RETURN DISTINCT c.bto_id ORDER BY c.bto_id DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique gene descriptions involved in pathways, sorted in descending alphabetical order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpPW]->(g:Pathway) RETURN DISTINCT c.description ORDER BY c.description DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all unique anatomy entities whose function includes downregulating genes, sorted in reverse alphabetical order?", "output": "MATCH (c:Anatomy)-[r:DOWNREGULATES_AdG]->(g:Gene) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique chromosomes associated with genes that have regulatory roles, sorted in reverse numerical order?", "output": "MATCH (c:Gene)-[r:REGULATES_GrG]->(g:Gene) RETURN DISTINCT c.chromosome ORDER BY c.chromosome DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique URLs correspond to compounds that have an effect of upregulating genes, and how are they sorted in descending order?", "output": "MATCH (c:Compound)-[r:UPREGULATES_CuG]->(g:Gene) RETURN DISTINCT c.url ORDER BY c.url DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique disease names are there that have been localized to anatomy parts, sorted in reverse alphabetical order?", "output": "MATCH (c:Disease)-[r:LOCALIZES_DlA]->(g:Anatomy) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of distinct disease identifiers where the diseases are involved in gene upregulation, sorted from highest to lowest?", "output": "MATCH (c:Disease)-[r:UPREGULATES_DuG]->(g:Gene) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct InChIKeys for compounds that are involved in binding relationships with genes, sorted in reverse order.", "output": "MATCH (c:Compound)-[r:BINDS_CbG]->(g:Gene) RETURN DISTINCT c.inchikey ORDER BY c.inchikey DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of unique licenses for genes involved in biological processes, ranked in descending order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpBP]->(g:BiologicalProcess) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the InChIKey of each unique compound that palliates any disease, sorted in reverse alphabetical order?", "output": "MATCH (c:Compound)-[r:PALLIATES_CpD]->(g:Disease) RETURN DISTINCT c.inchikey ORDER BY c.inchikey DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique sources of genes that participate in cellular components according to the database, when listed in descending order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpCC]->(g:CellularComponent) RETURN DISTINCT c.source ORDER BY c.source DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a descendingly sorted list of unique sources for compounds that are linked to the palliative care of diseases?", "output": "MATCH (c:Compound)-[r:PALLIATES_CpD]->(g:Disease) RETURN DISTINCT c.source ORDER BY c.source DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct compound names can be found that serve to palliate diseases, arranged in descending alphabetical order?", "output": "MATCH (c:Compound)-[r:PALLIATES_CpD]->(g:Disease) RETURN DISTINCT c.name ORDER BY c.name DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of distinct compound identifiers that downregulate genes, sorted from highest to lowest?", "output": "MATCH (c:Compound)-[r:DOWNREGULATES_CdG]->(g:Gene) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes, in descending order, have genes that are participants in some pathways?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpPW]->(g:Pathway) RETURN DISTINCT c.chromosome ORDER BY c.chromosome DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sources are associated with diseases that downregulate genes, and how are they uniquely identified and sorted from the highest to the lowest?", "output": "MATCH (c:Disease)-[r:DOWNREGULATES_DdG]->(g:Gene) RETURN DISTINCT c.source ORDER BY c.source DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique sources of genes are involved in pathways, sorted in reverse order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpPW]->(g:Pathway) RETURN DISTINCT c.source ORDER BY c.source DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique sources of compounds which resemble other compounds, sorted from highest to lowest?", "output": "MATCH (c:Compound)-[r:RESEMBLES_CrC]->(g:Compound) RETURN DISTINCT c.source ORDER BY c.source DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of distinct identifiers of genes that participate in any molecular function, sorted by identifier from highest to lowest?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpMF]->(g:MolecularFunction) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique descriptions of genes that participate in any molecular function, sorted in descending order?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpMF]->(g:MolecularFunction) RETURN DISTINCT c.description ORDER BY c.description DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique licenses of genes that have covariance gene relationships, listed in descending order?", "output": "MATCH (c:Gene)-[r:COVARIES_GcG]->(g:Gene) RETURN DISTINCT c.license ORDER BY c.license DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct chromosomes contain genes involved in particular biological processes, sorted from highest to lowest?", "output": "MATCH (c:Gene)-[r:PARTICIPATES_GpBP]->(g:BiologicalProcess) RETURN DISTINCT c.chromosome ORDER BY c.chromosome DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct descriptions of genes that act as regulators to other genes, sorted in descending order alphabetically?", "output": "MATCH (c:Gene)-[r:REGULATES_GrG]->(g:Gene) RETURN DISTINCT c.description ORDER BY c.description DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the distinct identifiers of compounds that treat diseases, presented in reverse alphabetical order?", "output": "MATCH (c:Compound)-[r:TREATS_CtD]->(g:Disease) RETURN DISTINCT c.identifier ORDER BY c.identifier DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct InChI keys of compounds that are used to palliate diseases, sorted in descending order?", "output": "MATCH (c:Compound)-[r:PALLIATES_CpD]->(g:Disease) RETURN DISTINCT c.inchi ORDER BY c.inchi DESC"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find out which license belongs to each gene and its associated chromosome?", "output": "MATCH (n:Gene) RETURN n.license, n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the class type and licensing details of all pharmacologic classes?", "output": "MATCH (n:PharmacologicClass) RETURN n.class_type, n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can be obtained about the class type and name for every pharmacologic class?", "output": "MATCH (n:PharmacologicClass) RETURN n.class_type, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information regarding the license and source is available for each symptom?", "output": "MATCH (n:Symptom) RETURN n.license, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the query to extract the name and identifier of each pharmacologic class?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name and identifier for every symptom stored in the system?", "output": "MATCH (n:Symptom) RETURN n.name, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the license and source details for each pharmacologic class in the database?", "output": "MATCH (n:PharmacologicClass) RETURN n.license, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the license and identifier details for each PharmacologicClass entity?", "output": "MATCH (n:PharmacologicClass) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the license information and names for every Pathway node?", "output": "MATCH (n:Pathway) RETURN n.license, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the license and URL information for all anatomy entities?", "output": "MATCH (n:Anatomy) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier and BTO ID for each anatomy entry in the database.", "output": "MATCH (n:Anatomy) RETURN n.identifier, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the license numbers and information sources for the anatomy-related entries?", "output": "MATCH (n:Anatomy) RETURN n.license, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the source and name for each disease entity?", "output": "MATCH (n:Disease) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the URL and source details for nodes labeled as 'CellularComponent'?", "output": "MATCH (n:CellularComponent) RETURN n.url, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the URL and licensing details for all entities labeled \"MolecularFunction\"?", "output": "MATCH (n:MolecularFunction) RETURN n.url, n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs and identifiers for each pharmacologic class in the database?", "output": "MATCH (n:PharmacologicClass) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the method to obtain the name and URL details for each pathway entry?", "output": "MATCH (n:Pathway) RETURN n.name, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license numbers and the names of all PharmacologicClass entities?", "output": "MATCH (n:PharmacologicClass) RETURN n.license, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses and identifiers associated with each BiologicalProcess node?", "output": "MATCH (n:BiologicalProcess) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details regarding the source and name for every pathway node?", "output": "MATCH (n:Pathway) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What license and URL information is available for each disease entry we have?", "output": "MATCH (n:Disease) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available about each symptom in terms of name and URL?", "output": "MATCH (n:Symptom) RETURN n.name, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the source and identifier details for all diseases?", "output": "MATCH (n:Disease) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information about the source and URL is available for each disease entry?", "output": "MATCH (n:Disease) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the source and URL for each compound recorded in the graph?", "output": "MATCH (n:Compound) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available about the licenses and identifiers associated with each 'Symptom' entry?", "output": "MATCH (n:Symptom) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifier and source details for every BiologicalProcess node present?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What chromosome and description details are available for the genes in our database?", "output": "MATCH (n:Gene) RETURN n.chromosome, n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the class types and URLs of all pharmacologic classes in the database?", "output": "MATCH (n:PharmacologicClass) RETURN n.class_type, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the license information and identifier for every compound in the dataset?", "output": "MATCH (n:Compound) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URLs and source information for every biological process node?", "output": "MATCH (n:BiologicalProcess) RETURN n.url, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information regarding license and source is available for each BiologicalProcess node?", "output": "MATCH (n:BiologicalProcess) RETURN n.license, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is retrieved concerning class_type and source from the PharmacologicClass nodes?", "output": "MATCH (n:PharmacologicClass) RETURN n.class_type, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can we gather about the names and URLs of BiologicalProcess entities?", "output": "MATCH (n:BiologicalProcess) RETURN n.name, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide me with the licenses and identifiers for every \"MolecularFunction\" entity?", "output": "MATCH (n:MolecularFunction) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses and identifiers belong to the nodes categorized under 'Anatomy'?", "output": "MATCH (n:Anatomy) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licensing information and URLs are available for every entity categorized as PharmacologicClass?", "output": "MATCH (n:PharmacologicClass) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a list of disease identifiers along with their corresponding names?", "output": "MATCH (n:Disease) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the licensing information and web link associated with each gene entity?", "output": "MATCH (n:Gene) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sources and corresponding URLs are available for each node labeled as a PharmacologicClass?", "output": "MATCH (n:PharmacologicClass) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names and URLs of every pharmacologic class found in the system?", "output": "MATCH (n:PharmacologicClass) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers and URLs for every Pathway node in the graph?", "output": "MATCH (n:Pathway) RETURN n.identifier, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license and mesh_id attributes from every Anatomy node?", "output": "MATCH (n:Anatomy) RETURN n.license, n.mesh_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifier and license details are available for all nodes labeled as SideEffect?", "output": "MATCH (n:SideEffect) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the name and source associated with each 'MolecularFunction' node?", "output": "MATCH (n:MolecularFunction) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license and source information for each CellularComponent node?", "output": "MATCH (n:CellularComponent) RETURN n.license, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the license and BTO ID attributes from all Anatomy nodes in the database?", "output": "MATCH (n:Anatomy) RETURN n.license, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What license details and URL links exist for nodes labeled as BiologicalProcess?", "output": "MATCH (n:BiologicalProcess) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources and identifiers for each Pathway node in the database?", "output": "MATCH (n:Pathway) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the source and identifier for every symptom node present?", "output": "MATCH (n:Symptom) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I retrieve the identifier and name properties from each gene?", "output": "MATCH (n:Gene) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the URLs and identifiers associated with the 'Gene' nodes?", "output": "MATCH (n:Gene) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license information and source associated with each MolecularFunction node?", "output": "MATCH (n:MolecularFunction) RETURN n.license, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs and identifiers associated with the nodes labeled as BiologicalProcess?", "output": "MATCH (n:BiologicalProcess) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information regarding licenses and URLs can be retrieved for entities categorized as CellularComponent?", "output": "MATCH (n:CellularComponent) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a list of all pharmacologic class types along with their identifiers?", "output": "MATCH (n:PharmacologicClass) RETURN n.class_type, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available regarding the licenses and names of all genes?", "output": "MATCH (n:Gene) RETURN n.license, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the URLs and BTO IDs for all entries classified under Anatomy?", "output": "MATCH (n:Anatomy) RETURN n.url, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license and URL of each pathway node?", "output": "MATCH (n:Pathway) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What mesh_id values and their corresponding sources exist for entities under the Anatomy label?", "output": "MATCH (n:Anatomy) RETURN n.mesh_id, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I see the licensing and sourcing information for genes in the network?", "output": "MATCH (n:Gene) RETURN n.license, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information about licenses and names is available for the nodes labeled as CellularComponent?", "output": "MATCH (n:CellularComponent) RETURN n.license, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve both the identifier and the source information for every gene in the dataset?", "output": "MATCH (n:Gene) RETURN n.identifier, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the license and URL information for each symptom stored in the database?", "output": "MATCH (n:Symptom) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the license and identifier fields for every CellularComponent node in the dataset?", "output": "MATCH (n:CellularComponent) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the source and name details for all pharmacologic classes identified in the graph?", "output": "MATCH (n:PharmacologicClass) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses and identifiers are associated with the nodes categorized under 'Pathway'?", "output": "MATCH (n:Pathway) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components are available, and what are their corresponding identifiers and sources?", "output": "MATCH (n:CellularComponent) RETURN n.identifier, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names and BTO IDs of all anatomical entities in the database?", "output": "MATCH (n:Anatomy) RETURN n.name, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources and identifiers of all nodes labeled as PharmacologicClass in the database?", "output": "MATCH (n:PharmacologicClass) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the details on symptom names and where they originate from?", "output": "MATCH (n:Symptom) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URL and source details for each gene in the database?", "output": "MATCH (n:Gene) RETURN n.url, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the source and URL for every Pathway node?", "output": "MATCH (n:Pathway) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes do the genes belong to, and what are their associated URLs?", "output": "MATCH (n:Gene) RETURN n.chromosome, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which mesh_id and bto_id identifiers are associated with nodes labeled as Anatomy?", "output": "MATCH (n:Anatomy) RETURN n.mesh_id, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get a list of URLs and identifiers for each `CellularComponent` node present in the database?", "output": "MATCH (n:CellularComponent) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information does the database provide about the source and BTO ID for every Anatomy entity?", "output": "MATCH (n:Anatomy) RETURN n.source, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the license and name for each symptom present in the database?", "output": "MATCH (n:Symptom) RETURN n.license, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the source and identifier values for every node categorized under 'SideEffect'?", "output": "MATCH (n:SideEffect) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you get a list of all 'Symptom' node identifiers along with their URLs?", "output": "MATCH (n:Symptom) RETURN n.identifier, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the mesh IDs and identifiers from the nodes labeled as Anatomy in the database?", "output": "MATCH (n:Anatomy) RETURN n.mesh_id, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the chromosome number and source for all genes recorded in the database?", "output": "MATCH (n:Gene) RETURN n.chromosome, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the InChI and identifier for each compound in our dataset?", "output": "MATCH (n:Compound) RETURN n.inchi, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the description and source details of every gene in the dataset?", "output": "MATCH (n:Gene) RETURN n.description, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names and sources of all the biological processes stored in the database?", "output": "MATCH (n:BiologicalProcess) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I retrieve the MeSH identifier and website link for every anatomy entry?", "output": "MATCH (n:Anatomy) RETURN n.mesh_id, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the license and identifier details for each disease entity in the database?", "output": "MATCH (n:Disease) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names and licenses of all nodes categorized under BiologicalProcess?", "output": "MATCH (n:BiologicalProcess) RETURN n.license, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs and unique identifiers associated with each disease node?", "output": "MATCH (n:Disease) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of names and licenses for each 'Anatomy' entity in the database?", "output": "MATCH (n:Anatomy) RETURN n.license, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the list of licenses and identifiers for each gene entity in the database?", "output": "MATCH (n:Gene) RETURN n.license, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What name and URL information is available for nodes representing anatomical structures?", "output": "MATCH (n:Anatomy) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What source and license information are recorded for diseases in the dataset?", "output": "MATCH (n:Disease) RETURN n.license, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which source and URL are listed for every node that has been labeled as \"Anatomy\"?", "output": "MATCH (n:Anatomy) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URL links and their corresponding licenses for every compound element?", "output": "MATCH (n:Compound) RETURN n.license, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are available in the data, and what are their respective InChI identifiers and names?", "output": "MATCH (n:Compound) RETURN n.inchi, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the license and description details of all the nodes labeled as 'Gene' in the database?", "output": "MATCH (n:Gene) RETURN n.license, n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the names and sources of all nodes labeled as CellularComponent?", "output": "MATCH (n:CellularComponent) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of CellularComponent nodes along with their respective names and identifiers?", "output": "MATCH (n:CellularComponent) RETURN n.name, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license information and names for each MolecularFunction node?", "output": "MATCH (n:MolecularFunction) RETURN n.license, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of entries labeled as PharmacologicClass?", "output": "MATCH (n:PharmacologicClass) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many instances of the \"CellularComponent\" label are there in the dataset?", "output": "MATCH (n:CellularComponent) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many instances of the 'Anatomy' label are there in the dataset?", "output": "MATCH (n:Anatomy) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many instances of the \"SideEffect\" label are there in the graph?", "output": "MATCH (n:SideEffect) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many 'Pathway' nodes can be found in this graph?", "output": "MATCH (n:Pathway) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of 'Disease' entities stored in the database?", "output": "MATCH (n:Disease) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of all entries that have the label \"BiologicalProcess\" in this network?", "output": "MATCH (n:BiologicalProcess) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you tell me the number of nodes that have the label \"Gene\"?", "output": "MATCH (n:Gene) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct symptom entries in the data?", "output": "MATCH (n:Symptom) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many 'MolecularFunction' labeled entities exist within the network?", "output": "MATCH (n:MolecularFunction) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of PharmacologicClass nodes grouped by their class type?", "output": "MATCH (n:PharmacologicClass) WITH n.class_type AS class_type, COUNT(n) AS count RETURN class_type, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Anatomy nodes grouped by their license attribute?", "output": "MATCH (n:Anatomy) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of 'PharmacologicClass' nodes grouped by their source?", "output": "MATCH (n:PharmacologicClass) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of 'Pathway' nodes grouped by their license type?", "output": "MATCH (n:Pathway) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of nodes with the \"SideEffect\" label, grouped by their identifier attribute?", "output": "MATCH (n:SideEffect) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Anatomy nodes grouped by their source attribute?", "output": "MATCH (n:Anatomy) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many CellularComponent nodes are associated with each specific license value?", "output": "MATCH (n:CellularComponent) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of symptom nodes grouped by their associated license?", "output": "MATCH (n:Symptom) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of PharmacologicClass nodes that exist for each unique identifier?", "output": "MATCH (n:PharmacologicClass) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For the nodes labeled as Anatomy, how does the count of nodes break down by their mesh_id attribute?", "output": "MATCH (n:Anatomy) WITH n.mesh_id AS mesh_id, COUNT(n) AS count RETURN mesh_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of pharmacologic class nodes associated with each license?", "output": "MATCH (n:PharmacologicClass) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of \"Disease\" nodes grouped by their URL values?", "output": "MATCH (n:Disease) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of all 'Pathway' nodes along with the count of how many nodes there are for each identifier?", "output": "MATCH (n:Pathway) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of anatomy nodes grouped by their unique identifiers?", "output": "MATCH (n:Anatomy) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the number of CellularComponent nodes grouped by their source attribute?", "output": "MATCH (n:CellularComponent) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of nodes labeled as Gene, grouped by their identifier attribute?", "output": "MATCH (n:Gene) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What counts of `Pathway` nodes are there for each URL present within the nodes?", "output": "MATCH (n:Pathway) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of nodes in the database that have a specific 'bto_id' within the 'Anatomy' label?", "output": "MATCH (n:Anatomy) WITH n.bto_id AS bto_id, COUNT(n) AS count RETURN bto_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are the InChI values distributed among Compound nodes in terms of occurrence count?", "output": "MATCH (n:Compound) WITH n.inchi AS inchi, COUNT(n) AS count RETURN inchi, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the count of Anatomy nodes for each unique URL?", "output": "MATCH (n:Anatomy) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs are recorded in 'SideEffect' nodes and what is the count for each of these URLs?", "output": "MATCH (n:SideEffect) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of Symptom nodes grouped by their identifiers?", "output": "MATCH (n:Symptom) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a count of genes for each distinct URL present in the Gene nodes?", "output": "MATCH (n:Gene) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for nodes labeled as Compound and the count of nodes corresponding to each identifier?", "output": "MATCH (n:Compound) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the different URLs linked to \"Compound\" nodes and the number of nodes corresponding to each URL?", "output": "MATCH (n:Compound) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a count of how many times each unique URL appears for nodes labeled as MolecularFunction?", "output": "MATCH (n:MolecularFunction) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many molecular function nodes are there for each unique license type in the database?", "output": "MATCH (n:MolecularFunction) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many pharmacologic class nodes share the same URL, and what are these URLs?", "output": "MATCH (n:PharmacologicClass) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of nodes with a given URL among the cellular components, and what are those URLs?", "output": "MATCH (n:CellularComponent) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of each unique identifier associated with the molecular function nodes in the graph?", "output": "MATCH (n:MolecularFunction) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many disease nodes are there for each distinct source in the database?", "output": "MATCH (n:Disease) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of biological process nodes grouped by their sources?", "output": "MATCH (n:BiologicalProcess) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of each unique InChIKey among all nodes labeled as 'Compound' in the database?", "output": "MATCH (n:Compound) WITH n.inchikey AS inchikey, COUNT(n) AS count RETURN inchikey, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each biological process by name and count how many nodes are associated with each name?", "output": "MATCH (n:BiologicalProcess) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of how often each unique URL is linked to a 'Symptom' node in the database?", "output": "MATCH (n:Symptom) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many biological process nodes exist for each unique license category?", "output": "MATCH (n:BiologicalProcess) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the count of nodes by each molecular function name?", "output": "MATCH (n:MolecularFunction) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each source, how many molecular function nodes are present?", "output": "MATCH (n:MolecularFunction) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the count of each unique cellular component identifier found within the database?", "output": "MATCH (n:CellularComponent) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of records for each disease identifier in the graph?", "output": "MATCH (n:Disease) WITH n.identifier AS identifier, COUNT(n) AS count RETURN identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you count and retrieve the number of times each cellular component is named in the dataset?", "output": "MATCH (n:CellularComponent) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of symptoms grouped by their source in the database?", "output": "MATCH (n:Symptom) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For every unique gene name in the dataset, how many gene nodes correspond to that name?", "output": "MATCH (n:Gene) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What count of occurrences can be observed for each pathway name in the database?", "output": "MATCH (n:Pathway) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of genes grouped by their source category?", "output": "MATCH (n:Gene) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of occurrences for each pharmacologic class name found in the dataset?", "output": "MATCH (n:PharmacologicClass) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list the names of anatomical entities along with the count of each name present in the database?", "output": "MATCH (n:Anatomy) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each type of license, how many genes exist in the dataset?", "output": "MATCH (n:Gene) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each source, how many pathways are recorded in the dataset?", "output": "MATCH (n:Pathway) WITH n.source AS source, COUNT(n) AS count RETURN source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the frequency count of every disease name found in the data?", "output": "MATCH (n:Disease) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of disease entities categorized by their license type?", "output": "MATCH (n:Disease) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the distribution of gene counts across different chromosomes?", "output": "MATCH (n:Gene) WITH n.chromosome AS chromosome, COUNT(n) AS count RETURN chromosome, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many side effect nodes are there for each unique license category?", "output": "MATCH (n:SideEffect) WITH n.license AS license, COUNT(n) AS count RETURN license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of each individual symptom name present in the database?", "output": "MATCH (n:Symptom) WITH n.name AS name, COUNT(n) AS count RETURN name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the unique gene descriptions and show how many genes correspond to each description?", "output": "MATCH (n:Gene) WITH n.description AS description, COUNT(n) AS count RETURN description, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many times is each URL linked to a biological process within the dataset?", "output": "MATCH (n:BiologicalProcess) WITH n.url AS url, COUNT(n) AS count RETURN url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the count of anatomy nodes grouped by their MeSH ID and associated URL?", "output": "MATCH (n:Anatomy) WITH n.mesh_id AS mesh_id, n.url AS url, COUNT(n) AS count RETURN mesh_id, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the number of 'PharmacologicClass' nodes grouped by their class type and URL?", "output": "MATCH (n:PharmacologicClass) WITH n.class_type AS class_type, n.url AS url, COUNT(n) AS count RETURN class_type, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URL, name, and the occurrence count for each node labeled as a pharmacologic class?", "output": "MATCH (n:PharmacologicClass) WITH n.url AS url, n.name AS name, COUNT(n) AS count RETURN url, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I retrieve a summary of the number of MolecularFunction nodes based on their URL and source attributes?", "output": "MATCH (n:MolecularFunction) WITH n.url AS url, n.source AS source, COUNT(n) AS count RETURN url, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can you retrieve the URLs and identifiers of all 'PharmacologicClass' nodes along with a count of their occurrences?", "output": "MATCH (n:PharmacologicClass) WITH n.url AS url, n.identifier AS identifier, COUNT(n) AS count RETURN url, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier, name, and the total number of nodes within the PharmacologicClass label?", "output": "MATCH (n:PharmacologicClass) WITH n.identifier AS identifier, n.name AS name, COUNT(n) AS count RETURN identifier, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the number of biological process nodes that share the same license and identifier?", "output": "MATCH (n:BiologicalProcess) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a tally of PharmacologicClass nodes grouped by their source and identifier values?", "output": "MATCH (n:PharmacologicClass) WITH n.source AS source, n.identifier AS identifier, COUNT(n) AS count RETURN source, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of Anatomy nodes grouped by their mesh_id and bto_id properties?", "output": "MATCH (n:Anatomy) WITH n.mesh_id AS mesh_id, n.bto_id AS bto_id, COUNT(n) AS count RETURN mesh_id, bto_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of Pathway nodes grouped by their source and URL attributes?", "output": "MATCH (n:Pathway) WITH n.source AS source, n.url AS url, COUNT(n) AS count RETURN source, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the name, URL, and the total count of occurrences for each Pathway node in the graph?", "output": "MATCH (n:Pathway) WITH n.name AS name, n.url AS url, COUNT(n) AS count RETURN name, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the count of Gene nodes grouped by their license and description attributes?", "output": "MATCH (n:Gene) WITH n.license AS license, n.description AS description, COUNT(n) AS count RETURN license, description, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the count of PharmacologicClass nodes grouped by their source and name attributes?", "output": "MATCH (n:PharmacologicClass) WITH n.source AS source, n.name AS name, COUNT(n) AS count RETURN source, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a count of Pathway nodes grouped by their source and identifier attributes?", "output": "MATCH (n:Pathway) WITH n.source AS source, n.identifier AS identifier, COUNT(n) AS count RETURN source, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the total count of Anatomy nodes for each distinct license and source, alongside the license and source information?", "output": "MATCH (n:Anatomy) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Anatomy nodes grouped by their license and mesh_id attributes?", "output": "MATCH (n:Anatomy) WITH n.license AS license, n.mesh_id AS mesh_id, COUNT(n) AS count RETURN license, mesh_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of anatomy nodes grouped by license and identifier, and what are the corresponding license and identifier values for each group?", "output": "MATCH (n:Anatomy) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of nodes labeled as 'SideEffect' that have the same license and URL, and how can I list each unique combination of license and URL along with their occurrence count?", "output": "MATCH (n:SideEffect) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of disease nodes grouped by their license and URL attributes?", "output": "MATCH (n:Disease) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the count of cellular component nodes grouped by their license and source?", "output": "MATCH (n:CellularComponent) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of PharmacologicClass nodes for each unique combination of license and source?", "output": "MATCH (n:PharmacologicClass) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of nodes for each distinct name and identifier of the \"BiologicalProcess\" label?", "output": "MATCH (n:BiologicalProcess) WITH n.name AS name, n.identifier AS identifier, COUNT(n) AS count RETURN name, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs and identifiers for BiologicalProcess nodes and count how many nodes share each URL and identifier combination?", "output": "MATCH (n:BiologicalProcess) WITH n.url AS url, n.identifier AS identifier, COUNT(n) AS count RETURN url, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of nodes categorized under different 'class_type' and 'source' attributes in the PharmacologicClass label?", "output": "MATCH (n:PharmacologicClass) WITH n.class_type AS class_type, n.source AS source, COUNT(n) AS count RETURN class_type, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Anatomy nodes for each pair of `source` and `bto_id` values in the dataset?", "output": "MATCH (n:Anatomy) WITH n.source AS source, n.bto_id AS bto_id, COUNT(n) AS count RETURN source, bto_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of all compound nodes grouped by their license and URL properties and display these properties alongside their counts?", "output": "MATCH (n:Compound) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Anatomy nodes grouped by their source and URL attributes?", "output": "MATCH (n:Anatomy) WITH n.source AS source, n.url AS url, COUNT(n) AS count RETURN source, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of nodes grouped by class type and identifier for pharmacologic classes?", "output": "MATCH (n:PharmacologicClass) WITH n.class_type AS class_type, n.identifier AS identifier, COUNT(n) AS count RETURN class_type, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the query to list all diseases with their identifiers, names, and the total count of those nodes?", "output": "MATCH (n:Disease) WITH n.identifier AS identifier, n.name AS name, COUNT(n) AS count RETURN identifier, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Disease nodes grouped by their license and identifier properties?", "output": "MATCH (n:Disease) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct anatomy nodes grouped by their license and name?", "output": "MATCH (n:Anatomy) WITH n.license AS license, n.name AS name, COUNT(n) AS count RETURN license, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many Pathway nodes exist for each combination of license and source?", "output": "MATCH (n:Pathway) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Anatomy nodes grouped by their license and URL properties?", "output": "MATCH (n:Anatomy) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the URL, name, and frequency count for each gene node in the dataset?", "output": "MATCH (n:Gene) WITH n.url AS url, n.name AS name, COUNT(n) AS count RETURN url, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many Anatomy nodes exist for each unique combination of license and BTO ID in the dataset?", "output": "MATCH (n:Anatomy) WITH n.license AS license, n.bto_id AS bto_id, COUNT(n) AS count RETURN license, bto_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of different `MolecularFunction` nodes based on their license and source properties in the database?", "output": "MATCH (n:MolecularFunction) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you list each gene's description and name and also determine the total count of gene nodes present?", "output": "MATCH (n:Gene) WITH n.description AS description, n.name AS name, COUNT(n) AS count RETURN description, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of each unique combination of identifier and source for nodes labeled as `CellularComponent` in the database?", "output": "MATCH (n:CellularComponent) WITH n.identifier AS identifier, n.source AS source, COUNT(n) AS count RETURN identifier, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of Compound nodes grouped by their license and source attributes?", "output": "MATCH (n:Compound) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the counts of different BiologicalProcess nodes based on their license and URL properties?", "output": "MATCH (n:BiologicalProcess) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of nodes for each unique combination of license and identifier within the `Compound` labels in the database?", "output": "MATCH (n:Compound) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of nodes categorized under \"MolecularFunction\" for each unique pair of URLs and licenses, and what are these URLs and licenses?", "output": "MATCH (n:MolecularFunction) WITH n.url AS url, n.license AS license, COUNT(n) AS count RETURN url, license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of each disease node along with its respective URL and identifier?", "output": "MATCH (n:Disease) WITH n.url AS url, n.identifier AS identifier, COUNT(n) AS count RETURN url, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct `Anatomy` nodes grouped by their source and name properties in the database?", "output": "MATCH (n:Anatomy) WITH n.source AS source, n.name AS name, COUNT(n) AS count RETURN source, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each distinct Pathway license and name pair, what is the count of Pathway nodes associated with it?", "output": "MATCH (n:Pathway) WITH n.license AS license, n.name AS name, COUNT(n) AS count RETURN license, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the counts of anatomy nodes that correspond to each distinct pair of URL and BTO ID?", "output": "MATCH (n:Anatomy) WITH n.url AS url, n.bto_id AS bto_id, COUNT(n) AS count RETURN url, bto_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of Anatomy nodes grouped according to their source and identifier values?", "output": "MATCH (n:Anatomy) WITH n.source AS source, n.identifier AS identifier, COUNT(n) AS count RETURN source, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Gene nodes grouped by their URL and source attributes, and what are the specific URLs and sources for these groups?", "output": "MATCH (n:Gene) WITH n.url AS url, n.source AS source, COUNT(n) AS count RETURN url, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of symptom nodes in the database for each combination of license and identifier, and what are the specific license and identifier values?", "output": "MATCH (n:Symptom) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the URL, identifier, and count of occurrences for each 'SideEffect' node in the system?", "output": "MATCH (n:SideEffect) WITH n.url AS url, n.identifier AS identifier, COUNT(n) AS count RETURN url, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each unique identifier and source for MolecularFunction nodes along with the count of these nodes?", "output": "MATCH (n:MolecularFunction) WITH n.identifier AS identifier, n.source AS source, COUNT(n) AS count RETURN identifier, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the distinct URLs and names of \"Anatomy\" nodes, and how many of each are there?", "output": "MATCH (n:Anatomy) WITH n.url AS url, n.name AS name, COUNT(n) AS count RETURN url, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of `CellularComponent` nodes that share the same URL and source attributes?", "output": "MATCH (n:CellularComponent) WITH n.url AS url, n.source AS source, COUNT(n) AS count RETURN url, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of Gene nodes associated with each unique license and URL, together with these values?", "output": "MATCH (n:Gene) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a count of each distinct anatomy node alongside their URLs and identifiers?", "output": "MATCH (n:Anatomy) WITH n.url AS url, n.identifier AS identifier, COUNT(n) AS count RETURN url, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What aggregated counts are there for each distinct combination of license and identifier among all molecular function nodes?", "output": "MATCH (n:MolecularFunction) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many pharmacologic class nodes are there for each combination of license and name?", "output": "MATCH (n:PharmacologicClass) WITH n.license AS license, n.name AS name, COUNT(n) AS count RETURN license, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of Disease nodes grouped by their source and URL within the database?", "output": "MATCH (n:Disease) WITH n.source AS source, n.url AS url, COUNT(n) AS count RETURN source, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many SideEffect nodes exist, grouped by their license and identifier attributes, and what are these groups?", "output": "MATCH (n:SideEffect) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers and BTO IDs for each anatomy node, along with the count of anatomy nodes that share these identifiers?", "output": "MATCH (n:Anatomy) WITH n.identifier AS identifier, n.bto_id AS bto_id, COUNT(n) AS count RETURN identifier, bto_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain the URL, name, and the frequency of each 'MolecularFunction' node from the database?", "output": "MATCH (n:MolecularFunction) WITH n.url AS url, n.name AS name, COUNT(n) AS count RETURN url, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs and identifiers of each cellular component node along with the count of occurrences for each in the graph?", "output": "MATCH (n:CellularComponent) WITH n.url AS url, n.identifier AS identifier, COUNT(n) AS count RETURN url, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide a count of Gene nodes for each specific description and URL pairing present in the dataset.", "output": "MATCH (n:Gene) WITH n.description AS description, n.url AS url, COUNT(n) AS count RETURN description, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the number of Compound nodes having the same license and inchikey values?", "output": "MATCH (n:Compound) WITH n.license AS license, n.inchikey AS inchikey, COUNT(n) AS count RETURN license, inchikey, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many Disease nodes are there for each unique combination of source and identifier?", "output": "MATCH (n:Disease) WITH n.source AS source, n.identifier AS identifier, COUNT(n) AS count RETURN source, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many nodes labeled as 'MolecularFunction' share the same URL and identifier, and what are these URLs and identifiers?", "output": "MATCH (n:MolecularFunction) WITH n.url AS url, n.identifier AS identifier, COUNT(n) AS count RETURN url, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the number of compound nodes grouped by their source and URL properties?", "output": "MATCH (n:Compound) WITH n.source AS source, n.url AS url, COUNT(n) AS count RETURN source, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Compound nodes that share each specific URL and identifier in the database?", "output": "MATCH (n:Compound) WITH n.url AS url, n.identifier AS identifier, COUNT(n) AS count RETURN url, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the count of pathways grouped by their respective licenses and URLs?", "output": "MATCH (n:Pathway) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the number of symptom nodes, categorized by their license and source attributes?", "output": "MATCH (n:Symptom) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of each node labeled \"Anatomy\", along with their names and identifiers?", "output": "MATCH (n:Anatomy) WITH n.name AS name, n.identifier AS identifier, COUNT(n) AS count RETURN name, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we count the occurrences of each gene based on their description and source?", "output": "MATCH (n:Gene) WITH n.description AS description, n.source AS source, COUNT(n) AS count RETURN description, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the mesh IDs and names of 'Anatomy' nodes along with their respective counts in the database?", "output": "MATCH (n:Anatomy) WITH n.mesh_id AS mesh_id, n.name AS name, COUNT(n) AS count RETURN mesh_id, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many Gene nodes are there for each combination of chromosome and gene name in the database?", "output": "MATCH (n:Gene) WITH n.chromosome AS chromosome, n.name AS name, COUNT(n) AS count RETURN chromosome, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is the query structured to obtain the IDs and web addresses of symptoms, and tally the number of nodes with these attributes?", "output": "MATCH (n:Symptom) WITH n.identifier AS identifier, n.url AS url, COUNT(n) AS count RETURN identifier, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the count of each symptom name and its associated source in the dataset?", "output": "MATCH (n:Symptom) WITH n.name AS name, n.source AS source, COUNT(n) AS count RETURN name, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count and return the number of anatomy entities grouped by their mesh ID and origin source?", "output": "MATCH (n:Anatomy) WITH n.mesh_id AS mesh_id, n.source AS source, COUNT(n) AS count RETURN mesh_id, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "In what way does the query compile a list of disease URLs and names along with counting how many of each disease node is found?", "output": "MATCH (n:Disease) WITH n.url AS url, n.name AS name, COUNT(n) AS count RETURN url, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different pharmacologic class types and their names, and how many nodes exist for each combination in the database?", "output": "MATCH (n:PharmacologicClass) WITH n.class_type AS class_type, n.name AS name, COUNT(n) AS count RETURN class_type, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of each pharmacologic class, grouped by their source and associated URL?", "output": "MATCH (n:PharmacologicClass) WITH n.source AS source, n.url AS url, COUNT(n) AS count RETURN source, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of disease nodes for each distinct license and source pairing?", "output": "MATCH (n:Disease) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the mesh IDs and identifiers for nodes labeled as 'Anatomy', along with the number of nodes associated with each pair.", "output": "MATCH (n:Anatomy) WITH n.mesh_id AS mesh_id, n.identifier AS identifier, COUNT(n) AS count RETURN mesh_id, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of cellular components grouped by their license and URL?", "output": "MATCH (n:CellularComponent) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of occurrences for each anatomy node, including its name and associated BTO ID, within the graph database?", "output": "MATCH (n:Anatomy) WITH n.name AS name, n.bto_id AS bto_id, COUNT(n) AS count RETURN name, bto_id, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names, URLs, and total number of nodes for each distinct biological process in the database?", "output": "MATCH (n:BiologicalProcess) WITH n.name AS name, n.url AS url, COUNT(n) AS count RETURN name, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the total number of pharmacologic classes for each combination of class type and license?", "output": "MATCH (n:PharmacologicClass) WITH n.class_type AS class_type, n.license AS license, COUNT(n) AS count RETURN class_type, license, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of pathways grouped by their license and identifier?", "output": "MATCH (n:Pathway) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names, URLs, and the number of occurrences of each unique symptom node in the database?", "output": "MATCH (n:Symptom) WITH n.name AS name, n.url AS url, COUNT(n) AS count RETURN name, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list each pharmacologic class by its license and identifier, along with the total number of classes for each pairing?", "output": "MATCH (n:PharmacologicClass) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count for each compound node, and what are their associated URLs and names?", "output": "MATCH (n:Compound) WITH n.url AS url, n.name AS name, COUNT(n) AS count RETURN url, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a count of cellular components grouped by their license and name?", "output": "MATCH (n:CellularComponent) WITH n.license AS license, n.name AS name, COUNT(n) AS count RETURN license, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve a table showing the license, name, and count of molecular functions that share the same name under each license type?", "output": "MATCH (n:MolecularFunction) WITH n.license AS license, n.name AS name, COUNT(n) AS count RETURN license, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I list each cellular component with their respective source and the total number of times they appear?", "output": "MATCH (n:CellularComponent) WITH n.name AS name, n.source AS source, COUNT(n) AS count RETURN name, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of pathways for each distinct pair of identifier and URL?", "output": "MATCH (n:Pathway) WITH n.identifier AS identifier, n.url AS url, COUNT(n) AS count RETURN identifier, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me the count of genes for each combination of license and source?", "output": "MATCH (n:Gene) WITH n.license AS license, n.source AS source, COUNT(n) AS count RETURN license, source, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of each unique source and pathway name pairing found in the database?", "output": "MATCH (n:Pathway) WITH n.source AS source, n.name AS name, COUNT(n) AS count RETURN source, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the names, identifiers, and frequency counts of all symptoms?", "output": "MATCH (n:Symptom) WITH n.name AS name, n.identifier AS identifier, COUNT(n) AS count RETURN name, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different licenses and URLs for pharmacologic classes and the count of items associated with each?", "output": "MATCH (n:PharmacologicClass) WITH n.license AS license, n.url AS url, COUNT(n) AS count RETURN license, url, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are cellular components aggregated based on license and identifier, and what is the number of components for each aggregation?", "output": "MATCH (n:CellularComponent) WITH n.license AS license, n.identifier AS identifier, COUNT(n) AS count RETURN license, identifier, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the tally of each distinct name of genes based on their associated licenses?", "output": "MATCH (n:Gene) WITH n.license AS license, n.name AS name, COUNT(n) AS count RETURN license, name, count"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the most frequently occurring Pathway node in the database?", "output": "MATCH (n:Pathway) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the mesh_id of the anatomy node that appears the most frequently in the database?", "output": "MATCH (n:Anatomy) WITH n.mesh_id AS mesh_id, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN mesh_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of the most frequently occurring gene node in the database?", "output": "MATCH (n:Gene) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify which license is most frequently held by cellular component nodes?", "output": "MATCH (n:CellularComponent) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the most frequently occurring CellularComponent node in the database?", "output": "MATCH (n:CellularComponent) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URL belongs to the 'Pathway' node that occurs most frequently in the dataset?", "output": "MATCH (n:Pathway) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the BTO ID of the anatomy node that appears most frequently in the database?", "output": "MATCH (n:Anatomy) WITH n.bto_id AS bto_id, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the source attribute that appears most often in nodes labeled as PharmacologicClass.", "output": "MATCH (n:PharmacologicClass) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the identifier of the SideEffect node that is repeated the highest number of times?", "output": "MATCH (n:SideEffect) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the most common license among all Gene nodes in the database?", "output": "MATCH (n:Gene) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the most repeated URL among all \"PharmacologicClass\" nodes?", "output": "MATCH (n:PharmacologicClass) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifier corresponds to the Disease node that appears the most times in the database?", "output": "MATCH (n:Disease) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of the most frequently occurring symptom node in the database?", "output": "MATCH (n:Symptom) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the most frequently occurring Compound node in the database?", "output": "MATCH (n:Compound) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which license appears most frequently across all Pathway nodes?", "output": "MATCH (n:Pathway) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the license linked to the greatest number of compound nodes?", "output": "MATCH (n:Compound) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which source appears most frequently as part of Pathway nodes?", "output": "MATCH (n:Pathway) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the source that appears most frequently among the disease nodes?", "output": "MATCH (n:Disease) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the license that has the highest number of associated anatomy nodes in the database?", "output": "MATCH (n:Anatomy) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of the 'Anatomy' node that appears most frequently in the nodes?", "output": "MATCH (n:Anatomy) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which specific identifier corresponds to the molecular function node that appears the most times in the graph?", "output": "MATCH (n:MolecularFunction) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease's URL ranks highest in terms of the number of nodes present in the dataset?", "output": "MATCH (n:Disease) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which source appears the most frequently within the CellularComponent nodes?", "output": "MATCH (n:CellularComponent) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the most frequently occurring biological process node in the database?", "output": "MATCH (n:BiologicalProcess) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which source of Gene nodes is the most frequent or has the largest count in the dataset? ", "output": "MATCH (n:Gene) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of the most frequently occurring molecular function node in the database?", "output": "MATCH (n:MolecularFunction) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the license associated with the highest number of \"Symptom\" nodes?", "output": "MATCH (n:Symptom) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the license that the largest number of MolecularFunction nodes share?", "output": "MATCH (n:MolecularFunction) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of the biological process node that has the highest occurrence?", "output": "MATCH (n:BiologicalProcess) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of the cellular component that appears the most frequently in the database?", "output": "MATCH (n:CellularComponent) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the gene identifier that has been counted the most times in the database?", "output": "MATCH (n:Gene) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifier corresponds to the Anatomy node with the greatest number of occurrences?", "output": "MATCH (n:Anatomy) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which 'source' attribute in the 'MolecularFunction' nodes has the highest count?", "output": "MATCH (n:MolecularFunction) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL of the compound node with the greatest number of instances in the graph?", "output": "MATCH (n:Compound) WITH n.url AS url, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the most prevalent license found among biological process nodes, based on frequency of occurrence?", "output": "MATCH (n:BiologicalProcess) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the pharmacologic class that appears most frequently in the database?", "output": "MATCH (n:PharmacologicClass) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the description of the gene that appears the most times in the data?", "output": "MATCH (n:Gene) WITH n.description AS description, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What license has been assigned to the largest number of disease nodes?", "output": "MATCH (n:Disease) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the most common source among all nodes labeled Anatomy?", "output": "MATCH (n:Anatomy) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the top pharmacologic class type, determined by the number of entries it has?", "output": "MATCH (n:PharmacologicClass) WITH n.class_type AS class_type, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN class_type"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway is represented the most in terms of name frequency within the dataset?", "output": "MATCH (n:Pathway) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which license has the highest occurrence rate within the pharmacologic class data?", "output": "MATCH (n:PharmacologicClass) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene occurs the most times in the gene nodes currently stored?", "output": "MATCH (n:Gene) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular component name is listed the largest number of times in the data?", "output": "MATCH (n:CellularComponent) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compound name represents the most repeated compound node within the network?", "output": "MATCH (n:Compound) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the most frequently occurring symptom in the database?", "output": "MATCH (n:Symptom) WITH n.identifier AS identifier, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the most frequently occurring disease in the database?", "output": "MATCH (n:Disease) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which source appears most frequently among all biological processes in the dataset?", "output": "MATCH (n:BiologicalProcess) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class is the most common based on the number of occurrences?", "output": "MATCH (n:PharmacologicClass) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which license appears most frequently for side effect nodes in the dataset?", "output": "MATCH (n:SideEffect) WITH n.license AS license, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the most common molecular function based on the number of its occurrences in the database?", "output": "MATCH (n:MolecularFunction) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the anatomy element with the highest occurrence in the database?", "output": "MATCH (n:Anatomy) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the InChIKey for the compound that is most prevalent in the database.", "output": "MATCH (n:Compound) WITH n.inchikey AS inchikey, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the InChI for the compound that appears most often in the dataset?", "output": "MATCH (n:Compound) WITH n.inchi AS inchi, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the most common source of symptoms in the database, based on the number of occurrences?", "output": "MATCH (n:Symptom) WITH n.source AS source, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological process is recorded the highest number of times in the database?", "output": "MATCH (n:BiologicalProcess) WITH n.name AS name, COUNT(n) AS count ORDER BY count DESC LIMIT 1 RETURN name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license details for both CellularComponent and SideEffect entities?", "output": "MATCH (n:CellularComponent) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license data for both pharmacologic classes and cellular components in the dataset?", "output": "MATCH (n:PharmacologicClass) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license information for both Anatomy and SideEffect entities?", "output": "MATCH (n:Anatomy) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the license records from nodes categorized as either Anatomy or PharmacologicClass?", "output": "MATCH (n:Anatomy) RETURN n.license AS Records UNION MATCH (m:PharmacologicClass) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the licenses from both gene and symptom entities?", "output": "MATCH (n:Gene) RETURN n.license AS Records UNION MATCH (m:Symptom) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license details for anatomy and cellular component records?", "output": "MATCH (n:Anatomy) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the licenses for all gene and cellular component entries in this dataset?", "output": "MATCH (n:Gene) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the sources used by records within the Anatomy and Pharmacologic Class categories?", "output": "MATCH (n:Anatomy) RETURN n.source AS Records UNION MATCH (m:PharmacologicClass) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license details from Pathway and Biological Process entities?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:BiologicalProcess) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license details for all pharmacologic classes and biological processes?", "output": "MATCH (n:PharmacologicClass) RETURN n.license AS Records UNION MATCH (m:BiologicalProcess) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve and view all unique license values from both \"Compound\" and \"SideEffect\" nodes?", "output": "MATCH (n:Compound) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the licenses for both BiologicalProcess and Compound entities in the dataset?", "output": "MATCH (n:BiologicalProcess) RETURN n.license AS Records UNION MATCH (m:Compound) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses are present for records identified as pathways and pharmacologic classes?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:PharmacologicClass) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you extract and display the license information from records pertaining to both Anatomy and Symptom nodes?", "output": "MATCH (n:Anatomy) RETURN n.license AS Records UNION MATCH (m:Symptom) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one obtain the sources from both Pathway and Anatomy nodes in a combined list?", "output": "MATCH (n:Pathway) RETURN n.source AS Records UNION MATCH (m:Anatomy) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the licenses associated with molecular functions and pharmacologic classes in the database?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:PharmacologicClass) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the license details for both pharmacologic classes and compounds recorded in the database?", "output": "MATCH (n:PharmacologicClass) RETURN n.license AS Records UNION MATCH (m:Compound) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me the licenses that have been assigned to both BiologicalProcess and Disease records?", "output": "MATCH (n:BiologicalProcess) RETURN n.license AS Records UNION MATCH (m:Disease) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the sources from the \"MolecularFunction\" and \"PharmacologicClass\" nodes in the database?", "output": "MATCH (n:MolecularFunction) RETURN n.source AS Records UNION MATCH (m:PharmacologicClass) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the license details for all nodes that belong to the 'MolecularFunction' and 'Anatomy' categories.", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:Anatomy) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the license information for both pharmacologic classes and symptoms?", "output": "MATCH (n:PharmacologicClass) RETURN n.license AS Records UNION MATCH (m:Symptom) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What query would return the source attributes of nodes labeled as Pathway and PharmacologicClass, combining the results?", "output": "MATCH (n:Pathway) RETURN n.source AS Records UNION MATCH (m:PharmacologicClass) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What records of licenses can be found for entities labeled as Gene and SideEffect?", "output": "MATCH (n:Gene) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the recorded licenses for both MolecularFunction and BiologicalProcess entities?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:BiologicalProcess) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the licenses associated with both pharmacologic classes and diseases in the database?", "output": "MATCH (n:PharmacologicClass) RETURN n.license AS Records UNION MATCH (m:Disease) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license records from both the Symptom and SideEffect categories?", "output": "MATCH (n:Symptom) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses pertain to the data records for both 'Gene' and 'BiologicalProcess' categories?", "output": "MATCH (n:Gene) RETURN n.license AS Records UNION MATCH (m:BiologicalProcess) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the license information from both 'Compound' and 'CellularComponent' nodes?", "output": "MATCH (n:Compound) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the source attributes from both Pathway and SideEffect nodes?", "output": "MATCH (n:Pathway) RETURN n.source AS Records UNION MATCH (m:SideEffect) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve records of licenses from nodes that are labeled either as MolecularFunction or Symptom?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:Symptom) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license information from nodes labeled as Symptom and BiologicalProcess?", "output": "MATCH (n:Symptom) RETURN n.license AS Records UNION MATCH (m:BiologicalProcess) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What license records exist for both Gene and Compound categories in the dataset?", "output": "MATCH (n:Gene) RETURN n.license AS Records UNION MATCH (m:Compound) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses are recorded for both MolecularFunction and Gene entities within the dataset?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:Gene) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the license information for each pathway and disease node?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:Disease) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the license information from the Gene and Disease nodes and present them together?", "output": "MATCH (n:Gene) RETURN n.license AS Records UNION MATCH (m:Disease) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the 'source' properties from both CellularComponent and SideEffect entities?", "output": "MATCH (n:CellularComponent) RETURN n.source AS Records UNION MATCH (m:SideEffect) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the sources from both the PharmacologicClass and CellularComponent node types?", "output": "MATCH (n:PharmacologicClass) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses are recorded for entities labeled as MolecularFunction and CellularComponent?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses have been recorded for entities classified as 'BiologicalProcess' and 'CellularComponent'?", "output": "MATCH (n:BiologicalProcess) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the list of all source records from gene and biological process nodes?", "output": "MATCH (n:Gene) RETURN n.source AS Records UNION MATCH (m:BiologicalProcess) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the license values associated with all nodes labeled as 'Pathway' or 'CellularComponent' in the database?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses of entities categorized under either Anatomy or BiologicalProcess?", "output": "MATCH (n:Anatomy) RETURN n.license AS Records UNION MATCH (m:BiologicalProcess) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of records for both MolecularFunction and Disease nodes in the database?", "output": "MATCH (n:MolecularFunction) RETURN n.source AS Records UNION MATCH (m:Disease) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the sources associated with both Symptom entities and CellularComponent entities from the dataset?", "output": "MATCH (n:Symptom) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide all unique license values found in the Symptom and Disease entities?", "output": "MATCH (n:Symptom) RETURN n.license AS Records UNION MATCH (m:Disease) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license information for both PharmacologicClass and Gene entities in the graph?", "output": "MATCH (n:PharmacologicClass) RETURN n.license AS Records UNION MATCH (m:Gene) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the sources for both symptoms and diseases in our dataset?", "output": "MATCH (n:Symptom) RETURN n.source AS Records UNION MATCH (m:Disease) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct sources for data entries categorized under the labels \"Disease\" and \"CellularComponent\"?", "output": "MATCH (n:Disease) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of all gene and symptom records in the database?", "output": "MATCH (n:Gene) RETURN n.source AS Records UNION MATCH (m:Symptom) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license information from pathway and side effect node records?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the sources belonging to both BiologicalProcess and CellularComponent node types?", "output": "MATCH (n:BiologicalProcess) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the licenses for both \"Symptom\" and \"CellularComponent\" node types?", "output": "MATCH (n:Symptom) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the source attributes for all entities categorized as PharmacologicClass and Symptom?", "output": "MATCH (n:PharmacologicClass) RETURN n.source AS Records UNION MATCH (m:Symptom) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses are associated with both pathways and genes in the database?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:Gene) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of all licenses found in both Anatomy and Disease entities?", "output": "MATCH (n:Anatomy) RETURN n.license AS Records UNION MATCH (m:Disease) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all the licenses of the molecular functions and diseases nodes?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:Disease) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the sources for both PharmacologicClass and BiologicalProcess entities?", "output": "MATCH (n:PharmacologicClass) RETURN n.source AS Records UNION MATCH (m:BiologicalProcess) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the licenses from nodes classified as 'Anatomy' and 'Compound'?", "output": "MATCH (n:Anatomy) RETURN n.license AS Records UNION MATCH (m:Compound) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What source values are returned from nodes categorized as \"PharmacologicClass\" and \"Gene\"?", "output": "MATCH (n:PharmacologicClass) RETURN n.source AS Records UNION MATCH (m:Gene) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of license values from both Disease and CellularComponent nodes?", "output": "MATCH (n:Disease) RETURN n.license AS Records UNION MATCH (m:CellularComponent) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the source attribute from all nodes classified as either Gene or SideEffect?", "output": "MATCH (n:Gene) RETURN n.source AS Records UNION MATCH (m:SideEffect) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the source information from both MolecularFunction and Symptom nodes?", "output": "MATCH (n:MolecularFunction) RETURN n.source AS Records UNION MATCH (m:Symptom) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What license information is available for entities classified as either MolecularFunction or SideEffect?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the source records linked to both \"Anatomy\" and \"BiologicalProcess\" nodes?", "output": "MATCH (n:Anatomy) RETURN n.source AS Records UNION MATCH (m:BiologicalProcess) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources associated with pharmacologic classes and diseases in the database?", "output": "MATCH (n:PharmacologicClass) RETURN n.source AS Records UNION MATCH (m:Disease) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the license records for both Disease and Compound entities stored in the graph?", "output": "MATCH (n:Disease) RETURN n.license AS Records UNION MATCH (m:Compound) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find out the types of licenses available across all nodes with the labels 'MolecularFunction' and 'Pathway'?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:Pathway) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses are associated with pathways or anatomy entities in the database?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:Anatomy) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the sources for nodes labeled as Pathway and Gene?", "output": "MATCH (n:Pathway) RETURN n.source AS Records UNION MATCH (m:Gene) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license data for disease entities and side effect entities from the database?", "output": "MATCH (n:Disease) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What records denote the source field for nodes labeled as either Pathway or CellularComponent?", "output": "MATCH (n:Pathway) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the collection of licenses for entities labeled as either MolecularFunction or Compound?", "output": "MATCH (n:MolecularFunction) RETURN n.license AS Records UNION MATCH (m:Compound) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What license details are returned from the categories of pathways and symptoms?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:Symptom) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different origin sources for data entries under both MolecularFunction and CellularComponent labels?", "output": "MATCH (n:MolecularFunction) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What different licenses are specified for entities labeled as Anatomy and Gene in the data?", "output": "MATCH (n:Anatomy) RETURN n.license AS Records UNION MATCH (m:Gene) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which license identifiers exist for the nodes labeled as BiologicalProcess and SideEffect?", "output": "MATCH (n:BiologicalProcess) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show the source fields for all records from the `Symptom` and `Compound` labels?", "output": "MATCH (n:Symptom) RETURN n.source AS Records UNION MATCH (m:Compound) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the sources for all entities labeled BiologicalProcess and those labeled Disease in the dataset?", "output": "MATCH (n:BiologicalProcess) RETURN n.source AS Records UNION MATCH (m:Disease) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the origins of the records for both Symptom and BiologicalProcess nodes in the dataset?", "output": "MATCH (n:Symptom) RETURN n.source AS Records UNION MATCH (m:BiologicalProcess) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the source records associated with nodes labeled as MolecularFunction or Gene in the database?  ", "output": "MATCH (n:MolecularFunction) RETURN n.source AS Records UNION MATCH (m:Gene) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the licenses retrieved from both pharmacologic classes and side effects nodes?", "output": "MATCH (n:PharmacologicClass) RETURN n.license AS Records UNION MATCH (m:SideEffect) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the source details for both Anatomy and Gene entities in the database?", "output": "MATCH (n:Anatomy) RETURN n.source AS Records UNION MATCH (m:Gene) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the sources for entities that are categorized as either BiologicalProcess or Compound?", "output": "MATCH (n:BiologicalProcess) RETURN n.source AS Records UNION MATCH (m:Compound) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a list of source identifiers for all PharmacologicClass and Compound entities?", "output": "MATCH (n:PharmacologicClass) RETURN n.source AS Records UNION MATCH (m:Compound) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve sources associated with both pathways and biological processes?", "output": "MATCH (n:Pathway) RETURN n.source AS Records UNION MATCH (m:BiologicalProcess) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the license information from all objects classified as either pathways or compounds?", "output": "MATCH (n:Pathway) RETURN n.license AS Records UNION MATCH (m:Compound) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify the sources from both Gene and Compound nodes in the dataset?", "output": "MATCH (n:Gene) RETURN n.source AS Records UNION MATCH (m:Compound) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the sources of Pathway and Disease nodes in the dataset?", "output": "MATCH (n:Pathway) RETURN n.source AS Records UNION MATCH (m:Disease) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses have been recorded for both Symptom and Compound entities?", "output": "MATCH (n:Symptom) RETURN n.license AS Records UNION MATCH (m:Compound) RETURN m.license AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the sources from both anatomy and disease records?", "output": "MATCH (n:Anatomy) RETURN n.source AS Records UNION MATCH (m:Disease) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different source attributes present in both the Gene and CellularComponent entities?", "output": "MATCH (n:Gene) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the source fields from nodes labeled as BiologicalProcess and SideEffect?", "output": "MATCH (n:BiologicalProcess) RETURN n.source AS Records UNION MATCH (m:SideEffect) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which records from the nodes tagged as 'Anatomy' and 'Symptom' have their source information available?", "output": "MATCH (n:Anatomy) RETURN n.source AS Records UNION MATCH (m:Symptom) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources recorded for both the compounds and the cellular components in the database?", "output": "MATCH (n:Compound) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of records for diseases and compounds mentioned in the database?", "output": "MATCH (n:Disease) RETURN n.source AS Records UNION MATCH (m:Compound) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all sources related to MolecularFunction and Anatomy node types?", "output": "MATCH (n:MolecularFunction) RETURN n.source AS Records UNION MATCH (m:Anatomy) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sources are recorded for entities classified under the labels \"Anatomy\" and \"CellularComponent\"?", "output": "MATCH (n:Anatomy) RETURN n.source AS Records UNION MATCH (m:CellularComponent) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From what sources do the records under both the Compound and SideEffect node labels derive their data?", "output": "MATCH (n:Compound) RETURN n.source AS Records UNION MATCH (m:SideEffect) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct sources recorded for nodes with the labels 'Gene' and 'Disease'?", "output": "MATCH (n:Gene) RETURN n.source AS Records UNION MATCH (m:Disease) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of all the molecular functions and pathways stored in the database?", "output": "MATCH (n:MolecularFunction) RETURN n.source AS Records UNION MATCH (m:Pathway) RETURN m.source AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs from both the 'Gene' and 'CellularComponent' nodes without filtering duplicates?", "output": "MATCH (n:Gene) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the URL properties from both Compound and CellularComponent nodes?", "output": "MATCH (n:Compound) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs are returned from querying both CellularComponent and SideEffect nodes?", "output": "MATCH (n:CellularComponent) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URLs from both Pathway and SideEffect nodes?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I fetch the URL properties of nodes labeled as 'Pathway' and 'CellularComponent'?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of URLs from nodes labeled 'Anatomy' and 'Gene' without removing duplicates?", "output": "MATCH (n:Anatomy) RETURN n.url AS Records UNION ALL MATCH (m:Gene) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the URL properties for both PharmacologicClass nodes and Gene nodes?", "output": "MATCH (n:PharmacologicClass) RETURN n.url AS Records UNION ALL MATCH (m:Gene) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What query will return the URLs from both Gene and SideEffect nodes, keeping them in separate results?", "output": "MATCH (n:Gene) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I retrieve the URLs from both Gene nodes and Disease nodes without eliminating duplicates?", "output": "MATCH (n:Gene) RETURN n.url AS Records UNION ALL MATCH (m:Disease) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me how to retrieve the URLs associated with both \"Compound\" and \"SideEffect\" nodes?", "output": "MATCH (n:Compound) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I obtain the URLs for both pathways and genes in one query result?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:Gene) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the collection of URLs stored in the database for both pharmacologic classes and cellular components?", "output": "MATCH (n:PharmacologicClass) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a collection of URLs from both the PharmacologicClass and SideEffect nodes?", "output": "MATCH (n:PharmacologicClass) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs associated with each pharmacologic class and symptom in the database?", "output": "MATCH (n:PharmacologicClass) RETURN n.url AS Records UNION ALL MATCH (m:Symptom) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URLs from both Pathway and Compound entities?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:Compound) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What URLs do the PharmacologicClass and BiologicalProcess entities have in this database?", "output": "MATCH (n:PharmacologicClass) RETURN n.url AS Records UNION ALL MATCH (m:BiologicalProcess) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What records of URLs can be found in the Anatomy and BiologicalProcess nodes?", "output": "MATCH (n:Anatomy) RETURN n.url AS Records UNION ALL MATCH (m:BiologicalProcess) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What collection of URLs corresponds to both symptoms and diseases in the dataset?", "output": "MATCH (n:Symptom) RETURN n.url AS Records UNION ALL MATCH (m:Disease) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs associated with both Pathway nodes and PharmacologicClass nodes in the database?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:PharmacologicClass) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs associated with both pathways and anatomical components using this query?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:Anatomy) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of URLs associated with both MolecularFunction and SideEffect nodes?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs associated with each biological process and disease stored in the database?", "output": "MATCH (n:BiologicalProcess) RETURN n.url AS Records UNION ALL MATCH (m:Disease) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different URLs found for MolecularFunction and BiologicalProcess nodes according to this query?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:BiologicalProcess) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What URLs are returned when fetching records from both BiologicalProcess and CellularComponent nodes?", "output": "MATCH (n:BiologicalProcess) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the URLs for Gene and Compound nodes in a single result set?", "output": "MATCH (n:Gene) RETURN n.url AS Records UNION ALL MATCH (m:Compound) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs from both 'Symptom' and 'SideEffect' nodes?", "output": "MATCH (n:Symptom) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs are stored within the nodes of type Anatomy and PharmacologicClass?", "output": "MATCH (n:Anatomy) RETURN n.url AS Records UNION ALL MATCH (m:PharmacologicClass) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a combined list of URLs for pharmacologic classes and diseases?", "output": "MATCH (n:PharmacologicClass) RETURN n.url AS Records UNION ALL MATCH (m:Disease) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs for each pathway and biological process recorded in the system?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:BiologicalProcess) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URL properties from nodes tagged as MolecularFunction and Compound?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:Compound) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What URLs do the Symptom and BiologicalProcess nodes have according to the database records?", "output": "MATCH (n:Symptom) RETURN n.url AS Records UNION ALL MATCH (m:BiologicalProcess) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs are stored in the database for both Anatomy and SideEffect node types?", "output": "MATCH (n:Anatomy) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs are returned by extracting data from the BiologicalProcess and Compound nodes?", "output": "MATCH (n:BiologicalProcess) RETURN n.url AS Records UNION ALL MATCH (m:Compound) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs for all entities classified as either MolecularFunction or CellularComponent?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve URLs from nodes marked as 'Pathway' and 'Symptom' without merging their results?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:Symptom) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URLs for every MolecularFunction and Pathway node?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:Pathway) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of all nodes labeled as \"Gene\" and \"BiologicalProcess\" in the database?", "output": "MATCH (n:Gene) RETURN n.url AS Records UNION ALL MATCH (m:BiologicalProcess) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the URLs for all nodes under both the \"Pathway\" and \"Disease\" labels?", "output": "MATCH (n:Pathway) RETURN n.url AS Records UNION ALL MATCH (m:Disease) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all URLs from both MolecularFunction and Gene nodes?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:Gene) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs are stored in the database for entries categorized under both MolecularFunction and Symptom?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:Symptom) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs associated with nodes labeled as 'Disease' and 'CellularComponent' in the database?", "output": "MATCH (n:Disease) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs extracted from nodes with the labels BiologicalProcess and SideEffect?", "output": "MATCH (n:BiologicalProcess) RETURN n.url AS Records UNION ALL MATCH (m:SideEffect) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What URLs do nodes labeled as Symptom and nodes labeled as CellularComponent have in the dataset?", "output": "MATCH (n:Symptom) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the URLs from both 'Anatomy' and 'Compound' nodes?", "output": "MATCH (n:Anatomy) RETURN n.url AS Records UNION ALL MATCH (m:Compound) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URLs associated with anatomical entities and diseases from the database?", "output": "MATCH (n:Anatomy) RETURN n.url AS Records UNION ALL MATCH (m:Disease) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the complete list of URLs stored for nodes labeled either 'Disease' or 'Compound'?", "output": "MATCH (n:Disease) RETURN n.url AS Records UNION ALL MATCH (m:Compound) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What URLs do the nodes labeled as MolecularFunction and Anatomy provide?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:Anatomy) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve a combined list of URLs from nodes labeled as 'Anatomy' and 'CellularComponent'?", "output": "MATCH (n:Anatomy) RETURN n.url AS Records UNION ALL MATCH (m:CellularComponent) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs found in nodes with the label 'Symptom', and how do these compare with those in 'Compound' nodes?", "output": "MATCH (n:Symptom) RETURN n.url AS Records UNION ALL MATCH (m:Compound) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What URLs are extracted from both MolecularFunction and Disease nodes in this dataset?", "output": "MATCH (n:MolecularFunction) RETURN n.url AS Records UNION ALL MATCH (m:Disease) RETURN m.url AS Records"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct genes associated with pathways through the PARTICIPATES_GpPW relationship?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct genes that have a 'REGULATES_GrG' relationship with another gene?", "output": "MATCH (g:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique genes connected via the COVARIES_GcG relationship?", "output": "MATCH (g:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique diseases are associated with any gene through the \"ASSOCIATES_DaG\" relationship in the database?", "output": "MATCH (g:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct compounds that bind to genes as per the BINDS_CbG connection?", "output": "MATCH (g:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different diseases that are similar to other diseases via the RESEMBLES_DrD relationship?", "output": "MATCH (g:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct compounds that are connected to other compounds via the \"RESEMBLES_CrC\" relationship?", "output": "MATCH (g:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique compounds linked to genes through the 'DOWNREGULATES_CdG' relationship?", "output": "MATCH (g:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes that are linked through the PARTICIPATES_GpMF relationship to any molecular function?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct diseases that act to downregulate any gene in the database?", "output": "MATCH (g:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct diseases that have been linked to anatomy via the localizes relationship?", "output": "MATCH (g:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct genes are there that have an \"INTERACTS_GiG\" relationship with at least one other gene?", "output": "MATCH (g:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the number of different anatomy entities that have an 'EXPRESSES_AeG' relationship with genes?", "output": "MATCH (g:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of unique compounds that have relationships indicating they palliate diseases?", "output": "MATCH (g:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of unique disease entities that have been identified to upregulate genes?", "output": "MATCH (g:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique anatomy nodes that upregulate any gene?", "output": "MATCH (g:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count each distinct anatomy that acts to downregulate any gene within the dataset?", "output": "MATCH (g:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct genes that are involved in cellular components through any participation?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique pharmacologic classes linked to compounds through an inclusion relationship?", "output": "MATCH (g:PharmacologicClass)-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct compounds that have an upregulation relationship with any gene?", "output": "MATCH (g:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique diseases have at least one recorded symptom?", "output": "MATCH (g:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique compounds are there that have a relationship indicating they treat at least one disease?", "output": "MATCH (g:Compound)-[r:TREATS_CtD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of pharmacologic class names, ensuring each name is distinct, linked to compounds through an INCLUDES_PCiC connection?", "output": "MATCH (g:PharmacologicClass)-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct disease names that are connected to other diseases through the \"RESEMBLES_DrD\" relationship?", "output": "MATCH (g:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct URLs for diseases that connect with genes through the \"ASSOCIATES_DaG\" relationship?", "output": "MATCH (g:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct genes, based on their associated URLs, that are connected to molecular functions using the PARTICIPATES_GpMF link?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique gene sources that are associated with pathways via the PARTICIPATES_GpPW relationship?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct URLs for anatomy nodes that have an \"UPREGULATES_AuG\" relationship with any gene?", "output": "MATCH (g:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct gene URLs linked to any cellular component by the relationship labeled PARTICIPATES_GpCC?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct gene names that are connected to other genes through a 'COVARIES_GcG' relationship?", "output": "MATCH (g:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique disease URLs linked to any symptoms through the \"PRESENTS_DpS\" relationship?", "output": "MATCH (g:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct URLs for genes that regulate other genes through the REGULATES_GrG relationship?", "output": "MATCH (g:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct licenses associated with compound pairs connected by the RESEMBLES_CrC relationship?", "output": "MATCH (g:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct gene licenses exist within the set of genes participating in 'COVARIES_GcG' relationships?", "output": "MATCH (g:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique gene descriptions found among genes associated with a COVARIES_GcG relationship to another gene?", "output": "MATCH (g:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g.description)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct diseases that have a 'RESEMBLES_DrD' association with another disease?", "output": "MATCH (g:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique gene names that are connected to biological processes using the PARTICIPATES_GpBP relationship?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct URLs for Gene nodes that are involved in a COVARIES_GcG relationship with another Gene node?", "output": "MATCH (g:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique associations exist between diseases and genes through the \"ASSOCIATES_DaG\" relationship when considering only distinct disease names?", "output": "MATCH (g:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct gene names can be identified as participating in molecular functions through the PARTICIPATES_GpMF relationship?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the distinct count of URLs for compounds that have a 'BINDS_CbG' relationship with genes?", "output": "MATCH (g:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct sources for compounds associated with genes through the BINDS_CbG relationship?", "output": "MATCH (g:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the unique anatomy nodes, identified by `bto_id`, that have an UPREGULATES_AuG relationship with any gene?", "output": "MATCH (g:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g.bto_id)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct Anatomy node identifiers that are linked by the 'EXPRESSES_AeG' relationship to any Gene node?", "output": "MATCH (g:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique gene identifiers that are involved in 'COVARIES_GcG' relationships?", "output": "MATCH (g:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique disease entries, identified by their URLs, are associated with anatomical structures through the \"LOCALIZES_DlA\" relationship?", "output": "MATCH (g:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene descriptions are associated with any biological process through the PARTICIPATES_GpBP relationship in the database?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN COUNT(DISTINCT g.description)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct genes that are associated with any molecular function through the PARTICIPATES_GpMF relationship?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct names of compounds that have a 'RESEMBLES_CrC' type of relationship with another compound?", "output": "MATCH (g:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene sources have genes that are connected by a 'COVARIES_GcG' relationship to another gene?", "output": "MATCH (g:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct gene names are involved in cellular components according to the PARTICIPATES_GpCC relationship?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you determine the number of unique compound URLs that have connections labeled as DOWNREGULATES_CdG to genes?", "output": "MATCH (g:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many different licenses are there for genes that are connected through a 'REGULATES_GrG' relationship to other genes?", "output": "MATCH (g:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene descriptions are involved in 'REGULATES_GrG' relationships with other genes?", "output": "MATCH (g:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN COUNT(DISTINCT g.description)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique compounds are there that have a relationship labeled 'DOWNREGULATES_CdG' to any gene?", "output": "MATCH (g:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique disease sources that have connections marked as downregulating with genes?", "output": "MATCH (g:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of unique genes that participate in interactions with other genes via the INTERACTS_GiG connection?", "output": "MATCH (g:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct sources linked to Anatomy nodes that are involved in the UPREGULATES_AuG relationship with Gene nodes?", "output": "MATCH (g:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique anatomical structures, each identified by a distinct mesh_id, express any gene via the EXPRESSES_AeG relationship?", "output": "MATCH (g:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g.mesh_id)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique URLs for diseases that play a role in upregulating genes?", "output": "MATCH (g:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct URLs exist for diseases that have a \"resembles\" relationship with other diseases in the database?", "output": "MATCH (g:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique disease URLs linked to the downregulation of genes?", "output": "MATCH (g:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the different diseases that upregulate any gene using the UPREGULATES_DuG relationship?", "output": "MATCH (g:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct source attributes for compounds linked by the RESEMBLES_CrC relationship?", "output": "MATCH (g:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct licenses held by diseases that have a relationship with gene downregulation?", "output": "MATCH (g:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct sources for compounds linked to the palliation of diseases?", "output": "MATCH (g:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct compounds with associated URLs are recorded as palliating diseases?", "output": "MATCH (g:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct gene names that appear as the source in 'INTERACTS_GiG' relationships?", "output": "MATCH (g:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many different compounds, identified by unique InChI codes, are connected to genes through the BINDS_CbG relationship?", "output": "MATCH (g:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g.inchi)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct identifiers for anatomy entities that are involved in downregulating any gene?", "output": "MATCH (g:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique licenses from diseases involved in the upregulation of genes?", "output": "MATCH (g:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compound identifiers that are linked with palliating diseases?", "output": "MATCH (g:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct licenses associated with diseases that have a similarity relationship with other diseases?", "output": "MATCH (g:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct disease identifiers that are associated with downregulating genes?", "output": "MATCH (g:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compounds that are known to palliate diseases?", "output": "MATCH (g:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct disease names that play a role in upregulating at least one gene?", "output": "MATCH (g:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct licenses from anatomy nodes that are involved in the upregulation of genes?", "output": "MATCH (g:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct anatomy nodes, identified by mesh_id, that have a downregulation relationship with genes?", "output": "MATCH (g:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN COUNT(DISTINCT g.mesh_id)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different disease licenses linked with their localizations to anatomy nodes?  ", "output": "MATCH (g:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique anatomy licenses are associated with anatomy entities that downregulate genes?", "output": "MATCH (g:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct licenses found for compounds that help in palliating diseases?", "output": "MATCH (g:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique Anatomy nodes, identified by BTO IDs, are there that have an \"EXPRESSES_AeG\" relationship with any Gene node?", "output": "MATCH (g:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g.bto_id)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compound URLs found in the database that indicate a treatment for diseases?", "output": "MATCH (g:Compound)-[r:TREATS_CtD]->(m:Disease) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique licenses for anatomy instances that have an expression relationship with genes?", "output": "MATCH (g:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct URLs belonging to genes that exhibit interactions with other genes via Gene Interaction links?", "output": "MATCH (g:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique disease sources involved in upregulating genes?", "output": "MATCH (g:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct anatomy entities can be found that have a 'DOWNREGULATES_AdG' relationship with any gene?", "output": "MATCH (g:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find out the number of distinct `inchikeys` for `Compounds` that participate in the `UPREGULATES_CuG` relationship type with `Gene` nodes?", "output": "MATCH (g:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN COUNT(DISTINCT g.inchikey)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compound InChIKeys that have a binding relationship with a gene?", "output": "MATCH (g:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g.inchikey)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene licenses are counted that are associated with participation in a pathway?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct licenses from diseases that have associations with genes?", "output": "MATCH (g:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique anatomical elements identified by mesh IDs that participate in the upregulation of genes?", "output": "MATCH (g:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g.mesh_id)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different sources for diseases that have a resemblance to another disease?", "output": "MATCH (g:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique URLs of anatomy nodes exist that express any gene?", "output": "MATCH (g:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct gene names linked to pathway participation?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct anatomy names involved in expressing genes?", "output": "MATCH (g:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct diseases that are linked to genes through a downregulation relationship?", "output": "MATCH (g:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct anatomy nodes that have an \"upregulates\" relationship with any gene?", "output": "MATCH (g:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique compound entities exist that have a BINDS_CbG relationship with genes within the database?", "output": "MATCH (g:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique gene licenses that are involved with a cellular component activity?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique license identifiers for compounds that downregulate any gene?", "output": "MATCH (g:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compound licenses for compounds that interact with genes?", "output": "MATCH (g:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct 'Compound' nodes exist that have a 'TREATS_CtD' relationship with any 'Disease' node?", "output": "MATCH (g:Compound)-[r:TREATS_CtD]->(m:Disease) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct InChIKeys for Compound nodes that resemble other Compound nodes according to the \"RESEMBLES_CrC\" relationship?", "output": "MATCH (g:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g.inchikey)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene descriptions associated with the cellular components they participate in?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g.description)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct compound sources linked to the upregulation of genes?", "output": "MATCH (g:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct chromosomes represented by genes that covary with other genes?", "output": "MATCH (g:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g.chromosome)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct licenses for diseases that present with symptoms?", "output": "MATCH (g:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct chromosomes among genes that have interactions with other genes?", "output": "MATCH (g:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN COUNT(DISTINCT g.chromosome)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of different compound names that bind to any gene?", "output": "MATCH (g:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you tell me how many different diseases are linked to genes through the 'ASSOCIATES_DaG' relationship?", "output": "MATCH (g:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique chromosomes associated with genes that take part in pathways?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g.chromosome)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct InChI identifiers for compounds that have a palliative effect on diseases?", "output": "MATCH (g:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g.inchi)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct gene chromosomes that have participation in cellular components?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g.chromosome)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique licenses for compounds that upregulate any gene?", "output": "MATCH (g:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique anatomy entities that have a downregulation effect on genes?", "output": "MATCH (g:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct sources for diseases that have anatomical localization according to the given data?", "output": "MATCH (g:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g.source)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of different gene descriptions associated with genes that participate in pathways?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g.description)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct genes that participate in pathways, according to their URLs?", "output": "MATCH (g:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g.url)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the count of distinct licenses linked to genes connected through interactions?", "output": "MATCH (g:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN COUNT(DISTINCT g.license)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct disease identifiers that have been found in specific anatomical structures?", "output": "MATCH (g:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g.identifier)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique disease names are associated with any symptoms in the database?", "output": "MATCH (g:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN COUNT(DISTINCT g.name)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many pharmacologic classes, cited from DrugCentral, have an associated compound via the INCLUDES_PCiC relationship?", "output": "MATCH (g:PharmacologicClass { source: \"DrugCentral\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct \"measured\" genes that have a regulatory linkage with other genes labeled via the \"REGULATES_GrG\" relationship?", "output": "MATCH (g:Gene { method: \"measured\" })-[r:REGULATES_GrG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different diseases identified in the \"MEDLINE cooccurrence\" source that localize to any anatomy through a \"LOCALIZES_DlA\" connection?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique diseases that are linked to other diseases through a \"RESEMBLES_DrD\" relationship, originating from the \"MEDLINE cooccurrence\" source?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compounds from PharmacotherapyDB that have a \"TREATS_CtD\" connection to any diseases in the dataset?", "output": "MATCH (g:Compound { source: \"PharmacotherapyDB\" })-[r:TREATS_CtD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique genes that have a connection labeled \"COVARIES_GcG\" originating from genes in the \"ERC\" source?", "output": "MATCH (g:Gene { source: \"ERC\" })-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique disease entries from \"MEDLINE cooccurrence\" that are linked to anatomical structures via the LOCALIZES_DlA relationship?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct compounds with the property 'method' set to \"measured\" that have a relationship marked as DOWNREGULATES_CdG with any gene?", "output": "MATCH (g:Compound { method: \"measured\" })-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct 'measured' gene nodes that have outgoing 'REGULATES_GrG' relationships to other gene nodes?", "output": "MATCH (g:Gene { method: \"measured\" })-[r:REGULATES_GrG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct pharmacologic classes with a \"CC BY 4.0\" license that are associated with any compound via the INCLUDES_PCiC relationship?", "output": "MATCH (g:PharmacologicClass { license: \"CC BY 4.0\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you tell me the number of unique diseases from \"MEDLINE cooccurrence\" that have a 'RESEMBLES_DrD' connection to another disease?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique disease entries with a \"CC0 1.0\" license that are localized to anatomy nodes via the LOCALIZES_DlA relationship?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique Disease nodes with a \"MEDLINE cooccurrence\" source that have a \"LOCALIZES_DlA\" relationship with any Anatomy node?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique genes sourced from 'ERC' that have at least one 'COVARIES_GcG' relationship to another gene in the database?", "output": "MATCH (g:Gene { source: \"ERC\" })-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct genes with a source of \"ERC\" that have a relationship labeled COVARIES_GcG to another gene?", "output": "MATCH (g:Gene { source: \"ERC\" })-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct compounds that originate from PharmacotherapyDB and are linked to diseases through the TREATS_CtD relationship?", "output": "MATCH (g:Compound { source: \"PharmacotherapyDB\" })-[r:TREATS_CtD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct diseases bearing the \"CC0 1.0\" license that have connections labeled \"UPREGULATES_DuG\" to any genes?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct diseases, according to MEDLINE cooccurrence data, that have a localization relationship with anatomical entities?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes labeled by the source \"NCBI gene2go\" that participate in any molecular function via the PARTICIPATES_GpMF relationship?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct diseases with the source \"STARGEO\" are linked to genes through the \"DOWNREGULATES_DdG\" relationship?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct anatomy nodes from Bgee that are associated with upregulating a gene?", "output": "MATCH (g:Anatomy { source: \"Bgee\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct disease nodes, under the \"CC BY 4.0\" license, that have an 'ASSOCIATES_DaG' relationship with any gene nodes?", "output": "MATCH (g:Disease { license: \"CC BY 4.0\" })-[r:ASSOCIATES_DaG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct disease entities that are associated with anatomical entities through the \"LOCALIZES_DlA\" relationship and have the \"CC0 1.0\" license?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct diseases that act as downregulators of genes and are listed in the STARGEO source?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique compounds with a CC0 1.0 license are connected by a RESEMBLES_CrC relationship to another compound?", "output": "MATCH (g:Compound { license: \"CC0 1.0\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many individual disease entries, marked with the license \"CC0 1.0\", show a relationship to any anatomical part through LOCALIZES_DIA?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique diseases listed in the STARGEO source that have a relationship where they upregulate genes?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compounds labeled from \"PharmacotherapyDB\" that are associated with palliating diseases?", "output": "MATCH (g:Compound { source: \"PharmacotherapyDB\" })-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique diseases labeled with \"CC0 1.0\" that are linked by a downregulation relationship to genes?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique diseases, under the \"CC0 1.0\" license, that establish a localization connection to anatomy entities?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many different compounds labeled with the license \"CC BY-NC 4.0\" have a BINDS_CbG relationship with genes?", "output": "MATCH (g:Compound { license: \"CC BY-NC 4.0\" })-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes that have the URL \"http://www.wikipathways.org/instance/WP2858_r83015\" and are related to pathways through a PARTICIPATES_GpPW relationship?", "output": "MATCH (g:Gene { url: \"http://www.wikipathways.org/instance/WP2858_r83015\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the tally of unique disease entries, coming from the MEDLINE cooccurrence source, that have a localization relationship with anatomical entities?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compounds with the licensing \"CC0 1.0\" that are connected to other compounds via the \"RESEMBLES_CrC\" relationship?", "output": "MATCH (g:Compound { license: \"CC0 1.0\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of unique compounds that possess a CC0 1.0 license and are connected by a 'RESEMBLES_CrC' relationship to any other compound?", "output": "MATCH (g:Compound { license: \"CC0 1.0\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique diseases in the STARGEO source that have a relationship where they downregulate genes?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct genes from the \"LINCS L1000\" source that have a \"REGULATES_GrG\" relationship with any other gene?", "output": "MATCH (g:Gene { source: \"LINCS L1000\" })-[r:REGULATES_GrG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compounds, licensed under \"CC0 1.0\", that resemble other compounds via a \"RESEMBLES_CrC\" relationship?", "output": "MATCH (g:Compound { license: \"CC0 1.0\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct ERC source genes have at least one COVARIES_GcG type of connection with another gene?", "output": "MATCH (g:Gene { source: \"ERC\" })-[r:COVARIES_GcG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct genes from the data source \"NCBI gene2go\" are engaged in any molecular function through the PARTICIPATES_GpMF relationship?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct diseases, having a \"CC0 1.0\" license, that have a localization relationship with any anatomy?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique diseases in the STARGEO database that are associated with upregulating genes?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct pharmacologic classes from \"DrugCentral\" that have a relationship with any compound?", "output": "MATCH (g:PharmacologicClass { source: \"DrugCentral\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct genes, from the NCBI gene2go source, that are involved with any cellular component via the PARTICIPATES_GpCC relationship?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct anatomical structures licensed under \"CC BY 4.0\" that express genes through the relationship type \"EXPRESSES_AeG\"?", "output": "MATCH (g:Anatomy { license: \"CC BY 4.0\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct diseases associated with MEDLINE cooccurrence that have a localization relationship with anatomical entities?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of distinct diseases originating from STARGEO that have been recorded to upregulate genes?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of different disease entities originating from STARGEO that are associated with the upregulation of any gene?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the distinct count of anatomy records with a \"CC BY 4.0\" license that are linked to any gene through an \"EXPRESSES_AeG\" relationship?", "output": "MATCH (g:Anatomy { license: \"CC BY 4.0\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct compounds with the 'measured' method attribute that are associated with the downregulation of any gene?", "output": "MATCH (g:Compound { method: \"measured\" })-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct pharmacologic classes sourced from DrugCentral that have associated compounds?", "output": "MATCH (g:PharmacologicClass { source: \"DrugCentral\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the different pharmacologic classes from DrugCentral that have an associated compound?", "output": "MATCH (g:PharmacologicClass { source: \"DrugCentral\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can we determine the number of different diseases holding the 'CC0 1.0' license that are linked to genes via an 'UPREGULATES_DuG' relationship?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique diseases categorized under CC0 1.0 that have a resemblance relationship with another disease?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique compounds with a \"CC BY-SA 3.0\" license are associated with any gene through the BINDS_CbG relationship?", "output": "MATCH (g:Compound { license: \"CC BY-SA 3.0\" })-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the distinct anatomy entities labeled with \"Bgee\" that have a relationship of upregulation to a gene?", "output": "MATCH (g:Anatomy { source: \"Bgee\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different diseases from \"STARGEO\" that are associated with the downregulation of any gene?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique pharmacologic classes from DrugCentral that are linked to compounds in this dataset?", "output": "MATCH (g:PharmacologicClass { source: \"DrugCentral\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct diseases with a CC0 1.0 license that establish a downregulation connection with genes?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct anatomy nodes sourced from Bgee that are associated with upregulating genes?", "output": "MATCH (g:Anatomy { source: \"Bgee\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compounds labeled as sourced from \"Dice similarity of ECFPs\" that have a \"RESEMBLES_CrC\" relationship with another compound?", "output": "MATCH (g:Compound { source: \"Dice similarity of ECFPs\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of unique disease nodes sourced from STARGEO that have a relationship indicating they upregulate a gene?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct pharmacologic classes obtained from DrugCentral that include one or more compounds?", "output": "MATCH (g:PharmacologicClass { source: \"DrugCentral\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique diseases, licensed under \"CC0 1.0\", are connected via a resemblance relationship to other diseases?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:RESEMBLES_DrD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct anatomy records from the Bgee dataset that engage in downregulating gene activities?", "output": "MATCH (g:Anatomy { source: \"Bgee\" })-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique gene entities from the NCBI gene2go source participate in cellular components through a PARTICIPATES_GpCC link?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique nodes representing anatomical structures from the Bgee source that are linked to the upregulation of genes?", "output": "MATCH (g:Anatomy { source: \"Bgee\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of unique pharmacologic classes, licensed as CC BY 4.0, that have at least one compound associated with them?", "output": "MATCH (g:PharmacologicClass { license: \"CC BY 4.0\" })-[r:INCLUDES_PCiC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique compounds holding a \"CC0 1.0\" license that are connected by a RESSEMBLES_CrC relationship?", "output": "MATCH (g:Compound { license: \"CC0 1.0\" })-[r:RESEMBLES_CrC]->(m:Compound) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique measured genes that regulate other genes?", "output": "MATCH (g:Gene { method: \"measured\" })-[r:REGULATES_GrG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct genes, sourced from NCBI gene2go, are involved in cellular components through the PARTICIPATES_GpCC relationship?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of unique diseases from the \"STARGEO\" database that have been recorded to increase gene activity?", "output": "MATCH (g:Disease { source: \"STARGEO\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique compounds, licensed under \"CC BY-NC 4.0,\" bind to any gene in the database?", "output": "MATCH (g:Compound { license: \"CC BY-NC 4.0\" })-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique disease entities, as found in \"MEDLINE cooccurrence\", have been documented to localize in anatomy nodes?", "output": "MATCH (g:Disease { source: \"MEDLINE cooccurrence\" })-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique anatomical parts from the Bgee database downregulate a gene according to this dataset?", "output": "MATCH (g:Anatomy { source: \"Bgee\" })-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many individual compounds under the license \"CC0 1.0\" have links indicating they palliate diseases?", "output": "MATCH (g:Compound { license: \"CC0 1.0\" })-[r:PALLIATES_CpD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique anatomy nodes from the Bgee source are involved in the \"upregulates\" relationship with any gene node?", "output": "MATCH (g:Anatomy { source: \"Bgee\" })-[r:UPREGULATES_AuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique anatomy nodes with the license \"CC BY 4.0\" that have expression relations to any genes?", "output": "MATCH (g:Anatomy { license: \"CC BY 4.0\" })-[r:EXPRESSES_AeG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of unique instances of compounds having the URL \"http://sideeffects.embl.de/se/C0011603/\" which are associated with any side effects via the \"CAUSES_CcSE\" relationship?", "output": "MATCH (g:Compound { url: \"http://sideeffects.embl.de/se/C0011603/\" })-[r:CAUSES_CcSE]->(m:SideEffect) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct gene nodes that have a \"CC BY 4.0\" license and are associated with any cellular component through the PARTICIPATES_GpCC relationship?", "output": "MATCH (g:Gene { license: \"CC BY 4.0\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of unique genes that are part of cellular components, as recorded in the \"NCBI gene2go\" source?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct compounds, identified through the \"measured\" method, that have an upregulating effect on any gene?", "output": "MATCH (g:Compound { method: \"measured\" })-[r:UPREGULATES_CuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct diseases possessing the \"ODbL 1.0\" license that have associations with genes?", "output": "MATCH (g:Disease { license: \"ODbL 1.0\" })-[r:ASSOCIATES_DaG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique compounds with a \"measured\" method have a regulatory relationship of upregulating with any gene?", "output": "MATCH (g:Compound { method: \"measured\" })-[r:UPREGULATES_CuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct genes that participate in a cellular component according to the \"NCBI gene2go\" database?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of unique genes from the data source \"NCBI gene2go\" that are connected to the cellular components?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct compounds, licensed as CC0 1.0, have connections indicating they treat diseases?", "output": "MATCH (g:Compound { license: \"CC0 1.0\" })-[r:TREATS_CtD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of distinct genes that participate in cellular components according to the NCBI gene2go source?", "output": "MATCH (g:Gene { source: \"NCBI gene2go\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of different genes, licensed under \"CC BY 4.0\", that are associated with cellular components?", "output": "MATCH (g:Gene { license: \"CC BY 4.0\" })-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different diseases categorized as CC0 1.0 that are involved in upregulating genes?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of distinct compounds with the \"CC BY-NC 4.0\" license that are involved in binding with genes?", "output": "MATCH (g:Compound { license: \"CC BY-NC 4.0\" })-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count how many different diseases, licensed under \"CC0 1.0\", are linked to symptoms?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:PRESENTS_DpS]->(m:Symptom) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of different compounds identified in PharmacotherapyDB that have relationships indicating they treat diseases?", "output": "MATCH (g:Compound { source: \"PharmacotherapyDB\" })-[r:TREATS_CtD]->(m:Disease) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of compounds, each licensed with \"CC BY-SA 3.0\", that uniquely bind to a gene?", "output": "MATCH (g:Compound { license: \"CC BY-SA 3.0\" })-[r:BINDS_CbG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of distinct CC0 1.0 licensed diseases that have relationships indicating they upregulate genes?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many unique disease nodes, specified by a \"CC0 1.0\" license, exist that are linked to the upregulation of genes?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of distinct gene entities, licensed as \"CC BY 4.0\", that have participation connections to pathways?", "output": "MATCH (g:Gene { license: \"CC BY 4.0\" })-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct disease entities, licensed under \"CC BY 4.0,\" have existing relationships with genes?", "output": "MATCH (g:Disease { license: \"CC BY 4.0\" })-[r:ASSOCIATES_DaG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of different diseases labeled with the CC0 1.0 license that have a relationship of upregulating any gene?", "output": "MATCH (g:Disease { license: \"CC0 1.0\" })-[r:UPREGULATES_DuG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many distinct compounds, identified through the imputed method, are linked to downregulating a gene?", "output": "MATCH (g:Compound { method: \"imputed\" })-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN COUNT(DISTINCT g)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find pharmacologic classes that include \"Depolarizing Blockade\" in their name?", "output": "MATCH (n:PharmacologicClass) WHERE n.name CONTAINS \"Depolarizing Blockade\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have \"and megakaryotyces in obesity\" as part of their name?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"and megakaryotyces in obesity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the pharmacologic classes where the name includes \"Medullary Respiratory Drive.\"", "output": "MATCH (n:PharmacologicClass) WHERE n.name CONTAINS \"Medullary Respiratory Drive\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways contain the phrase \"transporters in lipid homeostasis\" in their name and need to be retrieved?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"transporters in lipid homeostasis\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pathways that include \"5 and GM-CSF signaling\" in their names?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"5 and GM-CSF signaling\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes have a name that includes the term \"Large Intestine Fluid/Electrolyte Secretion\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.name CONTAINS \"Large Intestine Fluid/Electrolyte Secretion\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways are identified with the name segment \"demethylate histones\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"demethylate histones\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes whose descriptions contain the term \"peptidase inhibitor, clade B (ovalbumin), member 11\"?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"peptidase inhibitor, clade B (ovalbumin), member 11\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways contain the term \"Endothelin signaling events\" in their names?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"Endothelin signaling events\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway entries contain the text \"of signaling by CBL\" in their name?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"of signaling by CBL\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve BiologicalProcess entities where the name involves \"regulation of neurofibrillary tangle assembly\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"regulation of neurofibrillary tangle assembly\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have names that include the phrase \"targets in ECM and membrane receptors\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"targets in ECM and membrane receptors\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological processes include \"of gastrin-induced gastric acid secretion\" in their name?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"of gastrin-induced gastric acid secretion\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all gene entries where the description contains the term \"filament associated.\"", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"filament associated\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have a name that contains the phrase \"alphaIIb beta3 signaling\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"alphaIIb beta3 signaling\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways are labeled with names containing the words \"of Intronless Pre-mRNAs\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"of Intronless Pre-mRNAs\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have names that include the phrase \"dependent PI3K/Akt signaling\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"dependent PI3K/Akt signaling\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and list any pathways that have \"B/2 (Secretin family receptors)\" as part of their name?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"B/2 (Secretin family receptors)\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and list all symptoms whose names include the phrase \"Cord Paralysis\"?", "output": "MATCH (n:Symptom) WHERE n.name CONTAINS \"Cord Paralysis\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all pathways with the words \"rhythm pathway\" in their names?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"rhythm pathway\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the pathways whose names incorporate the words \"Secretory Phenotype (SASP)\".", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"Secretory Phenotype (SASP)\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve diseases whose name incorporates the word \"depression\"?", "output": "MATCH (n:Disease) WHERE n.name CONTAINS \"depression\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions describe activities related to acting on carbon-nitrogen bonds in cyclic amides, excluding peptides, within their names?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"activity, acting on carbon-nitrogen (but not peptide) bonds, in cyclic amides\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have a name that contains the text \"PAK dependent Axon repulsion\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"PAK dependent Axon repulsion\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all biological processes with a name that contains the substring \"of acute inflammatory response to non-antigenic stimulus\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"of acute inflammatory response to non-antigenic stimulus\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways can be found whose names include the phrase \"results in viral DNA circles\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"results in viral DNA circles\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways include \"of Sister Chromatid Cohesion\" in their names?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"of Sister Chromatid Cohesion\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions are associated with a name containing \"serine/threonine kinase inhibitor activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"serine/threonine kinase inhibitor activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all molecular functions with the name containing the text \"4-alpha-N-acetylglucosaminyltransferase activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"4-alpha-N-acetylglucosaminyltransferase activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all BiologicalProcess nodes where the name includes \"to inosine editing.\"", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"to inosine editing\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Are there any pathways with the name containing \"Strand Synthesis\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"Strand Synthesis\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions have names that feature 'dismutase copper chaperone activity'?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"dismutase copper chaperone activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways related to \"C (ascorbate) metabolism\" can be found in the database?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"C (ascorbate) metabolism\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have names that contain the words \"segmental glomerulosclerosis\"?", "output": "MATCH (n:Disease) WHERE n.name CONTAINS \"segmental glomerulosclerosis\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways are identified by having \"transporters\" in their names?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"transporters\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I identify symptoms whose names include the word \"Syndrome\"?", "output": "MATCH (n:Symptom) WHERE n.name CONTAINS \"Syndrome\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find molecular functions with \"3'-splice site binding\" in their names?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"3'-splice site binding\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components have a name that includes the phrase \"phosphate diphosphokinase complex\"?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"phosphate diphosphokinase complex\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have a description that includes the term \"LOC286063\" in their details?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"LOC286063\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many biological processes have names containing \"of binding of sperm to zona pellucida\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"of binding of sperm to zona pellucida\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes whose descriptions feature the word \"anhydrase\".", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"anhydrase\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms are labeled with names that contain \"Thrombotic Thrombocytopenic\"?", "output": "MATCH (n:Symptom) WHERE n.name CONTAINS \"Thrombotic Thrombocytopenic\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all genes with descriptions that reference \"ribosomal protein\"?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"ribosomal protein\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways contain the words \"phosphorylation cascade\" within their name in the database?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"phosphorylation cascade\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes described with \"acid phosphatase type 2 domain\" in their description?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"acid phosphatase type 2 domain\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all the pathways whose names mention \"signaling pathway\".", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"signaling pathway\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components have names that include the phrase \"polymerase transcription factor SL1 complex\"?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"polymerase transcription factor SL1 complex\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the biological processes whose names mention \"cell maturation.\"", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"cell maturation\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the disease entities with names that mention \"caries\"?", "output": "MATCH (n:Disease) WHERE n.name CONTAINS \"caries\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the symptoms whose names mention \"Nausea and Vomiting.\"", "output": "MATCH (n:Symptom) WHERE n.name CONTAINS \"Nausea and Vomiting\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions contain \"hydratase activity\" in their name?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"hydratase activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all symptoms where their names include \"Hemorrhage\"?", "output": "MATCH (n:Symptom) WHERE n.name CONTAINS \"Hemorrhage\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy entries have \"papilla\" as part of their name?", "output": "MATCH (n:Anatomy) WHERE n.name CONTAINS \"papilla\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function entities include \"nucleobase transmembrane transporter activity\" in their name?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"nucleobase transmembrane transporter activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What molecular functions have names that include the phrase \"ester transmembrane transporter activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"ester transmembrane transporter activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological processes related to cardiac muscle tissue development are present in the database?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"cardiac muscle tissue development\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes have \"Acids\" as part of their name?", "output": "MATCH (n:PharmacologicClass) WHERE n.name CONTAINS \"Acids\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have names that feature the term \"cell surface interactions\"?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"cell surface interactions\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are associated with a description that includes \"(Asp-Glu-Ala-Asp)\"?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"(Asp-Glu-Ala-Asp)\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have descriptions that include \"LOC102724427\" within their information?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"LOC102724427\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes whose description mentions \"domain containing\".", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"domain containing\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What symptoms in the database have names that include the term \"Palsy\"?", "output": "MATCH (n:Symptom) WHERE n.name CONTAINS \"Palsy\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways that include \"forward signaling\" in their names can be found in the database?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"forward signaling\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find cellular components with \"complex\" in their name.", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"complex\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components have names that include the term \"dense granule membrane\"?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"dense granule membrane\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the cellular components that include \"myosin complex\" in their name?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"myosin complex\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the cellular components with names featuring the term \"complex.\"", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"complex\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms have \"Apparent Life-Threatening Event\" as part of their name?", "output": "MATCH (n:Symptom) WHERE n.name CONTAINS \"Apparent Life-Threatening Event\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve genes that have \"biogenesis factor\" in their description field?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"biogenesis factor\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function entries contain \"component C3b binding\" within their names?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"component C3b binding\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular component nodes that include \"ubiquitin ligase complex\" somewhere in their name.", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"ubiquitin ligase complex\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have \"disorder\" in their names according to the database records?", "output": "MATCH (n:Disease) WHERE n.name CONTAINS \"disorder\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I list biological processes with names that mention \"arginylation\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"arginylation\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all anatomy-related entries where the name contains the term \"joint\"?", "output": "MATCH (n:Anatomy) WHERE n.name CONTAINS \"joint\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms listed in the system have names that encompass the term \"Obesity\"?", "output": "MATCH (n:Symptom) WHERE n.name CONTAINS \"Obesity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find biological processes whose names contain the phrase \"of MAPKK activity\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"of MAPKK activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological processes have names that include the phrase \"extension involved in axis elongation\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"extension involved in axis elongation\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways contain the specific name segment \"Alpha Pathway,\" and what are the properties of such pathways?", "output": "MATCH (n:Pathway) WHERE n.name CONTAINS \"Alpha Pathway\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes labeled as \"MolecularFunction\" contain \"light chain kinase activity\" in their name?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"light chain kinase activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which components are identified as part of the mitochondrial outer membrane in their names?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"component of mitochondrial outer membrane\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes labeled as CellularComponent contain \"vesicle membrane\" in their name?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"vesicle membrane\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all biological process nodes where the term \"to oxygen radical\" appears in their name.", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"to oxygen radical\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find anatomy entities where their name features the word \"tissue\"?", "output": "MATCH (n:Anatomy) WHERE n.name CONTAINS \"tissue\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components with names that feature \"filament\".", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"filament\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which MolecularFunction entities contain the term \"receptor binding\" within their names?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"receptor binding\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all nodes with the label \"SideEffect\" that have names containing \"texture abnormal.\"", "output": "MATCH (n:SideEffect) WHERE n.name CONTAINS \"texture abnormal\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find Gene nodes with descriptions that mention \"rich 14\"?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"rich 14\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify diseases from the database that have names containing \"cancer\"?", "output": "MATCH (n:Disease) WHERE n.name CONTAINS \"cancer\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which CellularComponent entities have a name that contains the words \"locus body\"?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"locus body\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which elements in the CellularComponent category have \"cytoplasm\" as a part of their name?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"cytoplasm\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the biological processes that have \"lobe development\" in their name?", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"lobe development\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all molecular functions that have the term \"region DNA binding\" within their name attribute.", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"region DNA binding\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions have names that mention \"inhibitor activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"inhibitor activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the anatomical entities whose names include the term \"gland\"?", "output": "MATCH (n:Anatomy) WHERE n.name CONTAINS \"gland\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions have names that include the term \"reductase activity\"?", "output": "MATCH (n:MolecularFunction) WHERE n.name CONTAINS \"reductase activity\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components whose names feature the term \"spine membrane\".", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"spine membrane\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene entries have descriptions containing the word \"and\"?", "output": "MATCH (n:Gene) WHERE n.description CONTAINS \"and\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all side effect entries where the name includes \"joint syndrome.\"", "output": "MATCH (n:SideEffect) WHERE n.name CONTAINS \"joint syndrome\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the 'BiologicalProcess' entities that have \"catabolic process\" mentioned within their names.", "output": "MATCH (n:BiologicalProcess) WHERE n.name CONTAINS \"catabolic process\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the CellularComponent nodes with a name containing \"surface furrow\"?", "output": "MATCH (n:CellularComponent) WHERE n.name CONTAINS \"surface furrow\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the pathway labeled \"Na+-dependent glucose transporters\"?", "output": "MATCH (n:Pathway { name: \"Na+-dependent glucose transporters\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find and return all pathways with the \"CC BY 4.0\" license attribute.", "output": "MATCH (n:Pathway { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available for the pathway called \"Hypoxia-mediated EMT and Stemness\"?", "output": "MATCH (n:Pathway { name: \"Hypoxia-mediated EMT and Stemness\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the details of the pathway with the name \"Signaling by FGFR in disease\"?", "output": "MATCH (n:Pathway { name: \"Signaling by FGFR in disease\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pathway nodes where the source is specified as WikiPathways.", "output": "MATCH (n:Pathway { source: \"WikiPathways\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the details of the molecular function that has the name \"polyprenyltransferase activity\"?", "output": "MATCH (n:MolecularFunction { name: \"polyprenyltransferase activity\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the molecular function named \"peptide-methionine (R)-S-oxide reductase activity\"?", "output": "MATCH (n:MolecularFunction { name: \"peptide-methionine (R)-S-oxide reductase activity\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would I query to find information about pharmacologic classes with the specified license of \"CC BY 4.0\"?", "output": "MATCH (n:PharmacologicClass { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the compound whose InChI is \"InChI=1S/C21H20Cl2O3/c1-21(2)17(12-18(22)23)19(21)20(24)25-13-14-7-6-10-16(11-14)26-15-8-4-3-5-9-15/h3-12,17,19H,13H2,1-2H3\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C21H20Cl2O3/c1-21(2)17(12-18(22)23)19(21)20(24)25-13-14-7-6-10-16(11-14)26-15-8-4-3-5-9-15/h3-12,17,19H,13H2,1-2H3\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return the Pathway that has the identifier \"PC7_3326\"?", "output": "MATCH (n:Pathway { identifier: \"PC7_3326\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What specific gene with the given description \"glutamic pyruvate transaminase (alanine aminotransferase) 2\" does this query aim to find?", "output": "MATCH (n:Gene { description: \"glutamic pyruvate transaminase (alanine aminotransferase) 2\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene node associated with the description \"neurotrophic tyrosine kinase, receptor, type 3.\"", "output": "MATCH (n:Gene { description: \"neurotrophic tyrosine kinase, receptor, type 3\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you locate the BiologicalProcess entity that has the name \"bacterial-type flagellum-dependent cell motility\"?", "output": "MATCH (n:BiologicalProcess { name: \"bacterial-type flagellum-dependent cell motility\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information exists for the pathway labeled with the identifier \"PC7_6877\"?", "output": "MATCH (n:Pathway { identifier: \"PC7_6877\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the Symptom node that has the URL property set to \"http://identifiers.org/mesh/D065635\"?", "output": "MATCH (n:Symptom { url: \"http://identifiers.org/mesh/D065635\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the pathway node with the name \"ATF4 activates genes\"?", "output": "MATCH (n:Pathway { name: \"ATF4 activates genes\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all compounds with the licensing terms \"CC BY-NC 4.0\" in the dataset.", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the information associated with the gene labeled as a \"ring finger protein 41, E3 ubiquitin protein ligase\"?", "output": "MATCH (n:Gene { description: \"ring finger protein 41, E3 ubiquitin protein ligase\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the data entries for biological processes that are licensed as \"CC BY 4.0\"?", "output": "MATCH (n:BiologicalProcess { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is associated with the Pathway named \"Signaling by Activin\"?", "output": "MATCH (n:Pathway { name: \"Signaling by Activin\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all cellular components where the license is specified as \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which properties are associated with the disease that has the identifier \"DOID:14268\" in our database?", "output": "MATCH (n:Disease { identifier: \"DOID:14268\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the details of the Gene node that has the specific URL \"http://identifiers.org/ncbigene/388951\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/388951\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene entries have the property indicating a CC0 1.0 license?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return the gene node that matches the URL \"http://identifiers.org/ncbigene/5634\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/5634\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you find the 'Symptom' node identified by the URL \"http://identifiers.org/mesh/D007040\"?", "output": "MATCH (n:Symptom { url: \"http://identifiers.org/mesh/D007040\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What molecular function corresponds to the name \"interleukin-27 receptor binding\" in the dataset?", "output": "MATCH (n:MolecularFunction { name: \"interleukin-27 receptor binding\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is returned for the Pathway node labeled with the identifier \"PC7_7767\"?", "output": "MATCH (n:Pathway { identifier: \"PC7_7767\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the 'SideEffect' node that corresponds to the URL \"http://identifiers.org/umls/C1859270\"?", "output": "MATCH (n:SideEffect { url: \"http://identifiers.org/umls/C1859270\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all Pathway entities that are sourced from \"Reactome via Pathway Commons.\"", "output": "MATCH (n:Pathway { source: \"Reactome via Pathway Commons\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all side effect entries that have a license of \"CC BY-NC-SA 4.0\".", "output": "MATCH (n:SideEffect { license: \"CC BY-NC-SA 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the specific Pathway node with the identifier \"PC7_1543\" in the database?", "output": "MATCH (n:Pathway { identifier: \"PC7_1543\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the molecular function entity that corresponds to the URL \"http://purl.obolibrary.org/obo/GO_0016151\".", "output": "MATCH (n:MolecularFunction { url: \"http://purl.obolibrary.org/obo/GO_0016151\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the Pathway entity labeled with the identifier \"PC7_3060\"?", "output": "MATCH (n:Pathway { identifier: \"PC7_3060\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all gene records that possess the CC0 1.0 licensing identifier.", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is retrieved about the gene with the URL \"http://identifiers.org/ncbigene/152518\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/152518\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve all pharmacologic class information sourced specifically from the FDA via DrugCentral?", "output": "MATCH (n:PharmacologicClass { source: \"FDA via DrugCentral\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the node with the name \"transcription factor activity, RNA polymerase II basal transcription factor binding\" classified under MolecularFunction?", "output": "MATCH (n:MolecularFunction { name: \"transcription factor activity, RNA polymerase II basal transcription factor binding\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one find the MolecularFunction entity that has \"GO:0005501\" as its identifier?", "output": "MATCH (n:MolecularFunction { identifier: \"GO:0005501\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find \"Anatomy\" entities where the license is set to \"CC BY 3.0\"?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me how to return the anatomy information for the \"sacro-iliac joint\"?", "output": "MATCH (n:Anatomy { name: \"sacro-iliac joint\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all gene entities that are licensed under \"CC0 1.0\".", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all CellularComponent nodes where the license is specified as \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the specific 'CellularComponent' node associated with the URL \"http://purl.obolibrary.org/obo/GO_0045281\"?", "output": "MATCH (n:CellularComponent { url: \"http://purl.obolibrary.org/obo/GO_0045281\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the cellular component that corresponds to the URL \"http://purl.obolibrary.org/obo/GO_0032593\"?", "output": "MATCH (n:CellularComponent { url: \"http://purl.obolibrary.org/obo/GO_0032593\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the biological process that corresponds to the specific URL \"http://purl.obolibrary.org/obo/GO_0048387\"?", "output": "MATCH (n:BiologicalProcess { url: \"http://purl.obolibrary.org/obo/GO_0048387\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the pharmacologic class labeled as \"Phosphodiesterase 5 Inhibitors\" in the database?", "output": "MATCH (n:PharmacologicClass { name: \"Phosphodiesterase 5 Inhibitors\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the diseases with the license labeled as \"CC BY 3.0\".", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the Gene nodes that have a license property equal to \"CC0 1.0\"?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the biological process that corresponds to the URL \"http://purl.obolibrary.org/obo/GO_1902966\"?", "output": "MATCH (n:BiologicalProcess { url: \"http://purl.obolibrary.org/obo/GO_1902966\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the node labeled as 'SideEffect' that has the specific URL \"http://identifiers.org/umls/C0016508\"?", "output": "MATCH (n:SideEffect { url: \"http://identifiers.org/umls/C0016508\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve information about pathways that are available under a CC0 1.0 license?", "output": "MATCH (n:Pathway { license: \"CC0 1.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the CellularComponent nodes provided by the Gene Ontology source?", "output": "MATCH (n:CellularComponent { source: \"Gene Ontology\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the properties and data associated with the gene identified as \"VN1R5\"?", "output": "MATCH (n:Gene { name: \"VN1R5\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which BiologicalProcess entities in the database are associated with the \"CC BY 4.0\" licensing?", "output": "MATCH (n:BiologicalProcess { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the SideEffect node associated with the URL \"http://identifiers.org/umls/C0019917\"?", "output": "MATCH (n:SideEffect { url: \"http://identifiers.org/umls/C0019917\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all nodes representing MolecularFunction with the source set to \"Gene Ontology.\"", "output": "MATCH (n:MolecularFunction { source: \"Gene Ontology\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the pathways that have the source labeled as \"Reactome via Pathway Commons\" in the database?", "output": "MATCH (n:Pathway { source: \"Reactome via Pathway Commons\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we fetch all properties of the Gene node that has an identifier of 9703 from the database?", "output": "MATCH (n:Gene { identifier: 9703 }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the details of all CellularComponent entities with the license \"CC BY 4.0\"?", "output": "MATCH (n:CellularComponent { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the node labeled \"SideEffect\" with the property URL set to \"http://identifiers.org/umls/C0162323\"?", "output": "MATCH (n:SideEffect { url: \"http://identifiers.org/umls/C0162323\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What details can be retrieved about the cellular component known as the \"RNA polymerase I transcription factor complex\"?", "output": "MATCH (n:CellularComponent { name: \"RNA polymerase I transcription factor complex\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of all pathways that have a license of \"CC BY 4.0\" in the database?", "output": "MATCH (n:Pathway { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you fetch the anatomical node where the name property is 'sternoclavicular joint'?", "output": "MATCH (n:Anatomy { name: \"sternoclavicular joint\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What details can we retrieve about the compound with the identifier \"DB04948\" from the database?", "output": "MATCH (n:Compound { identifier: \"DB04948\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the details of the compound that has the InChIKey \"RMUCZJUITONUFY-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=RMUCZJUITONUFY-UHFFFAOYSA-N\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify cellular components attributed to \"Gene Ontology\"?", "output": "MATCH (n:CellularComponent { source: \"Gene Ontology\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me the BiologicalProcess nodes carrying the \"CC BY 4.0\" license value?", "output": "MATCH (n:BiologicalProcess { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available about the molecular function named \"fatty-acyl-CoA synthase activity\" in the database?", "output": "MATCH (n:MolecularFunction { name: \"fatty-acyl-CoA synthase activity\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have a license labeled \"CC BY-NC 4.0\" in their properties?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can be retrieved about the cellular component associated with the URL \"http://purl.obolibrary.org/obo/GO_1903095\"?", "output": "MATCH (n:CellularComponent { url: \"http://purl.obolibrary.org/obo/GO_1903095\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all cellular components with a license specified as \"CC BY 4.0\"?", "output": "MATCH (n:CellularComponent { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy entity corresponds to the mesh ID \"D000302\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D000302\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components have been sourced from the Gene Ontology according to the database?", "output": "MATCH (n:CellularComponent { source: \"Gene Ontology\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy entry corresponds to the identifier \"UBERON:0002165\"?", "output": "MATCH (n:Anatomy { identifier: \"UBERON:0002165\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can you retrieve about the gene named \"VPS13D\" from the database?", "output": "MATCH (n:Gene { name: \"VPS13D\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy items are associated with the CC BY 3.0 license?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the BiologicalProcess nodes that are associated with the \"CC BY 4.0\" license?", "output": "MATCH (n:BiologicalProcess { license: \"CC BY 4.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic classes are available in the database that have been sourced from the FDA through DrugCentral?", "output": "MATCH (n:PharmacologicClass { source: \"FDA via DrugCentral\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can be retrieved about the gene with the identifier 80740?", "output": "MATCH (n:Gene { identifier: 80740 }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve gene nodes where the license is specified as CC0 1.0?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function is associated with the identifier \"GO:0015277\" in the data?", "output": "MATCH (n:MolecularFunction { identifier: \"GO:0015277\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the node labeled as 'Compound' that has the InChI property set to a specific value of \"InChI=1S/C39H43N3O11S/c1-16-9-20-10-22-37(46)42-23-13-50-38(47)39(21-12-25(48-5)24(44)11-19(21)7-8-40-39)14-54-36(30(42)29(41(22)4)26(20)31(45)32(16)49-6)28-27(23)35-34(51-15-52-35)17(2)33(28)53-18(3)43/h9,11-12,22-23,29-30,36-37,40,44-46H,7-8,10,13-15H2,1-6H3/t22-,23-,29+,30+,36+,37-,39+/m0/s1\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C39H43N3O11S/c1-16-9-20-10-22-37(46)42-23-13-50-38(47)39(21-12-25(48-5)24(44)11-19(21)7-8-40-39)14-54-36(30(42)29(41(22)4)26(20)31(45)32(16)49-6)28-27(23)35-34(51-15-52-35)17(2)33(28)53-18(3)43/h9,11-12,22-23,29-30,36-37,40,44-46H,7-8,10,13-15H2,1-6H3/t22-,23-,29+,30+,36+,37-,39+/m0/s1\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the disease with the identifier \"DOID:90\" in the database?", "output": "MATCH (n:Disease { identifier: \"DOID:90\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all nodes that are associated with the concept of MolecularFunction and are sourced from \"Gene Ontology.\"", "output": "MATCH (n:MolecularFunction { source: \"Gene Ontology\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the Compound node that contains the URL \"http://www.drugbank.ca/drugs/DB01181\".", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB01181\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Please show me the data associated with the biological process called \"ESCRT III complex disassembly\".", "output": "MATCH (n:BiologicalProcess { name: \"ESCRT III complex disassembly\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the disease entity associated with \"DOID:418\"?", "output": "MATCH (n:Disease { identifier: \"DOID:418\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the gene with the name \"PRAC1\" in the database?", "output": "MATCH (n:Gene { name: \"PRAC1\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which properties are associated with the gene node that has an identifier of 3276?", "output": "MATCH (n:Gene { identifier: 3276 }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene is selected and returned from the database when its identifier equals 94137?", "output": "MATCH (n:Gene { identifier: 94137 }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you find the cellular component labeled with \"GO:0000110\"?", "output": "MATCH (n:CellularComponent { identifier: \"GO:0000110\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the node labeled as \"BiologicalProcess\" that has the URL property with the value \"http://purl.obolibrary.org/obo/GO_0007020\"?", "output": "MATCH (n:BiologicalProcess { url: \"http://purl.obolibrary.org/obo/GO_0007020\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the molecular function with the URL \"http://purl.obolibrary.org/obo/GO_0004992\"?", "output": "MATCH (n:MolecularFunction { url: \"http://purl.obolibrary.org/obo/GO_0004992\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have their chromosome attribute set to \"14\"?", "output": "MATCH (n:Gene { chromosome: \"14\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can you retrieve about the biological process labeled with the identifier \"GO:0006554\"?", "output": "MATCH (n:BiologicalProcess { identifier: \"GO:0006554\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes labeled with a \"CC0 1.0\" license in the database?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the molecular function associated with the identifier \"GO:0008374\"?", "output": "MATCH (n:MolecularFunction { identifier: \"GO:0008374\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the characteristics and properties of the gene \"CNTN6\" in the database?", "output": "MATCH (n:Gene { name: \"CNTN6\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the cellular component associated with \"GO:0071144\"?", "output": "MATCH (n:CellularComponent { identifier: \"GO:0071144\" }) RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find symptoms with identifiers that commence with \"D02\"?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D02\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have an identifier starting with \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have an identifier starting with the sequence \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the pathways that have identifiers starting with \"PC7\".", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pathways where the identifier begins with \"PC7\".", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What Pathway entries have identifiers that commence with \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all symptoms with identifiers that commence with \"D01\".", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D01\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have an identifier that begins with \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all pathways with identifiers that start with the prefix \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the anatomy entities whose identifiers start with \"UBE\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UBE\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the pharmacologic classes where the identifier begins with \"N00\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways have an identifier that begins with the string \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the symptoms that have an identifier beginning with \"D01\"?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D01\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List any symptoms whose identifier starts with \"D00\"?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all pathways that have an identifier starting with \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes have an identifier starting with \"N00\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find MolecularFunction entries whose identifiers start with \"GO:\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the symptoms whose identifiers begin with \"D00\"?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic classes have an identifier that begins with \"N00\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all pathways where the identifier starts with the prefix \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which Pathway entities are labeled with identifiers that start with \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What CellularComponent entries exist whose identifier values begin with the string \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the pharmacologic classes where the identifier starts with the sequence \"N00\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all pharmacologic classes in the database where the identifier begins with \"N00\".", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find biological processes whose identifiers commence with \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pathways that have identifiers beginning with \"PC7\" in the database?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms have identifiers that begin with \"D01\" in the database?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D01\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic classes have identifiers that begin with \"N00\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the cellular components whose identifier values start with \"GO:\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I list the pathway nodes whose identifiers start with \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the Pathway nodes where the identifier begins with \"PC7\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC7\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy-related items have identifiers that commence with \"UBE\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UBE\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What symptom records have an identifier that begins with \"D01\"?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D01\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all cellular components with identifiers that begin with the string \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pathways whose identifiers begin with \"WP1\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"WP1\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find biological processes whose identifiers begin with the string \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all cellular components whose identifier starts with \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all instances of cellular components where the identifier field starts with \"GO:\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all cellular components that have identifiers beginning with \"GO:\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have identifiers that start with the string \"WP2\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"WP2\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find compound entries with identifiers that initiate with \"DB0\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find cellular components that have their identifiers starting with \"GO:\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all the cellular components whose identifiers start with the prefix \"GO:\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What anatomical entities have identifiers that begin with \"UBE\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UBE\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all symptoms whose identifiers begin with \"D05\".", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D05\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all the entries labeled as 'Compound' where the identifier begins with \"DB0\".", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms are listed with an identifier prefix \"D00\"?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve pathways with identifiers that commence with \"WP1\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"WP1\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all BiologicalProcess entities whose identifiers start with \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the symptoms where their identifier field starts with \"D00\"?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What symptoms, identified by an identifier that starts with \"D00\", can be found in the database?", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the compounds with identifiers that commence with \"DB0\".", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which instances of BiologicalProcess have their identifier attribute beginning with \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What anatomy records are identified with an identifier that starts with \"UBE\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UBE\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve all compounds where the identifier starts with \"DB0\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the anatomy nodes where their identifiers begin with \"UBE\".", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UBE\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me the molecular functions where the identifier starts with \"GO:\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all cellular component nodes where the identifier starts with \"GO:\" and provide their details.", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find cellular component nodes with an identifier that begins with \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the compounds whose identifier attribute starts with \"DB0\".", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all biological processes where the identifier starts with \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the cellular components that possess an identifier beginning with 'GO:'?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all symptom entries where the identifier begins with \"D00\".", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find compounds with identifiers that commence with \"DB0\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components have an identifier prefix of \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve all cellular components whose identifiers begin with \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find biological processes with identifiers that start with \"GO:\" in the database?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components have an identifier that begins with \"GO:\" according to this query?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the pharmacologic classes whose identifier strings commence with \"N00\". What do these classes represent?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N00\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological process records can be found that start their identifier with \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the cellular components whose identifiers begin with the sequence \"GO:\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the cellular component entities that have identifiers starting with \"GO:\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find biological process entities where their identifiers begin with 'GO:'?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components have identifiers that begin with \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the SideEffect nodes for which the identifier field starts with \"C01\".", "output": "MATCH (n:SideEffect) WHERE n.identifier STARTS WITH \"C01\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the Anatomy nodes whose identifiers begin with the string \"UBE\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UBE\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the biological processes where the identifier starts with \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which MolecularFunction entries have identifiers that start with the prefix \"GO:\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds in the database have an identifier that begins with \"DB0\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds in the database have an identifier that begins with \"DB0\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all MolecularFunction entities whose identifier field begins with \"GO:\".", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological process entries have identifiers that start with \"GO:\" in the database?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components whose identifier field starts with \"GO:\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological processes have identifiers starting with the prefix \"GO:\" and how can I list them?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all molecular function items that have identifiers starting with \"GO:\".", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all cellular components where their identifier starts with the prefix \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have an identifier that begins with \"DB0\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all compound entries where the identifier starts with \"DB0\".", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which entries labeled 'BiologicalProcess' have identifiers that begin with the text \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all MolecularFunction entries where the identifier starts with \"GO:\" and list them?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all entries in the BiologicalProcess category with identifiers beginning with \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological processes can be found in the database that have identifiers starting with \"GO:\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all compounds where their identifiers begin with the characters \"DB0\".", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return all CellularComponent nodes where the identifier begins with \"GO:\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the molecular functions whose identifiers start with \"GO:\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all BiologicalProcess entities whose identifiers begin with \"GO:\".", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the molecular function entries with identifiers that start with the prefix \"GO:\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have an identifier that starts with \"DB0\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the compounds whose identifiers start with the string \"DB0\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions have identifiers that commence with the string \"GO:\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO:\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all instances of BiologicalProcess where the license property ends in \"4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pharmacologic classes that have licenses ending in \"4.0\".", "output": "MATCH (n:PharmacologicClass) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components that possess a license string finishing with '4.0'.", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all MolecularFunction entities with a license suffix of \"4.0\".", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all MolecularFunction entities whose license information terminates with the suffix \"4.0\".", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pathways with licenses that have the suffix \"4.0\".", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve cellular components where the license is suffixed by \"4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve every SideEffect node where the license field concludes with the characters \"4.0\".", "output": "MATCH (n:SideEffect) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve pathways that possess a license number finishing with \"4.0.\"", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all symptom entries with license numbers that finish with \"1.0\".", "output": "MATCH (n:Symptom) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find genes where the license field terminates with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the gene entries that have their license finishing with \"1.0\".", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I retrieve pathways that have a license string terminating in \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components with licenses that end in \"4.0\"; what are they?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all cellular components with licenses ending in \"4.0\". What are they?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve biological processes whose license strings finish with '4.0'?", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all pathway nodes that have their licenses ending in \"4.0\".", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve molecular functions whose licensing detail concludes with the string \"4.0\".", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list genes whose license attribute ends in \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the biological processes where the licensing information finishes with \"4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all the genes whose license number concludes with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all biological processes where the license string ends with \"4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find gene nodes where the license attribute terminates with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the genes whose licenses end in the suffix \"1.0.\"", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all biological process nodes with licenses that conclude with \"4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all pathways whose license attribute concludes with the specific version number \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List all CellularComponent nodes where the license designation terminates with \"4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the Pathway nodes where the license attribute terminates with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all the nodes labeled as MolecularFunction where the license finishes with \"4.0\".", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find diseases that possess a license number ending in \"3.0\"?", "output": "MATCH (n:Disease) WHERE n.license ENDS WITH \"3.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the pharmacologic classes with a license number that finishes with \"4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all compounds with licenses that end in '4.0'?", "output": "MATCH (n:Compound) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all molecular functions whose licenses conclude with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find cellular components where the license string ends with \"4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the pathway nodes where the license attribute concludes with '4.0'?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all pharmacologic class nodes in the database whose licenses terminate with \"4.0\".", "output": "MATCH (n:PharmacologicClass) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve molecular function nodes where the license field ends in \"4.0\".", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all pathways whose license information ends with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve biological processes that possess a license suffix of \"4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all cellular components where the license ends with \"4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all anatomy entities where the license concludes with \"3.0\"?", "output": "MATCH (n:Anatomy) WHERE n.license ENDS WITH \"3.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you fetch all the pathways whose license field concludes with the version \"1.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes have been assigned a license ending in \"4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the nodes representing biological processes whose licenses finish with \"4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the pharmacologic class entities whose license attribute finishes with \"4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all compounds with a license that ends in \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find cellular component entities whose license field ends in \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve each Pathway node where the license field's value ends in \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all gene nodes with a license that terminates in \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the cellular components with licenses that finish with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all Compound entities where the license string is suffixed by '4.0'?", "output": "MATCH (n:Compound) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and list the cellular components whose 'license' attribute is suffixed with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all pathway nodes where the license string concludes with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the pathways whose license field terminates with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all pharmacologic classes whose license information concludes with \"4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all pathway nodes where the license ends with the suffix \"4.0.\"", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all pathways whose license strings finish with \"3.0\".", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"3.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify genes that possess licenses terminating in \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I want to find molecular functions whose license terms end in '4.0'; can you help?", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify molecular functions whose license attribute finishes with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the molecular function nodes with licenses that finish with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which entries labeled as Anatomy have a license number ending in \"3.0\"?", "output": "MATCH (n:Anatomy) WHERE n.license ENDS WITH \"3.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all SideEffect nodes whose license field concludes with \"4.0\"?", "output": "MATCH (n:SideEffect) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which entries in the SideEffect category have licenses terminating in \"4.0\"?", "output": "MATCH (n:SideEffect) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the pathways whose license information concludes with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all MolecularFunction nodes whose license attribute concludes with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes in the database have a license version that ends with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all gene nodes whose license string concludes with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all Compound entities whose license numbers terminate with \"4.0\".", "output": "MATCH (n:Compound) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all biological processes in the database where the license information is suffixed by \"4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which entries in the MolecularFunction category have licenses terminating with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components have a license number that ends with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the CellularComponent entities whose license values terminate with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components have licenses that end with the version number \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the biological processes whose license attribute concludes with \"4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all pathways that have licenses ending in \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find anatomy nodes where the end of their license attribute is \"3.0\"?", "output": "MATCH (n:Anatomy) WHERE n.license ENDS WITH \"3.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components possess a license that terminates in \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all gene nodes where the license attribute concludes with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the nodes labeled as 'PharmacologicClass' where the license ends with \"4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which records are retrieved for pathways whose license attributes finish with \"1.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes whose license ends with version \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the nodes labeled as 'CellularComponent' where the license attribute ends in \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the cellular components whose license information finishes with the string \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components have licenses that end in \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify cellular components with license terms finishing in \"4.0\".", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have license fields terminating in \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease entries have a \"3.0\"-ending in their license information?", "output": "MATCH (n:Disease) WHERE n.license ENDS WITH \"3.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all the genes that have licenses ending in \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license ENDS WITH \"1.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the SideEffect entities whose license numbers conclude with \"4.0\"?", "output": "MATCH (n:SideEffect) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Show all compounds that possess a license number ending with \"4.0\".", "output": "MATCH (n:Compound) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List all biological processes that possess licenses that terminate with \"4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the pathways whose license versions conclude with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have a license that ends with the version \"3.0\"?", "output": "MATCH (n:Disease) WHERE n.license ENDS WITH \"3.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways have a license number that terminates with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all Pathway nodes whose licensing information terminates with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the biological process nodes where the license attribute finishes with \"4.0\".", "output": "MATCH (n:BiologicalProcess) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the cellular components whose license descriptions terminate with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve molecular function nodes that have a license number finishing with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the pathway nodes whose license attribute concludes with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license ENDS WITH \"4.0\" RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all gene entities whose license numbers start with \"CC\" and end in \"1.0\".", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of molecular functions with licenses that start with \"CC\" and end with \"4.0.\"", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the query to retrieve names of anatomy objects whose license starts with \"CC\" and ends with \"3.0\"?", "output": "MATCH (n:Anatomy) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return the names of pharmacologic classes where the license starts with \"CC\" and ends with \"4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all symptoms that possess licenses starting with \"CC\" and ending with \"1.0\".", "output": "MATCH (n:Symptom) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of compounds that possess licenses beginning with \"CC\" and terminating with \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the names of pathways whose licenses both start with \"CC\" and end with \"3.0\"?", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find gene names whose license information starts with \"CC\" and ends with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all genes that possess a license prefix of \"CC\" and a suffix of \"1.0\".", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the database, retrieve the names of symptoms with licenses that commence with \"CC\" and finish with \"1.0\".", "output": "MATCH (n:Symptom) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I list the names of pathways whose identifiers begin with \"PC\" and end with \"81\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"81\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the names of cellular components whose license codes begin with \"CC\" and end in \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the molecular function names where the license property starts with \"CC\" and ends with \"4.0\".", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of all gene entities whose license values start with \"CC\" and end with \"1.0\".", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathway names are returned when searching for identifiers that have \"WP\" at the beginning and \"31\" at the end?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"WP\" AND n.identifier ENDS WITH \"31\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the names of compounds with licenses that begin with \"CC\" and end with \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pharmacologic class names where the identifier starts with \"N0\" and finishes with \"23\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N0\" AND n.identifier ENDS WITH \"23\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of pathways with identifiers that begin with \"PC\" and end with the digits \"40\".", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"40\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the pharmacologic class entities where their identifiers start with \"N0\" and end in \"34\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.identifier STARTS WITH \"N0\" AND n.identifier ENDS WITH \"34\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of cellular component names that are associated with licenses formatted to begin with \"CC\" and end with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names correspond to licenses that begin with \"CC\" and end with version \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of anatomy items where the license starts with \"CC\" and finishes with \"3.0\"?", "output": "MATCH (n:Anatomy) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the names of cellular components with identifiers starting with \"GO\" and ending with \"34\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"34\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of all molecular function nodes where the license property starts with \"CC\" and finishes with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all symptoms where the identifier begins with \"D0\" and concludes with \"69.\"", "output": "MATCH (n:Symptom) WHERE n.identifier STARTS WITH \"D0\" AND n.identifier ENDS WITH \"69\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all cellular components where the license code starts with \"CC\" and ends with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the molecular function names where the license starts with \"CC\" and finishes with \"4.0\".", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the gene names linked to licenses that commence with \"CC\" and terminate with \"1.0\".", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the gene names whose licenses begin with \"CC\" and conclude with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the pathway names that hold licenses beginning with \"CC\" and finishing with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What anatomy names can be found where their identifier strings start with \"UB\" and end with \"86\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UB\" AND n.identifier ENDS WITH \"86\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the molecular function names whose licenses begin with \"CC\" and conclude with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What molecular function names are associated with licenses that both start with \"CC\" and finish with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names correspond to licenses that start with \"CC\" and finish with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list gene names whose license begins with \"CC\" and concludes with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pathway names where their licenses begin with \"CC\" and conclude with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of pathway names that have licenses beginning with \"CC\" and finishing with \"3.0\"?", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function names are associated with licenses that both start with \"CC\" and end with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of biological processes licensed with codes starting with \"CC\" and ending in \"4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of molecular functions that have a license code starting with \"CC\" and ending with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names correspond to licenses that both start with \"CC\" and finish with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the anatomy names that have licenses starting with \"CC\" and concluding with \"3.0\"?", "output": "MATCH (n:Anatomy) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What molecular function entries possess licenses beginning with the prefix \"CC\" and wrapping up with the suffix \"4.0,\" and what are their respective names?", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names correspond to licenses that commence with \"CC\" and terminate with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of molecular functions that hold a license starting with \"CC\" and ending in \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the anatomy names associated with licenses that start with \"CC\" and finish with \"3.0\".", "output": "MATCH (n:Anatomy) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of pathway nodes whose license information starts with \"CC\" and concludes with \"3.0\"?", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pathway names where the identifier starts with \"PC\" and finishes with \"74\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"74\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of cellular components that have a license code starting with \"CC\" and ending with \"4.0\"?", "output": "MATCH (n:CellularComponent) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of anatomical structures whose identifiers both start with \"UB\" and end with \"05\".", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UB\" AND n.identifier ENDS WITH \"05\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene names associated with licenses that commence with \"CC\" and finish with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of molecular functions that have a license starting with \"CC\" and ending with \"4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the compound names with licenses beginning with \"CC\" and ending with \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names have identifiers that start with \"PC\" and end with \"32\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"32\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the gene names where the license field starts with the letters \"CC\" and ends with the digits \"1.0\".", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of biological processes where the license specification starts as \"CC\" and ends as \"4.0.\"", "output": "MATCH (n:BiologicalProcess) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of all pathways whose licenses commence with \"CC\" and finish with \"3.0.\"", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that have licenses starting with \"CC\" and ending with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pathway names where the license code begins with \"CC\" and concludes with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the biological process names where the license begins with \"CC\" and concludes with \"4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the cellular components that have licenses beginning with \"CC\" and terminating with \"4.0\"? What are their names?", "output": "MATCH (n:CellularComponent) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy items have a license that starts with \"CC\" and finishes with \"3.0,\" and what are their names?", "output": "MATCH (n:Anatomy) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return the names of anatomy nodes that feature a license string commencing with \"CC\" and finishing with \"3.0\"?", "output": "MATCH (n:Anatomy) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the anatomy items whose licenses start with 'CC' and end with '3.0'?", "output": "MATCH (n:Anatomy) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the compound names that match licenses starting with \"CC\" and ending in \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compound names correspond to licenses that commence with \"CC\" and terminate with \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of pathways that have a license starting with \"CC\" and ending with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the molecular function names where the identifier begins with \"GO\" and concludes with \"31\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"31\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of gene nodes whose license property begins with \"CC\" and finishes with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound names correspond to licenses that initiate with \"CC\" and terminate with \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular component names correspond to identifiers prefixed with \"GO\" and suffixed with \"98\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"98\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease names correspond to identifiers that start with \"DO\" and end with \"21\"?", "output": "MATCH (n:Disease) WHERE n.identifier STARTS WITH \"DO\" AND n.identifier ENDS WITH \"21\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I need the names of cellular component entities that have identifiers commencing with \"GO\" and concluding with \"86\".", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"86\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What molecular function names correspond to identifiers that begin with \"GO\" and end with \"42\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"42\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of pathways whose licenses begin with \"CC\" and conclude with \"4.0\"?", "output": "MATCH (n:Pathway) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names correspond to identifiers that both start with \"PC\" and finish with \"81\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"81\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compound names are associated with licenses that start with \"CC\" and end in \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pathway names where the identifier starts with \"PC\" and concludes with \"11\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"11\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function names correspond to identifiers that start with \"GO\" and conclude with \"27\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"27\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the cellular component names that have an identifier starting with \"GO\" and ending with \"27\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"27\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What molecular function names correspond to identifiers that begin with \"GO\" and finish with \"84\"?", "output": "MATCH (n:MolecularFunction) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"84\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of molecular functions whose licenses are prefixed by 'CC' and suffixed by '4.0'.", "output": "MATCH (n:MolecularFunction) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological process names are associated with licenses that commence with \"CC\" and terminate with \"4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names correspond to identifiers that both begin with \"PC\" and finish with \"75\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"75\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names correspond to identifiers that commence with \"GO\" and close with \"85\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"85\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of genes whose license identifiers begin with \"CC\" and conclude with \"1.0\"?", "output": "MATCH (n:Gene) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return the names of anatomy nodes with identifiers that start with \"UB\" and end in \"44\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UB\" AND n.identifier ENDS WITH \"44\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy items whose identifiers start with \"UB\" and end with \"96\"?", "output": "MATCH (n:Anatomy) WHERE n.identifier STARTS WITH \"UB\" AND n.identifier ENDS WITH \"96\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names are associated with identifiers that start with \"WP\" and end with \"73\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"WP\" AND n.identifier ENDS WITH \"73\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I\u2019m looking for biological process names where the identifiers begin with \"GO\" and finish with \"90\". What are they?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"90\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the names of compounds with identifiers that have the prefix \"DB\" and the suffix \"94\"?", "output": "MATCH (n:Compound) WHERE n.identifier STARTS WITH \"DB\" AND n.identifier ENDS WITH \"94\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the cellular component names whose identifiers start with \"GO\" and conclude with \"52\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"52\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of the Pathway nodes that have an identifier starting with \"PC\" and ending in \"41\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"41\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of names for cellular components whose identifier strings start with \"GO\" and terminate with \"23\"?", "output": "MATCH (n:CellularComponent) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"23\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have names where their identifiers both start with \"PC\" and end with \"83\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"83\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of pathways where the identifier starts with \"PC\" and terminates with \"43\"?", "output": "MATCH (n:Pathway) WHERE n.identifier STARTS WITH \"PC\" AND n.identifier ENDS WITH \"43\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify compounds by name that have a license code formatted to start with \"CC\" and end with \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of biological process names where their identifiers start with \"GO\" and finish with \"98\"?", "output": "MATCH (n:BiologicalProcess) WHERE n.identifier STARTS WITH \"GO\" AND n.identifier ENDS WITH \"98\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of compounds where their license code starts with \"CC\" and ends with \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of compounds whose licenses start with \"CC\" and conclude with \"4.0\"?", "output": "MATCH (n:Compound) WHERE n.license STARTS WITH \"CC\" AND n.license ENDS WITH \"4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for diseases associated with either the license \"CC BY 3.0\" or the source labeled as Disease Ontology.", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for compounds that are either licensed under \"CC BY-NC 4.0\" or have DrugBank listed as their source.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Fetch the identifiers of anatomy items that have a license of \"CC BY 3.0\" or are from the source \"Uberon\".", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the names of compounds where the license is either \"CC BY-NC 4.0\" or the source is DrugBank.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of diseases associated with the source \"Disease Ontology\" and a \"CC BY 3.0\" license.", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of diseases licensed under CC BY 3.0 from the source known as Disease Ontology.", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all compounds whose license is \"CC BY-NC 4.0\" or whose source is \"DrugBank,\" and return their identifiers?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of compounds that are both licensed under \"CC BY-NC 4.0\" and sourced from DrugBank.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound names are available where the license is \"CC BY-NC 4.0\" or the source is \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifiers for all compounds where the license is \"CC BY-NC 4.0\" or the source is \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Fetch the identifiers for anatomy entities where the license is either \"CC BY 3.0\" or the source is \"Uberon\".", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have the identifier where the license is \"CC BY-NC 4.0\" or the source is DrugBank?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers for diseases that have a \"CC BY 3.0\" license or are obtained from \"Disease Ontology\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of diseases that are associated with the licensing \"CC BY 3.0\" or originate from the \"Disease Ontology\" source.", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of diseases with a license of \"CC BY 3.0\" or those that originate from the \"Disease Ontology.\"", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for compounds with a license of \"CC BY-NC 4.0\" that are sourced from DrugBank.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have identifiers where the license is \"CC BY-NC 4.0\" or the source is \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of all compounds that are licensed with \"CC BY-NC 4.0\" and originate from DrugBank.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for compounds that either come with a \"CC BY-NC 4.0\" license or are part of the \"DrugBank\" source.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the names of compounds where the license is \"CC BY-NC 4.0\" or the source is listed as \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the gene names that are linked with a \"CC0 1.0\" license or are identified as sourced from \"Entrez Gene\".", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" OR n.source = \"Entrez Gene\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all compounds that have been licensed with \"CC BY-NC 4.0\" in DrugBank.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the disease names where the license is \"CC BY 3.0\" or the diseases are from the \"Disease Ontology\" source.", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the identifiers of genes that have either the license \"CC0 1.0\" or are from the \"Entrez Gene\" database?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" OR n.source = \"Entrez Gene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compounds from DrugBank with a CC BY-NC 4.0 license and return their identifiers.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of anatomy items that have a \"CC BY 3.0\" license and are extracted from the Uberon database.", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the gene names where the license is CC0 1.0 or where the gene's source is Entrez Gene.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" OR n.source = \"Entrez Gene\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide a list of compound names from DrugBank that possess the \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of all compounds where the license is \"CC BY-NC 4.0\" or the source of the information is DrugBank?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all disease identifiers where the license is \"CC BY 3.0\" and the source is \"Disease Ontology\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for diseases that have either a \"CC BY 3.0\" license or a source from the \"Disease Ontology\".", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds, identified by name, possess the CC BY-NC 4.0 license or come from the DrugBank source?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes whose license is CC0 1.0 or source is Entrez Gene, and return their identifiers.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" OR n.source = \"Entrez Gene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the names of pharmacologic classes whose license is \"CC BY 4.0\" or source is \"FDA via DrugCentral\".", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" OR n.source = \"FDA via DrugCentral\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifiers of anatomy entities whose license is \"CC BY 3.0\" or are sourced from \"Uberon\"?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of genes whose license is CC0 1.0 and whose data source is Entrez Gene.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND n.source = \"Entrez Gene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of compounds from DrugBank that have the \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compound names are available for those with a \"CC BY-NC 4.0\" license or if their source is listed as \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have identifiers where their license is \"CC BY-NC 4.0\" or they are sourced from \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all genes that possess the \"CC0 1.0\" license and are sourced from the \"Entrez Gene\".", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND n.source = \"Entrez Gene\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the identifiers for compounds that have either a \"CC BY-NC 4.0\" license or originate from \"DrugBank\".", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all diseases with a \"CC BY 3.0\" license and sourced from \"Disease Ontology,\" and provide their identifiers.", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have a name meeting either the license condition \"CC BY-NC 4.0\" or the source condition \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the names of compounds whose license type is \"CC BY-NC 4.0\" and source is from DrugBank?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for pharmacologic classes whose license is \"CC BY 4.0\" or whose source is listed as \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" OR n.source = \"FDA via DrugCentral\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that either have a license of \"CC BY-NC 4.0\" or come from the \"DrugBank\" source?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of all Gene nodes with a license of CC0 1.0 from the Entrez Gene source.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND n.source = \"Entrez Gene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers of compounds whose license is \"CC BY-NC 4.0\" or which originate from \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds, with a \"CC BY-NC 4.0\" license or coming from \"DrugBank,\" are present in the database?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for compounds that are licensed with \"CC BY-NC 4.0\" or are retrieved from DrugBank?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic class names are returned for entries with the license \"CC BY 4.0\" or a source marked as \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" OR n.source = \"FDA via DrugCentral\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of genes that come from the Entrez Gene source and have a CC0 1.0 license.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND n.source = \"Entrez Gene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Fetch the names of anatomy-related nodes that have the license \"CC BY 3.0\" or are associated with the source \"Uberon\".", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Uberon\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compounds from DrugBank with a CC BY-NC 4.0 license based on their identifiers.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds with a \"CC BY-NC 4.0\" license are sourced from DrugBank, and what are their names?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the names of compounds with a \"CC BY-NC 4.0\" license that are found in the DrugBank dataset.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compounds by their identifiers that come from DrugBank and hold a CC BY-NC 4.0 license.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease identifiers exist for records with a \"CC BY 3.0\" license from the Disease Ontology source?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound names are returned when filtered by either having a license of \"CC BY-NC 4.0\" or being sourced from \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of anatomy entries whose license is \"CC BY 3.0\" and that originate from the source Uberon.", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifiers of compounds with a licensing agreement of \"CC BY-NC 4.0\" or a source designation of \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the disease identifiers where their license is CC BY 3.0 or the disease comes from the Disease Ontology?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compounds from DrugBank that are under the \"CC BY-NC 4.0\" license by their identifiers.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of genes with either a CC0 1.0 license or those whose source is Entrez Gene.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" OR n.source = \"Entrez Gene\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the disease names for entries where the license is \"CC BY 3.0\" or the source is \"Disease Ontology\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for genes that are attributed to Entrez Gene and have a licensing agreement of \"CC0 1.0\".", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND n.source = \"Entrez Gene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease names are returned for entries licensed under \"CC BY 3.0\" or sourced from \"Disease Ontology\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of each compound within DrugBank that has the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of nodes classified as Anatomy, where the license is \"CC BY 3.0\" and the source is marked as \"Uberon.\"", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds sourced from DrugBank have the \"CC BY-NC 4.0\" license, and what are their names?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of the compounds that match the criteria of having a \"CC BY-NC 4.0\" license or being sourced from \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of names for compounds sourced from DrugBank with a \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the source FDA via DrugCentral, what are the identifiers of pharmacologic classes licensed under \"CC BY 4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" AND n.source = \"FDA via DrugCentral\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers of compounds that have either a \"CC BY-NC 4.0\" license or are linked to the \"DrugBank\" source?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" OR n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases, with a \"CC BY 3.0\" license, can be found in the Disease Ontology based on their identifiers?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of compounds that have a \"CC BY-NC 4.0\" license and are sourced from DrugBank?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases, with the license \"CC BY 3.0\" or from the \"Disease Ontology,\" are being retrieved by their names?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names are returned when filtering for those with a \"CC BY 3.0\" license or that originate from \"Disease Ontology\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers are associated with a \"CC BY 3.0\" license and are derived from the Disease Ontology database?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes whose license is \"CC0 1.0\" and whose source is \"Entrez Gene\", returning their unique identifiers.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND n.source = \"Entrez Gene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of the genes that either come with a \"CC0 1.0\" license or are identified as part of the \"Entrez Gene\" dataset?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" OR n.source = \"Entrez Gene\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the gene names where the license is \"CC0 1.0\" or the source of the gene information is \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" OR n.source = \"Entrez Gene\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease entities from the \"Disease Ontology\" database have the \"CC BY 3.0\" license, and what are their identifiers?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of diseases that have a CC BY 3.0 license and come from the Disease Ontology source?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene IDs that have both a CC0 1.0 license and are from the Entrez Gene source.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND n.source = \"Entrez Gene\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of anatomy entities with either a \"CC BY 3.0\" license or a source specified as \"Uberon\"?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Uberon\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases from the Disease Ontology source have a \"CC BY 3.0\" license?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers do diseases have if their license is \"CC BY 3.0\" or if their source is \"Disease Ontology\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of pharmacologic classes with a \"CC BY 4.0\" license and a source listed as FDA via DrugCentral?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" AND n.source = \"FDA via DrugCentral\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all identifiers of anatomy entities that are licensed under \"CC BY 3.0\" or whose source is \"Uberon\".", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Uberon\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the disease names that have the \"CC BY 3.0\" license or are sourced from the \"Disease Ontology\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names are associated with a \"CC BY 3.0\" license or linked to the \"Disease Ontology\" source?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases, sourced from Disease Ontology, are available under the \"CC BY 3.0\" license, and what are their names?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers are associated with a \"CC BY 3.0\" license or are from the Disease Ontology source?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds from the DrugBank source that are licensed under the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND n.source = \"DrugBank\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of diseases that have a \"CC BY 3.0\" license and are sourced from the Disease Ontology?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy entities that either have a CC BY 3.0 license or originate from the Uberon source?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Uberon\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease names are available under the \"CC BY 3.0\" license from the Disease Ontology database?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease entities have a license specified as \"CC BY 3.0\" or a source attribute of \"Disease Ontology\", and what are their names?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" OR n.source = \"Disease Ontology\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the identifiers of diseases whose source is \"Disease Ontology\" and are under the \"CC BY 3.0\" license?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND n.source = \"Disease Ontology\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve all genes with identifiers between 41385 and 103796?", "output": "MATCH (n:Gene) WHERE n.identifier >= 41385 AND n.identifier <= 103796 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain a list of genes where the identifier is between 68,800 and 109,186?", "output": "MATCH (n:Gene) WHERE n.identifier >= 68800 AND n.identifier <= 109186 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve genes that have identifiers spanning from 31643 up to 117370?", "output": "MATCH (n:Gene) WHERE n.identifier >= 31643 AND n.identifier <= 117370 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find genes with identifiers within the range of 49117 to 141874?", "output": "MATCH (n:Gene) WHERE n.identifier >= 49117 AND n.identifier <= 141874 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all the genes with identifiers numbering between 72493 and 132954.", "output": "MATCH (n:Gene) WHERE n.identifier >= 72493 AND n.identifier <= 132954 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes where the identifier is greater than or equal to 40161 and less than or equal to 138564.", "output": "MATCH (n:Gene) WHERE n.identifier >= 40161 AND n.identifier <= 138564 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all genes with identifiers starting from 71993 up to 126677?", "output": "MATCH (n:Gene) WHERE n.identifier >= 71993 AND n.identifier <= 126677 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the genes in the database where identifiers fall between 37938 and 133153.", "output": "MATCH (n:Gene) WHERE n.identifier >= 37938 AND n.identifier <= 133153 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the genes with identifiers starting from 15209 up to 140591.", "output": "MATCH (n:Gene) WHERE n.identifier >= 15209 AND n.identifier <= 140591 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve genes that have identifier values between 66498 and 123219, including both endpoints?", "output": "MATCH (n:Gene) WHERE n.identifier >= 66498 AND n.identifier <= 123219 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find genes where the identifier is between 39,451 and 104,196?", "output": "MATCH (n:Gene) WHERE n.identifier >= 39451 AND n.identifier <= 104196 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list the genes whose identifier numbers are at least 34890 and at most 119445?", "output": "MATCH (n:Gene) WHERE n.identifier >= 34890 AND n.identifier <= 119445 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve genes with identifiers that lie between 71,953 and 115,925.", "output": "MATCH (n:Gene) WHERE n.identifier >= 71953 AND n.identifier <= 115925 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all gene records with identifiers within the range of 49321 to 129964 inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 49321 AND n.identifier <= 129964 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the genes that have identifiers from 76,540 to 139,909.", "output": "MATCH (n:Gene) WHERE n.identifier >= 76540 AND n.identifier <= 139909 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes for which the identifier is at least 58944 and at most 128711.", "output": "MATCH (n:Gene) WHERE n.identifier >= 58944 AND n.identifier <= 128711 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes that have an identifier value greater than or equal to 73699 and less than or equal to 104535.", "output": "MATCH (n:Gene) WHERE n.identifier >= 73699 AND n.identifier <= 104535 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes with identifiers ranging from 42,742 to 104,940.", "output": "MATCH (n:Gene) WHERE n.identifier >= 42742 AND n.identifier <= 104940 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all genes with identifiers from 18,834 to 102,058 inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 18834 AND n.identifier <= 102058 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all the genes whose identifier numbers lie between 78,522 and 120,733 inclusively.", "output": "MATCH (n:Gene) WHERE n.identifier >= 78522 AND n.identifier <= 120733 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have identifier values from 20745 up to 127474 inclusively in the database?", "output": "MATCH (n:Gene) WHERE n.identifier >= 20745 AND n.identifier <= 127474 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I need to find genes that have identifiers in the interval from 65296 to 112025; how can I find them in the database?", "output": "MATCH (n:Gene) WHERE n.identifier >= 65296 AND n.identifier <= 112025 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes with identifiers not less than 44522 and not greater than 132806.", "output": "MATCH (n:Gene) WHERE n.identifier >= 44522 AND n.identifier <= 132806 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have an identifier value within the range of 79163 to 139753?", "output": "MATCH (n:Gene) WHERE n.identifier >= 79163 AND n.identifier <= 139753 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes are represented in the database with identifier values that lie between 41571 and 137182?", "output": "MATCH (n:Gene) WHERE n.identifier >= 41571 AND n.identifier <= 137182 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have an identifier between 19305 and 146389 inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 19305 AND n.identifier <= 146389 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes that have an identifier in the range from 40,982 to 110,899.", "output": "MATCH (n:Gene) WHERE n.identifier >= 40982 AND n.identifier <= 110899 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the genes whose identifiers are greater than or equal to 59009 and less than or equal to 149971.", "output": "MATCH (n:Gene) WHERE n.identifier >= 59009 AND n.identifier <= 149971 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all the genes with identifiers starting from 22,899 up to 103,972.", "output": "MATCH (n:Gene) WHERE n.identifier >= 22899 AND n.identifier <= 103972 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the set of genes whose identifiers are numbered from 17989 through 149019?", "output": "MATCH (n:Gene) WHERE n.identifier >= 17989 AND n.identifier <= 149019 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all gene entries where the identifier is greater than or equal to 51,104 and does not exceed 103,746?", "output": "MATCH (n:Gene) WHERE n.identifier >= 51104 AND n.identifier <= 103746 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the genes that have identifiers starting from 46,500 up to 143,842?", "output": "MATCH (n:Gene) WHERE n.identifier >= 46500 AND n.identifier <= 143842 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes whose identifiers are greater than or equal to 62772 and less than or equal to 147724.", "output": "MATCH (n:Gene) WHERE n.identifier >= 62772 AND n.identifier <= 147724 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which Genes have an identifier value that falls between 27154 and 144019?", "output": "MATCH (n:Gene) WHERE n.identifier >= 27154 AND n.identifier <= 144019 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get all gene records with identifiers equal to or greater than 62,565 and less than or equal to 103,842?", "output": "MATCH (n:Gene) WHERE n.identifier >= 62565 AND n.identifier <= 103842 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find genes with identifiers that are equal to or greater than 79,615 and less than or equal to 110,317?", "output": "MATCH (n:Gene) WHERE n.identifier >= 79615 AND n.identifier <= 110317 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all Gene nodes whose identifiers fall between 20322 and 105613?", "output": "MATCH (n:Gene) WHERE n.identifier >= 20322 AND n.identifier <= 105613 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have identifiers between 51,441 and 149,274 in the database?", "output": "MATCH (n:Gene) WHERE n.identifier >= 51441 AND n.identifier <= 149274 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes with identifiers starting at 51,180 up to 115,642.", "output": "MATCH (n:Gene) WHERE n.identifier >= 51180 AND n.identifier <= 115642 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Show me the genes whose identifiers are within the interval of 68082 to 136066.", "output": "MATCH (n:Gene) WHERE n.identifier >= 68082 AND n.identifier <= 136066 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all gene entries where the identifier falls within the interval of 48,469 to 128,492?", "output": "MATCH (n:Gene) WHERE n.identifier >= 48469 AND n.identifier <= 128492 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes fall within the identifier range of 20500 to 112178?", "output": "MATCH (n:Gene) WHERE n.identifier >= 20500 AND n.identifier <= 112178 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can we retrieve about genes that have identifiers ranging from 22,704 to 143,187?", "output": "MATCH (n:Gene) WHERE n.identifier >= 22704 AND n.identifier <= 143187 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are represented by identifiers from 11934 up to and including 106112?", "output": "MATCH (n:Gene) WHERE n.identifier >= 11934 AND n.identifier <= 106112 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes with identifier values starting from 47,388 up to and including 127,722.", "output": "MATCH (n:Gene) WHERE n.identifier >= 47388 AND n.identifier <= 127722 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the genes with identifiers ranging from 36071 to 110016 in the database?", "output": "MATCH (n:Gene) WHERE n.identifier >= 36071 AND n.identifier <= 110016 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have identifiers that fall between 77391 and 115597, inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 77391 AND n.identifier <= 115597 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes where their identifiers are greater than or equal to 22,833 and less than or equal to 103,315.  ", "output": "MATCH (n:Gene) WHERE n.identifier >= 22833 AND n.identifier <= 103315 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene records in the database that possess an identifier within the range of 38,864 and 100,471?", "output": "MATCH (n:Gene) WHERE n.identifier >= 38864 AND n.identifier <= 100471 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have an identifier within the range of 44973 to 142006?", "output": "MATCH (n:Gene) WHERE n.identifier >= 44973 AND n.identifier <= 142006 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene entries exist with identifiers starting at 25713 up to and including 137334?", "output": "MATCH (n:Gene) WHERE n.identifier >= 25713 AND n.identifier <= 137334 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all genes with an identifier between 71,213 and 147,780, inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 71213 AND n.identifier <= 147780 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve gene nodes from the database with identifier values starting from 44,760 up to and including 129,819?", "output": "MATCH (n:Gene) WHERE n.identifier >= 44760 AND n.identifier <= 129819 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes within the identifier range of 73,624 to 114,040 in the database?", "output": "MATCH (n:Gene) WHERE n.identifier >= 73624 AND n.identifier <= 114040 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene records are stored with identifiers equal to or between 33,416 and 133,271?", "output": "MATCH (n:Gene) WHERE n.identifier >= 33416 AND n.identifier <= 133271 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all gene entities whose identifiers are greater than or equal to 10282 and less than or equal to 125586.", "output": "MATCH (n:Gene) WHERE n.identifier >= 10282 AND n.identifier <= 125586 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes with identifiers between 79,822 and 108,241 inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 79822 AND n.identifier <= 108241 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Please find all genes where the identifier is equal to or greater than 31174 and less than or equal to 135348.", "output": "MATCH (n:Gene) WHERE n.identifier >= 31174 AND n.identifier <= 135348 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve details of genes that have identifiers between 17,455 and 133,281?", "output": "MATCH (n:Gene) WHERE n.identifier >= 17455 AND n.identifier <= 133281 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the genes with identifiers starting from 23,947 up to 140,979. What are they?", "output": "MATCH (n:Gene) WHERE n.identifier >= 23947 AND n.identifier <= 140979 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of genes where the identifier is a number between 57,576 and 120,153?", "output": "MATCH (n:Gene) WHERE n.identifier >= 57576 AND n.identifier <= 120153 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes with identifiers starting from 38,534 up to 103,832.", "output": "MATCH (n:Gene) WHERE n.identifier >= 38534 AND n.identifier <= 103832 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the genes with identifiers starting at 65461 up to 113880?", "output": "MATCH (n:Gene) WHERE n.identifier >= 65461 AND n.identifier <= 113880 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes that have an identifier number ranging from 65519 to 126941?", "output": "MATCH (n:Gene) WHERE n.identifier >= 65519 AND n.identifier <= 126941 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the gene nodes whose identifiers are between 26828 and 143237?", "output": "MATCH (n:Gene) WHERE n.identifier >= 26828 AND n.identifier <= 143237 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have an 'identifier' property that falls between 18,981 and 138,996, and what information can you retrieve about these genes?", "output": "MATCH (n:Gene) WHERE n.identifier >= 18981 AND n.identifier <= 138996 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and list all genes whose identifiers fall within the range of 77,839 to 129,588?", "output": "MATCH (n:Gene) WHERE n.identifier >= 77839 AND n.identifier <= 129588 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene entries in the database have their identifiers starting at 52,487 and ending at 132,021?", "output": "MATCH (n:Gene) WHERE n.identifier >= 52487 AND n.identifier <= 132021 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list all the genes with identifier values from 79,514 to 100,037?", "output": "MATCH (n:Gene) WHERE n.identifier >= 79514 AND n.identifier <= 100037 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are associated with identifier values within the range of 70,068 to 140,708?", "output": "MATCH (n:Gene) WHERE n.identifier >= 70068 AND n.identifier <= 140708 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes exist in the database with identifier numbers within the interval of 34,931 to 135,146?", "output": "MATCH (n:Gene) WHERE n.identifier >= 34931 AND n.identifier <= 135146 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have an identifier between 54,473 and 107,161 inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 54473 AND n.identifier <= 107161 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the genes that have identifier numbers between 40,828 and 126,461, inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 40828 AND n.identifier <= 126461 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the Gene nodes where the identifier is greater than or equal to 53,309 and less than or equal to 104,643.", "output": "MATCH (n:Gene) WHERE n.identifier >= 53309 AND n.identifier <= 104643 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the genes with identifier numbers starting from 30,730 up to 129,735?", "output": "MATCH (n:Gene) WHERE n.identifier >= 30730 AND n.identifier <= 129735 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes exist in the database with an identifier number between 72,296 and 136,031?", "output": "MATCH (n:Gene) WHERE n.identifier >= 72296 AND n.identifier <= 136031 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are identified by numbers from 42,271 to 137,940 in the database?", "output": "MATCH (n:Gene) WHERE n.identifier >= 42271 AND n.identifier <= 137940 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene records exist with identifier values in the range of 19,508 to 100,610?", "output": "MATCH (n:Gene) WHERE n.identifier >= 19508 AND n.identifier <= 100610 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have identifiers that lie inclusively between 36,365 and 146,723?", "output": "MATCH (n:Gene) WHERE n.identifier >= 36365 AND n.identifier <= 146723 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and return the gene nodes where the identifier is between the values 73,788 and 110,144?", "output": "MATCH (n:Gene) WHERE n.identifier >= 73788 AND n.identifier <= 110144 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find gene nodes whose identifier attribute lies between 73,092 and 114,008?", "output": "MATCH (n:Gene) WHERE n.identifier >= 73092 AND n.identifier <= 114008 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes whose identifiers fall within the interval 50,857 to 126,148?", "output": "MATCH (n:Gene) WHERE n.identifier >= 50857 AND n.identifier <= 126148 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes with identifiers ranging from 34,957 to 106,181 inclusive in the database?", "output": "MATCH (n:Gene) WHERE n.identifier >= 34957 AND n.identifier <= 106181 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have an identifier number between 17,716 and 115,003?", "output": "MATCH (n:Gene) WHERE n.identifier >= 17716 AND n.identifier <= 115003 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene entries have identifier values that are within the bounds of 44,814 and 125,938?", "output": "MATCH (n:Gene) WHERE n.identifier >= 44814 AND n.identifier <= 125938 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of all Gene nodes that have an identifier between 46509 and 130318, inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 46509 AND n.identifier <= 130318 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all Gene nodes where their identifiers are within the interval of 54,587 to 107,310.", "output": "MATCH (n:Gene) WHERE n.identifier >= 54587 AND n.identifier <= 107310 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the genes whose identifiers are between 23,104 and 104,801 inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 23104 AND n.identifier <= 104801 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have identifiers ranging from 25,860 to 116,246?", "output": "MATCH (n:Gene) WHERE n.identifier >= 25860 AND n.identifier <= 116246 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have an identifier value that ranges from 27,342 to 147,405, inclusive?", "output": "MATCH (n:Gene) WHERE n.identifier >= 27342 AND n.identifier <= 147405 RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of Pathway nodes that are not associated with the license \"CC BY-NC-SA 4.0\".", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of biological processes that are not associated with a \"CC BY-NC 4.0\" license.", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the pharmacologic classes whose licenses are other than \"CC BY-NC-SA 4.0\" and return their identifiers.", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the symptom names excluding those with the \"CC BY-NC-SA 4.0\" license?", "output": "MATCH (n:Symptom) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of compounds whose license isn't \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find disease identifiers where the license is not set to \"CC BY 3.0\"?", "output": "MATCH (n:Disease) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the identifiers of pathways where the license is not \"CC BY-NC-SA 4.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all pathway names where the license assigned is different from \"CC0 1.0\".", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC0 1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one find the identifiers of symptoms that aren't licensed under \"CC BY-NC 4.0\"?", "output": "MATCH (n:Symptom) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of all anatomy entries that are not associated with the \"CC BY 4.0\" license.", "output": "MATCH (n:Anatomy) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for all pathways with a license different from \"CC0 1.0.\"", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of pathways whose license differs from \"CC0 1.0\".", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathway names are returned when filtering out those with the \"CC BY-NC-SA 4.0\" license?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find the identifiers of pathways with licenses that aren't \"CC BY 3.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of biological processes whose licenses are different from \"CC BY-NC 4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all pathway identifiers where the license is not \"CC BY-NC 4.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for biological processes that are not licensed under \"CC0 1.0\".", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of symptoms whose license is not specified as \"CC BY-NC-SA 4.0\"?", "output": "MATCH (n:Symptom) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for all molecular function entries that do not carry the \"CC BY-NC-SA 4.0\" licensing.", "output": "MATCH (n:MolecularFunction) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique identifiers for molecular functions that do not hold the \"CC BY-NC-SA 4.0\" license agreement?", "output": "MATCH (n:MolecularFunction) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for the pharmacologic classes where the license is not \"CC BY-NC-SA 4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of pharmacologic classes that aren't licensed under \"CC BY 4.0\".", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for all molecular functions that are not associated with a \"CC0 1.0\" license.", "output": "MATCH (n:MolecularFunction) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class identifiers are associated with licenses excluding \"CC BY-NC 4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of all symptoms that are not licensed under \"CC0 1.0\".", "output": "MATCH (n:Symptom) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of pathways whose license is not \"CC BY-NC 4.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all gene identifiers for genes that do not possess a \"CC BY-NC-SA 4.0\" license?", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway identifiers belong to pathways whose license isn't \"CC BY 3.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of pathways not under the \"CC0 1.0\" license.", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC0 1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all molecular functions with a license other than \"CC0 1.0\".", "output": "MATCH (n:MolecularFunction) WHERE NOT n.license = \"CC0 1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of compounds that are not restricted by the \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of pathways that are licensed under terms different from \"CC BY-NC 4.0\".", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find the identifiers of all cellular components that are not licensed under \"CC BY 4.0\"?", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify biological processes whose license is not \"CC0 1.0\" and return their identifiers.", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of symptoms whose license does not match \"CC BY 4.0\".", "output": "MATCH (n:Symptom) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the compounds whose license is not \"CC BY-NC-SA 4.0\" and return their names?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic class names exist without the \"CC BY-NC-SA 4.0\" license connection?", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of biological processes excluding those with the \"CC BY-NC-SA 4.0\" license.", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifiers of biological processes with licenses that aren't \"CC0 1.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of pathways where the license is not \"CC BY-NC 4.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for cellular components where the license is not \"CC BY-NC 4.0\"?", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for genes that aren't associated with the license \"CC BY 4.0\".", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the names of pharmacologic classes whose license is different from \"CC BY-NC-SA 4.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the cellular components whose license does not match CC BY-NC 4.0, and give me their identifiers.", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the identifiers of all compounds whose license is not \"CC BY 3.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve identifiers for compounds lacking the \"CC BY 4.0\" license?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes that are not licensed under \"CC BY-NC-SA 4.0\" and provide their identifiers.", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all pharmacologic classes that do not have a \"CC BY-NC 4.0\" license?", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the identifiers for compounds whose license is not \"CC BY 3.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of all biological processes that are excluded from the \"CC BY-NC-SA 4.0\" license. What are they?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of symptoms whose license is not \"CC0 1.0\"?", "output": "MATCH (n:Symptom) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological process names exist where the license is not \"CC BY-NC 4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the identifiers of anatomy entities whose license is other than \"CC0 1.0\".", "output": "MATCH (n:Anatomy) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for all genes whose licenses are different from \"CC0 1.0\".", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the identifiers for biological processes that have a license different from \"CC BY-NC 4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway identifiers are associated with pathways whose license is different from \"CC BY 3.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers of SideEffect entities where the license is something other than \"CC BY 3.0\"?", "output": "MATCH (n:SideEffect) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds have an identifier and a license that is not \"CC BY-NC-SA 4.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the identifiers for molecular functions excluding those with the license \"CC BY-NC 4.0\"?", "output": "MATCH (n:MolecularFunction) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the names of biological processes whose license is not \"CC BY-NC 4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of all cellular components whose license is not \"CC BY-NC 4.0\"?", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of cellular component names where the license is not \"CC BY 4.0\"?", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the disease names whose license is not \"CC BY 4.0\"?", "output": "MATCH (n:Disease) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the set of compound names where the license is not \"CC BY 4.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the Cellular Components whose license is different from CC0 1.0, and provide their identifiers.", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of pathways whose license is different from \"CC BY 4.0.\"", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class names are associated with licenses other than \"CC BY 3.0\"?", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers belong to compounds with a license other than \"CC0 1.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the gene names where the license is different from \"CC BY-NC-SA 4.0\"?", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes whose license does not match \"CC BY-NC-SA 4.0\".", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the molecular functions whose licenses are not labeled as \"CC BY 3.0\" by their identifiers.", "output": "MATCH (n:MolecularFunction) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of symptoms whose license is not labeled as \"CC BY 4.0\"?", "output": "MATCH (n:Symptom) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for all biological processes whose license is something other than \"CC BY-NC 4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the gene identifiers for genes without the \"CC BY 3.0\" license?", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the pharmacologic classes whose licenses are not designated as \"CC BY 4.0\".", "output": "MATCH (n:PharmacologicClass) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of each Compound whose license is something other than \"CC0 1.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways have a name where the license is not \"CC0 1.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC0 1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for biological processes where the license is not CC BY 3.0?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the cellular components that are not associated with the \"CC BY 4.0\" license and provide their names.", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers correspond to pathways with a license other than \"CC0 1.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the names of compounds with licenses other than \"CC BY-NC-SA 4.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pathway names where the license is not equivalent to \"CC0 1.0\"?", "output": "MATCH (n:Pathway) WHERE NOT n.license = \"CC0 1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the IDs of biological processes whose license is not \"CC0 1.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of molecular functions that do not have the \"CC BY-NC-SA 4.0\" license?", "output": "MATCH (n:MolecularFunction) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of gene nodes where the licensing type is not \"CC BY 3.0\".", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of biological processes that are not licensed under \"CC BY 3.0\".", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY 3.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names do compounds have if their license is something other than \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of all anatomy nodes excluding those with the \"CC0 1.0\" license.", "output": "MATCH (n:Anatomy) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the compound names that do not have the \"CC BY-NC-SA 4.0\" license?", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifiers of all cellular components that are not licensed under \"CC0 1.0\"?", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC0 1.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers can be retrieved for genes that do not hold the \"CC BY 4.0\" licensing?", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the biological processes whose license is not \"CC BY-NC 4.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the unique identifiers of symptoms that are licensed under terms other than \"CC BY 4.0\"?", "output": "MATCH (n:Symptom) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of all compounds whose license is different from \"CC BY 4.0\".", "output": "MATCH (n:Compound) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of cellular component names that are not associated with the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:CellularComponent) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that do not have the license \"CC BY-NC 4.0\"?", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers belong to genes that are not attributed to the \"CC BY 4.0\" license?", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the gene names whose license is different from \"CC BY-NC 4.0\"?", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY-NC 4.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological process names can be found where the license is not equal to \"CC0 1.0\"?", "output": "MATCH (n:BiologicalProcess) WHERE NOT n.license = \"CC0 1.0\" RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes that are not licensed under the \"CC BY-NC-SA 4.0\" license?", "output": "MATCH (n:Gene) WHERE NOT n.license = \"CC BY-NC-SA 4.0\" RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List all pharmacologic classes that possess the \"CC BY 4.0\" license and either match the identifier \"N0000007700\" or are not named \"Retinoids.\"", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" AND (n.identifier = \"N0000007700\" OR NOT n.name = \"Retinoids\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the pharmacologic classes that are granted the \"CC BY 4.0\" license and whose identifier is \"N0000190115\", or those that do not have the name \"Cytochrome P450 3A5 Inhibitors\".", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" AND (n.identifier = \"N0000190115\" OR NOT n.name = \"Cytochrome P450 3A5 Inhibitors\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What diseases from the \"Disease Ontology\" source either have the URL \"http://purl.obolibrary.org/obo/DOID_11612\" or do not have the name \"polycystic ovary syndrome\"?", "output": "MATCH (n:Disease) WHERE n.source = \"Disease Ontology\" AND (n.url = \"http://purl.obolibrary.org/obo/DOID_11612\" OR NOT n.name = \"polycystic ovary syndrome\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compound whose InChI is \"InChI=1S/C20H28O2/c1-15(8-6-9-16(2)14-19(21)22)11-12-18-17(3)10-7-13-20(18,4)5/h6,8-9,11-12,14H,7,10,13H2,1-5H3,(H,21,22)/b9-6+,12-11+,15-8+,16-14+\", while it is either listed under DrugBank or it is not called \"Tretinoin\".", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C20H28O2/c1-15(8-6-9-16(2)14-19(21)22)11-12-18-17(3)10-7-13-20(18,4)5/h6,8-9,11-12,14H,7,10,13H2,1-5H3,(H,21,22)/b9-6+,12-11+,15-8+,16-14+\" AND (n.source = \"DrugBank\" OR NOT n.name = \"Tretinoin\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the pharmacologic class entries that are under the \"CC BY 4.0\" license, which either have the URL specified as \"http://purl.bioontology.org/ontology/NDFRT/N0000175628\" or have an identifier other than \"N0000175628.\"", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" AND (n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000175628\" OR NOT n.identifier = \"N0000175628\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the genes that hold a \"CC0 1.0\" license and either have the URL \"http://identifiers.org/ncbigene/7140\" or are not from the source \"Entrez Gene\".", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.url = \"http://identifiers.org/ncbigene/7140\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find compounds with a \"CC BY-NC 4.0\" license that are either from the URL \"http://www.drugbank.ca/drugs/DB08877\" or do not have the identifier \"DB08877\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.url = \"http://www.drugbank.ca/drugs/DB08877\" OR NOT n.identifier = \"DB08877\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all genes that are licensed under \"CC0 1.0,\" where the chromosome is 7 or the description does not include \"von Willebrand factor C domain containing 2\".", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.chromosome = \"7\" OR NOT n.description = \"von Willebrand factor C domain containing 2\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds with the \"CC BY-NC 4.0\" license either have the DrugBank URL \"http://www.drugbank.ca/drugs/DB00246\" or do not have the name that matches \"Ziprasidone\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.url = \"http://www.drugbank.ca/drugs/DB00246\" OR NOT n.name = \"Ziprasidone\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all genes with a license of CC0 1.0 that either match the description \"endothelin receptor type B\" or have a different source than \"Entrez Gene\".", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.description = \"endothelin receptor type B\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the disease with the URL \"http://purl.obolibrary.org/obo/DOID_1686\" that either has the identifier \"DOID:1686\" or does not have \"glaucoma\" as its name.", "output": "MATCH (n:Disease) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_1686\" AND (n.identifier = \"DOID:1686\" OR NOT n.name = \"glaucoma\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compounds have the license \"CC BY-NC 4.0\" and either have the URL \"http://www.drugbank.ca/drugs/DB00151\" or do not have the name \"L-Cysteine\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.url = \"http://www.drugbank.ca/drugs/DB00151\" OR NOT n.name = \"L-Cysteine\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find diseases from the Disease Ontology source that have the specific URL \"http://purl.obolibrary.org/obo/DOID_5041\" or differ in identifier from \"DOID:5041\"?", "output": "MATCH (n:Disease) WHERE n.source = \"Disease Ontology\" AND (n.url = \"http://purl.obolibrary.org/obo/DOID_5041\" OR NOT n.identifier = \"DOID:5041\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find compounds that are licensed under \"CC BY-NC 4.0\" and either have the specific InChIKey \"InChIKey=QXKHYNVANLEOEG-UHFFFAOYSA-N\" or that do not list \"DrugBank\" as their source.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchikey = \"InChIKey=QXKHYNVANLEOEG-UHFFFAOYSA-N\" OR NOT n.source = \"DrugBank\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Fetch the disease entities that are under the \"CC BY 3.0\" license and either correspond to the URL \"http://purl.obolibrary.org/obo/DOID_5041\" or have a different name than \"esophageal cancer.\"", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND (n.url = \"http://purl.obolibrary.org/obo/DOID_5041\" OR NOT n.name = \"esophageal cancer\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find genes with a \"CC0 1.0\" license where either the URL is \"http://identifiers.org/ncbigene/3159\" or the source is not \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.url = \"http://identifiers.org/ncbigene/3159\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find genes with the \"CC0 1.0\" license where the gene is named \"SLC22A6\" or the source is not \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.name = \"SLC22A6\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find compounds that fall under the \"CC BY-NC 4.0\" license where either the InChI is \"InChI=1S/C11H12N2O/c1-9-8-11(14)13(12(9)2)10-6-4-3-5-7-10/h3-8H,1-2H3\" or the identifier is not \"DB01435\".", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchi = \"InChI=1S/C11H12N2O/c1-9-8-11(14)13(12(9)2)10-6-4-3-5-7-10/h3-8H,1-2H3\" OR NOT n.identifier = \"DB01435\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the compound with the InChIKey \"CUIHSIWYWATEQL-UHFFFAOYSA-N\" that either comes from DrugBank or is not named \"Pazopanib\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=CUIHSIWYWATEQL-UHFFFAOYSA-N\" AND (n.source = \"DrugBank\" OR NOT n.name = \"Pazopanib\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compounds have the \"CC BY-NC 4.0\" license and either match the InChIKey \"InChIKey=IAKHMKGGTNLKSZ-UHFFFAOYSA-N\" or do not have the URL \"http://www.drugbank.ca/drugs/DB01394\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchikey = \"InChIKey=IAKHMKGGTNLKSZ-UHFFFAOYSA-N\" OR NOT n.url = \"http://www.drugbank.ca/drugs/DB01394\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify compounds with a \"CC BY-NC 4.0\" license that have the specified InChIKey \"InChIKey=RRYMAQUWDLIUPV-BXKDBHETSA-N\" or whose URL is not \"http://www.drugbank.ca/drugs/DB01414\".", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchikey = \"InChIKey=RRYMAQUWDLIUPV-BXKDBHETSA-N\" OR NOT n.url = \"http://www.drugbank.ca/drugs/DB01414\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the genes on chromosome 18 that either fit the description \"small nuclear ribonucleoprotein D1 polypeptide 16kDa\" or have a different designation than \"SNRPD1\".", "output": "MATCH (n:Gene) WHERE n.chromosome = \"18\" AND (n.description = \"small nuclear ribonucleoprotein D1 polypeptide 16kDa\" OR NOT n.name = \"SNRPD1\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find compounds with a specific InChI of \"InChI=1S/C21H23N7O2S/c1-13-5-6-15(11-19(13)31(22,29)30)24-21-23-10-9-20(25-21)27(3)16-7-8-17-14(2)28(4)26-18(17)12-16/h5-12H,1-4H3,(H2,22,29,30)(H,23,24,25)\" that either have the InChIKey \"InChIKey=CUIHSIWYWATEQL-UHFFFAOYSA-N\" or a different name than \"Pazopanib\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C21H23N7O2S/c1-13-5-6-15(11-19(13)31(22,29)30)24-21-23-10-9-20(25-21)27(3)16-7-8-17-14(2)28(4)26-18(17)12-16/h5-12H,1-4H3,(H2,22,29,30)(H,23,24,25)\" AND (n.inchikey = \"InChIKey=CUIHSIWYWATEQL-UHFFFAOYSA-N\" OR NOT n.name = \"Pazopanib\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the compounds that are under the \"CC BY-NC 4.0\" license and feature either the given URL \"http://www.drugbank.ca/drugs/DB06589\" or an alternate identifier from \"DB06589\".", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.url = \"http://www.drugbank.ca/drugs/DB06589\" OR NOT n.identifier = \"DB06589\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the genes whose description is \"DAB2 interacting protein,\" with the condition that they either have the URL \"http://identifiers.org/ncbigene/153090\" or have a name other than \"DAB2IP.\"", "output": "MATCH (n:Gene) WHERE n.description = \"DAB2 interacting protein\" AND (n.url = \"http://identifiers.org/ncbigene/153090\" OR NOT n.name = \"DAB2IP\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of compounds with a \"CC BY-NC 4.0\" license that either link to \"http://www.drugbank.ca/drugs/DB00755\" or do not have the name \"Tretinoin\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.url = \"http://www.drugbank.ca/drugs/DB00755\" OR NOT n.name = \"Tretinoin\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease entry has the URL \"http://purl.obolibrary.org/obo/DOID_1826\" and either the identifier \"DOID:1826\" or a different name than \"epilepsy syndrome\"?", "output": "MATCH (n:Disease) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_1826\" AND (n.identifier = \"DOID:1826\" OR NOT n.name = \"epilepsy syndrome\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What details can you provide about a pharmacologic class whose URL is \"http://purl.bioontology.org/ontology/NDFRT/N0000175967\" and either matches the identifier \"N0000175967\" or has a different name than \"Thrombopoietin Receptor Interactions\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000175967\" AND (n.identifier = \"N0000175967\" OR NOT n.name = \"Thrombopoietin Receptor Interactions\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds match the given InChI \"InChI=1S/C22H24ClN3O/c1-25-13-4-5-18(12-14-25)26-22(27)20-7-3-2-6-19(20)21(24-26)15-16-8-10-17(23)11-9-16/h2-3,6-11,18H,4-5,12-15H2,1H3\" and additionally either possess the InChIKey \"InChIKey=MBUVEWMHONZEQD-UHFFFAOYSA-N\" or have a different source than DrugBank?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C22H24ClN3O/c1-25-13-4-5-18(12-14-25)26-22(27)20-7-3-2-6-19(20)21(24-26)15-16-8-10-17(23)11-9-16/h2-3,6-11,18H,4-5,12-15H2,1H3\" AND (n.inchikey = \"InChIKey=MBUVEWMHONZEQD-UHFFFAOYSA-N\" OR NOT n.source = \"DrugBank\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the pharmacologic class where the URL and identifier are given, or the name isn't \"Sphingosine 1-Phosphate Receptor Modulators\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000181815\" AND (n.identifier = \"N0000181815\" OR NOT n.name = \"Sphingosine 1-Phosphate Receptor Modulators\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene entries described as \"anaplastic lymphoma receptor tyrosine kinase\" satisfy the criteria of having the URL \"http://identifiers.org/ncbigene/238\" or not having the name \"ALK\"?", "output": "MATCH (n:Gene) WHERE n.description = \"anaplastic lymphoma receptor tyrosine kinase\" AND (n.url = \"http://identifiers.org/ncbigene/238\" OR NOT n.name = \"ALK\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the genes with the description \"protein kinase C, zeta\" that either have the name \"PRKCZ\" or whose source isn't \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.description = \"protein kinase C, zeta\" AND (n.name = \"PRKCZ\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find diseases from the Disease Ontology that are linked either through a specific URL \"http://purl.obolibrary.org/obo/DOID_11612\" or have an identifier other than \"DOID:11612\"?", "output": "MATCH (n:Disease) WHERE n.source = \"Disease Ontology\" AND (n.url = \"http://purl.obolibrary.org/obo/DOID_11612\" OR NOT n.identifier = \"DOID:11612\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all compounds with the \"CC BY-NC 4.0\" license that either have the specified InChIKey \"InChIKey=AOJJSUZBOXZQNB-VTZDEGQISA-N\" or whose name is not \"Epirubicin\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchikey = \"InChIKey=AOJJSUZBOXZQNB-VTZDEGQISA-N\" OR NOT n.name = \"Epirubicin\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all compounds that are licensed under \"CC BY-NC 4.0\" and are either from DrugBank or have an identifier different from \"DB00232\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.source = \"DrugBank\" OR NOT n.identifier = \"DB00232\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the anatomy node whose URL matches \"http://purl.obolibrary.org/obo/UBERON_0001003\" and which is either identified by \"UBERON:0001003\" or does not have \"BTO:0000404\" as its BTO ID.", "output": "MATCH (n:Anatomy) WHERE n.url = \"http://purl.obolibrary.org/obo/UBERON_0001003\" AND (n.identifier = \"UBERON:0001003\" OR NOT n.bto_id = \"BTO:0000404\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find diseases that are licensed under \"CC BY 3.0\" and are either not associated with the URL \"http://purl.obolibrary.org/obo/DOID_1793\" or come from \"Disease Ontology\".", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND (n.source = \"Disease Ontology\" OR NOT n.url = \"http://purl.obolibrary.org/obo/DOID_1793\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find genes that are licensed as \"CC0 1.0,\" where the description is either \"serine/arginine-rich splicing factor 2\" or their URL does not match \"http://identifiers.org/ncbigene/6427\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.description = \"serine/arginine-rich splicing factor 2\" OR NOT n.url = \"http://identifiers.org/ncbigene/6427\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the properties of the compound with the specific InChI identifier \"InChI=1S/C20H34O2/c1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20(21)22/h6-7,9-10,12-13H,2-5,8,11,14-19H2,1H3,(H,21,22)/b7-6-,10-9-,13-12-\" from the database, ensuring it either has the URL \"http://www.drugbank.ca/drugs/DB00154\" or its identifier is not \"DB00154\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C20H34O2/c1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20(21)22/h6-7,9-10,12-13H,2-5,8,11,14-19H2,1H3,(H,21,22)/b7-6-,10-9-,13-12-\" AND (n.url = \"http://www.drugbank.ca/drugs/DB00154\" OR NOT n.identifier = \"DB00154\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound has an InChI structure \"InChI=1S/C19H20N2O3S/c1-2-13-3-6-15(20-12-13)9-10-24-16-7-4-14(5-8-16)11-17-18(22)21-19(23)25-17/h3-8,12,17H,2,9-11H2,1H3,(H,21,22,23)\" while either being associated with the DrugBank URL \"http://www.drugbank.ca/drugs/DB01132\" or not named \"Pioglitazone\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C19H20N2O3S/c1-2-13-3-6-15(20-12-13)9-10-24-16-7-4-14(5-8-16)11-17-18(22)21-19(23)25-17/h3-8,12,17H,2,9-11H2,1H3,(H,21,22,23)\" AND (n.url = \"http://www.drugbank.ca/drugs/DB01132\" OR NOT n.name = \"Pioglitazone\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the compound linked to \"http://www.drugbank.ca/drugs/DB08877\" by its URL that also either has the identifier \"DB08877\" or is named something other than \"Ruxolitinib\"? ", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB08877\" AND (n.identifier = \"DB08877\" OR NOT n.name = \"Ruxolitinib\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compounds from DrugBank have either the URL \"http://www.drugbank.ca/drugs/DB01576\" or do not have the name \"Dextroamphetamine\"?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" AND (n.url = \"http://www.drugbank.ca/drugs/DB01576\" OR NOT n.name = \"Dextroamphetamine\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the diseases that have been licensed under \"CC BY 3.0\" and are either listed by \"Disease Ontology\" or are not called \"pancreatic cancer.\"", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND (n.source = \"Disease Ontology\" OR NOT n.name = \"pancreatic cancer\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the compounds with a license of \"CC BY-NC 4.0\" that either have the InChIKey \"InChIKey=HFNKQEVNSGCOJV-OAHLLOKOSA-N\" or whose source is not \"DrugBank\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchikey = \"InChIKey=HFNKQEVNSGCOJV-OAHLLOKOSA-N\" OR NOT n.source = \"DrugBank\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find diseases in the database that are labeled with the Disease Ontology source that either have a URL \"http://purl.obolibrary.org/obo/DOID_10871\" or that do not have the identifier \"DOID:10871\"?", "output": "MATCH (n:Disease) WHERE n.source = \"Disease Ontology\" AND (n.url = \"http://purl.obolibrary.org/obo/DOID_10871\" OR NOT n.identifier = \"DOID:10871\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the anatomy entities with a \"CC BY 3.0\" license and having either the specific MeSH ID \"D011467\" or a different web address than \"http://purl.obolibrary.org/obo/UBERON_0002367\"?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND (n.mesh_id = \"D011467\" OR NOT n.url = \"http://purl.obolibrary.org/obo/UBERON_0002367\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the pharmacologic classes with the classification of \"Mechanism of Action\" that have met the criteria of possessing the \"CC BY 4.0\" license or a URL not equal to \"http://purl.bioontology.org/ontology/NDFRT/N0000000125\".", "output": "MATCH (n:PharmacologicClass) WHERE n.class_type = \"Mechanism of Action\" AND (n.license = \"CC BY 4.0\" OR NOT n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000000125\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the information for compounds that have the InChIKey \"InChIKey=HAWPXGHAZFHHAD-UHFFFAOYSA-N\" and are linked to DrugBank or do not have the name \"Mechlorethamine\".", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=HAWPXGHAZFHHAD-UHFFFAOYSA-N\" AND (n.source = \"DrugBank\" OR NOT n.name = \"Mechlorethamine\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What diseases carry a license of \"CC BY 3.0\" and have the identifier \"DOID:1793\", or are not named \"pancreatic cancer\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND (n.identifier = \"DOID:1793\" OR NOT n.name = \"pancreatic cancer\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve information about diseases that possess a \"CC BY 3.0\" license and either belong to the \"Disease Ontology\" source or are not identified as \"pancreatic cancer.\"", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND (n.source = \"Disease Ontology\" OR NOT n.name = \"pancreatic cancer\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound matches the InChIKey \"InChIKey=SIGSPDASOTUPFS-XUDSTZEESA-N\" and has a URL set as \"http://www.drugbank.ca/drugs/DB06730\" or is not called \"Gestodene\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=SIGSPDASOTUPFS-XUDSTZEESA-N\" AND (n.url = \"http://www.drugbank.ca/drugs/DB06730\" OR NOT n.name = \"Gestodene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find a compound that matches the InChIKey \"SLFGIOIONGJGRT-UHFFFAOYNA-N\", and either has the URL \"http://www.drugbank.ca/drugs/DB09000\" or does not have the name \"Cyamemazine\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=SLFGIOIONGJGRT-UHFFFAOYNA-N\" AND (n.url = \"http://www.drugbank.ca/drugs/DB09000\" OR NOT n.name = \"Cyamemazine\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What diseases are sourced from the Disease Ontology database and either have the specific URL \"http://purl.obolibrary.org/obo/DOID_11612\" or do not have the identifier \"DOID:11612\"?", "output": "MATCH (n:Disease) WHERE n.source = \"Disease Ontology\" AND (n.url = \"http://purl.obolibrary.org/obo/DOID_11612\" OR NOT n.identifier = \"DOID:11612\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide a list of compounds that have a license of \"CC BY-NC 4.0,\" are sourced from DrugBank, or do not have the specific DrugBank URL \"http://www.drugbank.ca/drugs/DB06589\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.source = \"DrugBank\" OR NOT n.url = \"http://www.drugbank.ca/drugs/DB06589\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compounds in the database have the specific InChI value of \"InChI=1S/C21H23N7O2S/c1-13-5-6-15(11-19(13)31(22,29)30)24-21-23-10-9-20(25-21)27(3)16-7-8-17-14(2)28(4)26-18(17)12-16/h5-12H,1-4H3,(H2,22,29,30)(H,23,24,25)\" and either have a matching InChIKey \"InChIKey=CUIHSIWYWATEQL-UHFFFAOYSA-N\" or do not have the URL \"http://www.drugbank.ca/drugs/DB06589\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C21H23N7O2S/c1-13-5-6-15(11-19(13)31(22,29)30)24-21-23-10-9-20(25-21)27(3)16-7-8-17-14(2)28(4)26-18(17)12-16/h5-12H,1-4H3,(H2,22,29,30)(H,23,24,25)\" AND (n.inchikey = \"InChIKey=CUIHSIWYWATEQL-UHFFFAOYSA-N\" OR NOT n.url = \"http://www.drugbank.ca/drugs/DB06589\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify any compounds where the InChI matches \"InChI=1S/C17H18N6/c18-7-5-15(12-3-1-2-4-12)23-10-13(9-22-23)16-14-6-8-19-17(14)21-11-20-16/h6,8-12,15H,1-5H2,(H,19,20,21)/t15-/m1/s1\" and either the InChIKey is \"InChIKey=HFNKQEVNSGCOJV-OAHLLOKOSA-N\" or the identifier is not \"DB08877\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C17H18N6/c18-7-5-15(12-3-1-2-4-12)23-10-13(9-22-23)16-14-6-8-19-17(14)21-11-20-16/h6,8-12,15H,1-5H2,(H,19,20,21)/t15-/m1/s1\" AND (n.inchikey = \"InChIKey=HFNKQEVNSGCOJV-OAHLLOKOSA-N\" OR NOT n.identifier = \"DB08877\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all anatomy nodes that hold the \"CC BY 3.0\" license and are either not named \"prostate gland\" or derived from Uberon.", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND (n.source = \"Uberon\" OR NOT n.name = \"prostate gland\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes located on chromosome 17 that either have the description \"DEAD (Asp-Glu-Ala-Asp) box helicase 5\" or do not have the name \"DDX5\"?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"17\" AND (n.description = \"DEAD (Asp-Glu-Ala-Asp) box helicase 5\" OR NOT n.name = \"DDX5\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the anatomy data points with a mesh_id of \"D011467\", which are either linked to the Uberon source or are not identified as \"UBERON:0002367\".", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D011467\" AND (n.source = \"Uberon\" OR NOT n.identifier = \"UBERON:0002367\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes on chromosome 16 whose description is \"cylindromatosis (turban tumor syndrome)\" or do not bear the name \"CYLD\".", "output": "MATCH (n:Gene) WHERE n.chromosome = \"16\" AND (n.description = \"cylindromatosis (turban tumor syndrome)\" OR NOT n.name = \"CYLD\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the compound with the specific URL \"http://www.drugbank.ca/drugs/DB00887\" that, besides having the identifier \"DB00887\", could also not be named \"Bumetanide\"?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00887\" AND (n.identifier = \"DB00887\" OR NOT n.name = \"Bumetanide\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all anatomy entities that are associated with the license \"CC BY 3.0\" and have a mesh ID of \"D010159\" or lack a bto_id of \"BTO:0001779\"?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND (n.mesh_id = \"D010159\" OR NOT n.bto_id = \"BTO:0001779\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene which has the URL \"http://identifiers.org/ncbigene/7007\" and either carries the name \"TECTA\" or belongs to a source apart from \"Entrez Gene.\"", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/7007\" AND (n.name = \"TECTA\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find details of a compound with the InChIKey \"XAXMYHMKTCNRRZ-UHFFFAOYSA-N\" if it originates from \"DrugBank\" or its URL is not \"http://www.drugbank.ca/drugs/DB01594\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=XAXMYHMKTCNRRZ-UHFFFAOYSA-N\" AND (n.source = \"DrugBank\" OR NOT n.url = \"http://www.drugbank.ca/drugs/DB01594\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can we find about the disease node with the URL \"http://purl.obolibrary.org/obo/DOID_11612\" that either has the identifier \"DOID:11612\" or is not named \"polycystic ovary syndrome\"?", "output": "MATCH (n:Disease) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_11612\" AND (n.identifier = \"DOID:11612\" OR NOT n.name = \"polycystic ovary syndrome\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the anatomy entities that are licensed under \"CC BY 3.0\" and either match the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\" or have a different identifier than \"UBERON:0002367\"?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND (n.url = \"http://purl.obolibrary.org/obo/UBERON_0002367\" OR NOT n.identifier = \"UBERON:0002367\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find anatomy entities from the \"Uberon\" source that either have the identifier \"UBERON:0002367\" or lack the BTO identifier \"BTO:0001129\"?", "output": "MATCH (n:Anatomy) WHERE n.source = \"Uberon\" AND (n.identifier = \"UBERON:0002367\" OR NOT n.bto_id = \"BTO:0001129\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find compounds with an InChI of \"InChI=1S/C22H25NO6/c1-12(24)23-16-8-6-13-10-19(27-3)21(28-4)22(29-5)20(13)14-7-9-18(26-2)17(25)11-15(14)16/h7,9-11,16H,6,8H2,1-5H3,(H,23,24)\" that are either from the \"DrugBank\" source or have a name other than \"Colchicine\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C22H25NO6/c1-12(24)23-16-8-6-13-10-19(27-3)21(28-4)22(29-5)20(13)14-7-9-18(26-2)17(25)11-15(14)16/h7,9-11,16H,6,8H2,1-5H3,(H,23,24)\" AND (n.source = \"DrugBank\" OR NOT n.name = \"Colchicine\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many compounds have the license \"CC BY-NC 4.0\" and match the criterion of having the InChIKey \"InChIKey=VSZGPKBBMSAYNT-RRFJBIMHSA-N\" or not having the identifier \"DB00198\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchikey = \"InChIKey=VSZGPKBBMSAYNT-RRFJBIMHSA-N\" OR NOT n.identifier = \"DB00198\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes on chromosome 10 that are either called \"conserved helix-loop-helix ubiquitous kinase\" or come from a source other than \"Entrez Gene.\"", "output": "MATCH (n:Gene) WHERE n.chromosome = \"10\" AND (n.description = \"conserved helix-loop-helix ubiquitous kinase\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are associated with the InChI matching \"InChI=1S/C17H18N6/c18-7-5-15(12-3-1-2-4-12)23-10-13(9-22-23)16-14-6-8-19-17(14)21-11-20-16/h6,8-12,15H,1-5H2,(H,19,20,21)/t15-/m1/s1\" and have either the exact InChIKey of \"InChIKey=HFNKQEVNSGCOJV-OAHLLOKOSA-N\" or do not link to the URL \"http://www.drugbank.ca/drugs/DB08877\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C17H18N6/c18-7-5-15(12-3-1-2-4-12)23-10-13(9-22-23)16-14-6-8-19-17(14)21-11-20-16/h6,8-12,15H,1-5H2,(H,19,20,21)/t15-/m1/s1\" AND (n.inchikey = \"InChIKey=HFNKQEVNSGCOJV-OAHLLOKOSA-N\" OR NOT n.url = \"http://www.drugbank.ca/drugs/DB08877\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the genes described as \"DDB1 and CUL4 associated factor 8\" with a URL of \"http://identifiers.org/ncbigene/50717\" or whose name is not \"DCAF8\"?", "output": "MATCH (n:Gene) WHERE n.description = \"DDB1 and CUL4 associated factor 8\" AND (n.url = \"http://identifiers.org/ncbigene/50717\" OR NOT n.name = \"DCAF8\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the diseases that have a license of \"CC BY 3.0\", are either from \"Disease Ontology\", or do not have the specified URL?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND (n.source = \"Disease Ontology\" OR NOT n.url = \"http://purl.obolibrary.org/obo/DOID_0050156\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What diseases have a license of \"CC BY 3.0\" and either have a URL of \"http://purl.obolibrary.org/obo/DOID_8778\" or are not named \"Crohn's disease\"?", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND (n.url = \"http://purl.obolibrary.org/obo/DOID_8778\" OR NOT n.name = \"Crohn's disease\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pharmacologic classes with a class type of \"Mechanism of Action\", where the URL is \"http://purl.bioontology.org/ontology/NDFRT/N0000000236\" or the identifier is not \"N0000000236\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.class_type = \"Mechanism of Action\" AND (n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000000236\" OR NOT n.identifier = \"N0000000236\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the genes with a licensing of CC0 1.0 whose URL is either \"http://identifiers.org/ncbigene/81930\" or have a different name than \"KIF18A.\"", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.url = \"http://identifiers.org/ncbigene/81930\" OR NOT n.name = \"KIF18A\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve compounds that are licensed as \"CC BY-NC 4.0\" where the InChIKey is \"InChIKey=AAKJLRGGTJKAMG-UHFFFAOYSA-N\" or the identifier differs from \"DB00530\".", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchikey = \"InChIKey=AAKJLRGGTJKAMG-UHFFFAOYSA-N\" OR NOT n.identifier = \"DB00530\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of the anatomy node labeled as \"prostate gland\" that either has the identifier \"UBERON:0002367\" or does not possess the BTO ID \"BTO:0001129\"?", "output": "MATCH (n:Anatomy) WHERE n.name = \"prostate gland\" AND (n.identifier = \"UBERON:0002367\" OR NOT n.bto_id = \"BTO:0001129\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What anatomical entities have the MeSH ID \"D011467\" and either have the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\" or are not named \"prostate gland\"?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D011467\" AND (n.url = \"http://purl.obolibrary.org/obo/UBERON_0002367\" OR NOT n.name = \"prostate gland\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What details can we find about the compound with the InChIKey \"CUIHSIWYWATEQL-UHFFFAOYSA-N\" if it's sourced from DrugBank or doesn't have the identifier \"DB06589\"?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=CUIHSIWYWATEQL-UHFFFAOYSA-N\" AND (n.source = \"DrugBank\" OR NOT n.identifier = \"DB06589\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all anatomy entries with a MeSH ID of \"D011467\" that are either sourced from \"Uberon\" or whose identifier is not \"UBERON:0002367\"?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D011467\" AND (n.source = \"Uberon\" OR NOT n.identifier = \"UBERON:0002367\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds in the DrugBank source either match the identifier \"DB00500\" or have names other than \"Tolmetin\"?", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" AND (n.identifier = \"DB00500\" OR NOT n.name = \"Tolmetin\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pharmacologic classes sourced from the FDA through DrugCentral, and either have the specified URL or do not have the identifier N0000000109?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" AND (n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000000109\" OR NOT n.identifier = \"N0000000109\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are described by the InChI formula \"InChI=1S/C15H25NO3/c1-12(2)16-10-14(17)11-19-15-6-4-13(5-7-15)8-9-18-3/h4-7,12,14,16-17H,8-11H2,1-3H3\" and have an InChIKey of \"InChIKey=IUBSYMUCCVWXPE-UHFFFAOYSA-N\" or a different identifier than \"DB00264\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C15H25NO3/c1-12(2)16-10-14(17)11-19-15-6-4-13(5-7-15)8-9-18-3/h4-7,12,14,16-17H,8-11H2,1-3H3\" AND (n.inchikey = \"InChIKey=IUBSYMUCCVWXPE-UHFFFAOYSA-N\" OR NOT n.identifier = \"DB00264\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify genes with a CC0 1.0 license that have the name SERINC3 or are not from the source \"Entrez Gene.\"", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.name = \"SERINC3\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes have the license \"CC0 1.0\" and either have the URL \"http://identifiers.org/ncbigene/200909\" or are not sourced from \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.url = \"http://identifiers.org/ncbigene/200909\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find genes with a CC0 1.0 license that either have the description \"betacellulin\" or do not have the name \"BTC\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.description = \"betacellulin\" OR NOT n.name = \"BTC\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all compounds with the \"CC BY-NC 4.0\" license that possess the InChIKey \"FNKQXYHWGSIFBK-UHFFFAOYSA-N\" or have an identifier other than \"DB00360\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchikey = \"InChIKey=FNKQXYHWGSIFBK-UHFFFAOYSA-N\" OR NOT n.identifier = \"DB00360\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find genes that are licensed under \"CC0 1.0\" and either have a specific URL of \"http://identifiers.org/ncbigene/2326\" or are linked to a source that is not \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.url = \"http://identifiers.org/ncbigene/2326\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which 'Gene' entities have the description \"growth factor receptor-bound protein 2\", are either called 'GRB2', or come from a source other than 'Entrez Gene'?", "output": "MATCH (n:Gene) WHERE n.description = \"growth factor receptor-bound protein 2\" AND (n.name = \"GRB2\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all genes with a \"CC0 1.0\" license where the chromosome is specifically 5 or the source is different from \"Entrez Gene.\"", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.chromosome = \"5\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve diseases listed in the Disease Ontology where their URL matches a given link, or their identifier is not \"DOID:1793\"?", "output": "MATCH (n:Disease) WHERE n.source = \"Disease Ontology\" AND (n.url = \"http://purl.obolibrary.org/obo/DOID_1793\" OR NOT n.identifier = \"DOID:1793\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the details of genes that possess a \"CC0 1.0\" license, and either have a description matching \"DEAD (Asp-Glu-Ala-Asp) box helicase 5\" or whose source is not \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.description = \"DEAD (Asp-Glu-Ala-Asp) box helicase 5\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the pharmacologic classes that are licensed under CC BY 4.0, and are either sourced from the FDA via DrugCentral or do not match the specific URL \"http://purl.bioontology.org/ontology/NDFRT/N0000175976\"?", "output": "MATCH (n:PharmacologicClass) WHERE n.license = \"CC BY 4.0\" AND (n.source = \"FDA via DrugCentral\" OR NOT n.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000175976\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes located on chromosome 11 either have the description of \"succinate dehydrogenase complex assembly factor 2\" or originate from sources other than \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"11\" AND (n.description = \"succinate dehydrogenase complex assembly factor 2\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find anatomy entities with the mesh identifier \"D004817\" where they are identified as \"UBERON:0001003\" or do not carry the bto_id \"BTO:0000404\"?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D004817\" AND (n.identifier = \"UBERON:0001003\" OR NOT n.bto_id = \"BTO:0000404\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find genes on chromosome 6 that have the URL \"http://identifiers.org/ncbigene/8342\" or come from a source other than \"Entrez Gene\"?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"6\" AND (n.url = \"http://identifiers.org/ncbigene/8342\" OR NOT n.source = \"Entrez Gene\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which `Compound` node is described by having an InChI value of \"InChI=1S/C24H34O4/c1-14-12-18-19(22(4)9-6-17(27)13-21(14)22)7-10-23(5)20(18)8-11-24(23,15(2)25)28-16(3)26/h13-14,18-20H,6-12H2,1-5H3/t14-,18+,19-,20-,22+,23-,24-/m0/s1\" if it also either has the specific InChIKey \"InChIKey=PSGAAPLEWMOORI-PEINSRQWSA-N\" or a URL that is not \"http://www.drugbank.ca/drugs/DB00603\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C24H34O4/c1-14-12-18-19(22(4)9-6-17(27)13-21(14)22)7-10-23(5)20(18)8-11-24(23,15(2)25)28-16(3)26/h13-14,18-20H,6-12H2,1-5H3/t14-,18+,19-,20-,22+,23-,24-/m0/s1\" AND (n.inchikey = \"InChIKey=PSGAAPLEWMOORI-PEINSRQWSA-N\" OR NOT n.url = \"http://www.drugbank.ca/drugs/DB00603\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the genes with a CC0 1.0 license that are either on chromosome 19 or not named LSM7?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND (n.chromosome = \"19\" OR NOT n.name = \"LSM7\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find compounds that are licensed under \"CC BY-NC 4.0\" and either have the InChI key \"InChI=1S/C18H19NOS/c1-19-12-11-17(18-10-5-13-21-18)20-16-9-4-7-14-6-2-3-8-15(14)16/h2-10,13,17,19H,11-12H2,1H3/t17-/m0/s1\" or do not link to \"http://www.drugbank.ca/drugs/DB00476\"?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND (n.inchi = \"InChI=1S/C18H19NOS/c1-19-12-11-17(18-10-5-13-21-18)20-16-9-4-7-14-6-2-3-8-15(14)16/h2-10,13,17,19H,11-12H2,1H3/t17-/m0/s1\" OR NOT n.url = \"http://www.drugbank.ca/drugs/DB00476\") RETURN n"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier of each CellularComponent node and check if its URL matches \"http://purl.obolibrary.org/obo/GO_0032045\" to return \"Yes\" or \"No\"?", "output": "MATCH (n:CellularComponent) RETURN n.identifier, CASE WHEN n.url = \"http://purl.obolibrary.org/obo/GO_0032045\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the URL for each node with the 'Anatomy' label, and indicate if the license is \"CC BY 3.0\".", "output": "MATCH (n:Anatomy) RETURN n.url, CASE WHEN n.license = \"CC BY 3.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URLs for each compound node and check if their license is \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound) RETURN n.url, CASE WHEN n.license = \"CC BY-NC 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For pharmacologic classes, retrieve each license and determine if a particular class is named \"Dihydrofolate Reductase Inhibitors,\" providing a 'Yes' or 'No' result.", "output": "MATCH (n:PharmacologicClass) RETURN n.license, CASE WHEN n.name = \"Dihydrofolate Reductase Inhibitors\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the license for Pathway nodes and indicate if a Pathway's identifier is \"PC7_1543\" by returning \"Yes\" or \"No\"?", "output": "MATCH (n:Pathway) RETURN n.license, CASE WHEN n.identifier = \"PC7_1543\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URL of each CellularComponent and know if its source is Gene Ontology, marked as \"Yes\" or \"No\"?", "output": "MATCH (n:CellularComponent) RETURN n.url, CASE WHEN n.source = \"Gene Ontology\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you extract the identifier for each Pathway node and specify if the source is WikiPathways?", "output": "MATCH (n:Pathway) RETURN n.identifier, CASE WHEN n.source = \"WikiPathways\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs of SideEffect nodes along with a yes or no indicating whether each node's identifier equals \"C0025322\"?", "output": "MATCH (n:SideEffect) RETURN n.url, CASE WHEN n.identifier = \"C0025322\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the descriptions of genes and specify if the URL matches \"http://identifiers.org/ncbigene/51667\" with a 'Yes' or 'No'.", "output": "MATCH (n:Gene) RETURN n.description, CASE WHEN n.url = \"http://identifiers.org/ncbigene/51667\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we get the source for nodes labeled as MolecularFunction and verify if their name equals \"malonyltransferase activity\"?", "output": "MATCH (n:MolecularFunction) RETURN n.source, CASE WHEN n.name = \"malonyltransferase activity\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the URLs of all Pathway nodes and indicate whether their license is \"CC BY 4.0\"?", "output": "MATCH (n:Pathway) RETURN n.url, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the URLs for each BiologicalProcess node and indicate whether their license is \"CC BY 4.0\"?", "output": "MATCH (n:BiologicalProcess) RETURN n.url, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do I find out if the URL of each 'SideEffect' node matches \"http://identifiers.org/umls/C0221743\" while also retrieving their sources?", "output": "MATCH (n:SideEffect) RETURN n.source, CASE WHEN n.url = \"http://identifiers.org/umls/C0221743\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the source and check if the identifier of Symptom nodes is \"D017109\"?", "output": "MATCH (n:Symptom) RETURN n.source, CASE WHEN n.identifier = \"D017109\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What query do I use to return the license of each gene and check if its description is \"interphotoreceptor matrix proteoglycan 1\"?", "output": "MATCH (n:Gene) RETURN n.license, CASE WHEN n.description = \"interphotoreceptor matrix proteoglycan 1\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of genes and determine if their description matches \"outer dense fiber of sperm tails 4\".", "output": "MATCH (n:Gene) RETURN n.identifier, CASE WHEN n.description = \"outer dense fiber of sperm tails 4\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the source of each Pathway, and determine if its identifier matches \"PC7_3060\".", "output": "MATCH (n:Pathway) RETURN n.source, CASE WHEN n.identifier = \"PC7_3060\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all genes by name and determine if their description is \"sodium channel, voltage gated, type X alpha subunit\".", "output": "MATCH (n:Gene) RETURN n.name, CASE WHEN n.description = \"sodium channel, voltage gated, type X alpha subunit\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you retrieve gene identifiers and a check for whether each gene's description is \"1-acylglycerol-3-phosphate O-acyltransferase 2,\" with a \"Yes\" or \"No\" response?", "output": "MATCH (n:Gene) RETURN n.identifier, CASE WHEN n.description = \"1-acylglycerol-3-phosphate O-acyltransferase 2\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the source of each CellularComponent node and confirm if its URL is exactly \"http://purl.obolibrary.org/obo/GO_1990590\".", "output": "MATCH (n:CellularComponent) RETURN n.source, CASE WHEN n.url = \"http://purl.obolibrary.org/obo/GO_1990590\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the sources of all CellularComponent nodes and verify if each source has a CC BY 4.0 license?", "output": "MATCH (n:CellularComponent) RETURN n.source, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the BTO ID for anatomy nodes and check whether their MeSH ID equals \"D004848\"?", "output": "MATCH (n:Anatomy) RETURN n.bto_id, CASE WHEN n.mesh_id = \"D004848\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the license for each cellular component and determine if any is specifically named \"calcium channel complex,\" indicating this with a \"Yes\" or \"No\"?", "output": "MATCH (n:CellularComponent) RETURN n.license, CASE WHEN n.name = \"calcium channel complex\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URL of every molecular function node and confirm if each one is sourced from \"Gene Ontology\"?", "output": "MATCH (n:MolecularFunction) RETURN n.url, CASE WHEN n.source = \"Gene Ontology\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the license of each CellularComponent and check if the identifier equals \"GO:0070022\"?", "output": "MATCH (n:CellularComponent) RETURN n.license, CASE WHEN n.identifier = \"GO:0070022\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses of Pathway nodes and determine if their source is \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway) RETURN n.license, CASE WHEN n.source = \"Reactome via Pathway Commons\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find out the source of each 'MolecularFunction' node and check if its URL corresponds to \"http://purl.obolibrary.org/obo/GO_0016151\"?", "output": "MATCH (n:MolecularFunction) RETURN n.source, CASE WHEN n.url = \"http://purl.obolibrary.org/obo/GO_0016151\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine if an anatomy node's name is \"brain\" and extract its identifier at the same time?", "output": "MATCH (n:Anatomy) RETURN n.identifier, CASE WHEN n.name = \"brain\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find out if each anatomy node has a BTO ID of \"BTO:0000045\", and what is their source?", "output": "MATCH (n:Anatomy) RETURN n.source, CASE WHEN n.bto_id = \"BTO:0000045\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the URLs of cellular components and determine if their license is labeled as \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent) RETURN n.url, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each cellular component, can you return its name and indicate whether the license is CC BY 4.0?", "output": "MATCH (n:CellularComponent) RETURN n.name, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve a list of cellular component identifiers and specify 'Yes' if the component name is 'CBM complex' and 'No' otherwise?", "output": "MATCH (n:CellularComponent) RETURN n.identifier, CASE WHEN n.name = \"CBM complex\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you list the license of each gene and verify if their URL equals \"http://identifiers.org/ncbigene/26301\"?", "output": "MATCH (n:Gene) RETURN n.license, CASE WHEN n.url = \"http://identifiers.org/ncbigene/26301\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of pharmacologic classes and check if their license is \"CC BY 4.0\".", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find out the identifiers for each Pathway and check if their source matches \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway) RETURN n.identifier, CASE WHEN n.source = \"Reactome via Pathway Commons\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine the license and check if the source is Gene Ontology for each cellular component?", "output": "MATCH (n:CellularComponent) RETURN n.license, CASE WHEN n.source = \"Gene Ontology\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the source of each Pathway and specify if the license corresponds to CC BY 4.0.", "output": "MATCH (n:Pathway) RETURN n.source, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show the names of all 'MolecularFunction' nodes and specify if their identifier equals \"GO:0008374\"?", "output": "MATCH (n:MolecularFunction) RETURN n.name, CASE WHEN n.identifier = \"GO:0008374\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine the chromosome of each gene and check if its description reads \"oviductal glycoprotein 1, 120kDa\"?", "output": "MATCH (n:Gene) RETURN n.chromosome, CASE WHEN n.description = \"oviductal glycoprotein 1, 120kDa\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs of compound nodes along with an indication of whether their name is \"Estradiol valerate/Dienogest\" or not?", "output": "MATCH (n:Compound) RETURN n.url, CASE WHEN n.name = \"Estradiol valerate/Dienogest\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of each BiologicalProcess node, and does it have a license of \"CC BY 4.0\"?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the source information for nodes labeled as Anatomy, and indicate if their identifier matches \"UBERON:0001264\"?", "output": "MATCH (n:Anatomy) RETURN n.source, CASE WHEN n.identifier = \"UBERON:0001264\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the license and a confirmation of whether the URL of each symptom node is \"http://identifiers.org/mesh/D054058\".", "output": "MATCH (n:Symptom) RETURN n.license, CASE WHEN n.url = \"http://identifiers.org/mesh/D054058\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can you retrieve both the license of compounds and check if their URL equals \"http://www.drugbank.ca/drugs/DB08820\"?", "output": "MATCH (n:Compound) RETURN n.license, CASE WHEN n.url = \"http://www.drugbank.ca/drugs/DB08820\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I identify the names of pharmacologic classes and determine if their license is 'CC BY 4.0'?", "output": "MATCH (n:PharmacologicClass) RETURN n.name, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the source of each molecular function and verify whether its name is \"fatty-acyl-CoA synthase activity\" or not.", "output": "MATCH (n:MolecularFunction) RETURN n.source, CASE WHEN n.name = \"fatty-acyl-CoA synthase activity\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve each gene's description along with a 'Yes' or 'No' indicating whether its URL matches \"http://identifiers.org/ncbigene/3670\"?", "output": "MATCH (n:Gene) RETURN n.description, CASE WHEN n.url = \"http://identifiers.org/ncbigene/3670\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the URL of every compound and determine whether the identifier matches \"DB04890\", answering with \"Yes\" or \"No\".", "output": "MATCH (n:Compound) RETURN n.url, CASE WHEN n.identifier = \"DB04890\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of each pharmacologic class and check if its class type is defined as \"Physiologic Effect\".", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier, CASE WHEN n.class_type = \"Physiologic Effect\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular functions have identifiers and how can I verify if their names match \"transcription factor activity, RNA polymerase II basal transcription factor binding\"?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier, CASE WHEN n.name = \"transcription factor activity, RNA polymerase II basal transcription factor binding\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the license of each 'Gene' node, and does the source for each node identify as \"Entrez Gene\"?", "output": "MATCH (n:Gene) RETURN n.license, CASE WHEN n.source = \"Entrez Gene\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for each gene and check if its name matches \"SLC18A3\".", "output": "MATCH (n:Gene) RETURN n.identifier, CASE WHEN n.name = \"SLC18A3\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of genes and check if their URLs are \"http://identifiers.org/ncbigene/5596\".", "output": "MATCH (n:Gene) RETURN n.identifier, CASE WHEN n.url = \"http://identifiers.org/ncbigene/5596\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get each symptom's identifier along with a \"Yes\" or \"No\" indicating if the symptom's URL matches \"http://identifiers.org/mesh/D051474\"?", "output": "MATCH (n:Symptom) RETURN n.identifier, CASE WHEN n.url = \"http://identifiers.org/mesh/D051474\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of all anatomy nodes, indicating whether their identifier matches \"UBERON:0001687\"?", "output": "MATCH (n:Anatomy) RETURN n.name, CASE WHEN n.identifier = \"UBERON:0001687\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of cellular components and check whether they have a \"CC BY 4.0\" license?", "output": "MATCH (n:CellularComponent) RETURN n.url, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each compound's name and indicate whether its license is \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound) RETURN n.name, CASE WHEN n.license = \"CC BY-NC 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we output compound names and identify those with the specific identifier \"DB08941\" using \"Yes\" or \"No\"?", "output": "MATCH (n:Compound) RETURN n.name, CASE WHEN n.identifier = \"DB08941\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the names of pharmacologic classes and check if each is licensed with \"CC BY 4.0\"?", "output": "MATCH (n:PharmacologicClass) RETURN n.name, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the license of each symptom and indicate whether its name is \"Tremor\" by returning \"Yes\" or \"No\"?", "output": "MATCH (n:Symptom) RETURN n.license, CASE WHEN n.name = \"Tremor\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the license information for each Pathway while checking if the identifier \"PC7_3326\" is present?", "output": "MATCH (n:Pathway) RETURN n.license, CASE WHEN n.identifier = \"PC7_3326\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of genes and check if their license type is CC0 1.0 or not?", "output": "MATCH (n:Gene) RETURN n.url, CASE WHEN n.license = \"CC0 1.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the sources of BiologicalProcess nodes and tell me if their identifier matches \"GO:2000686\"?", "output": "MATCH (n:BiologicalProcess) RETURN n.source, CASE WHEN n.identifier = \"GO:2000686\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each pathway, what is its identifier, and does it have the name \"Hypoxia-mediated EMT and Stemness\"?", "output": "MATCH (n:Pathway) RETURN n.identifier, CASE WHEN n.name = \"Hypoxia-mediated EMT and Stemness\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would you determine if nodes labeled \"BiologicalProcess\" possess the URL \"http://purl.obolibrary.org/obo/GO_0071599,\" and what are their respective licenses?", "output": "MATCH (n:BiologicalProcess) RETURN n.license, CASE WHEN n.url = \"http://purl.obolibrary.org/obo/GO_0071599\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show the URL of each pathway along with a yes or no depending on whether its identifier is \"PC7_7767\"?", "output": "MATCH (n:Pathway) RETURN n.url, CASE WHEN n.identifier = \"PC7_7767\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers of all nodes labeled as Gene and indicate whether their name is \"OAF\"?", "output": "MATCH (n:Gene) RETURN n.identifier, CASE WHEN n.name = \"OAF\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses belong to Molecular Function nodes, and do any of these nodes have an identifier equal to \"GO:0015277\"?", "output": "MATCH (n:MolecularFunction) RETURN n.license, CASE WHEN n.identifier = \"GO:0015277\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the InChIKey for each compound node, and does its URL match \"http://www.drugbank.ca/drugs/DB01324\"?", "output": "MATCH (n:Compound) RETURN n.inchikey, CASE WHEN n.url = \"http://www.drugbank.ca/drugs/DB01324\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URLs of genes and determine if each belongs to chromosome 1?", "output": "MATCH (n:Gene) RETURN n.url, CASE WHEN n.chromosome = \"1\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine the chromosome of each gene and verify if it is sourced from \"Entrez Gene\"?", "output": "MATCH (n:Gene) RETURN n.chromosome, CASE WHEN n.source = \"Entrez Gene\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the URL of each gene and indicate if it is situated on chromosome 6?", "output": "MATCH (n:Gene) RETURN n.url, CASE WHEN n.chromosome = \"6\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify all molecular functions and determine if their name is specifically \"peptide-methionine (R)-S-oxide reductase activity\"?", "output": "MATCH (n:MolecularFunction) RETURN n.identifier, CASE WHEN n.name = \"peptide-methionine (R)-S-oxide reductase activity\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the source of each Pathway and indicate whether its license is \"CC BY 4.0\"?", "output": "MATCH (n:Pathway) RETURN n.source, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list the identifiers of genes along with a yes/no response indicating if each gene's source is \"Entrez Gene\"?", "output": "MATCH (n:Gene) RETURN n.identifier, CASE WHEN n.source = \"Entrez Gene\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I identify Cellular Components by name and determine if they are licensed under \"CC BY 4.0\"?", "output": "MATCH (n:CellularComponent) RETURN n.name, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes have the identifier of their pathway along with an indication if their name is \"Signaling by Activin\"?", "output": "MATCH (n:Pathway) RETURN n.identifier, CASE WHEN n.name = \"Signaling by Activin\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for each pathway and indicate whether their name is \"Signaling by FGFR in disease\"?", "output": "MATCH (n:Pathway) RETURN n.identifier, CASE WHEN n.name = \"Signaling by FGFR in disease\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers for biological processes along with a check if their license is \"CC BY 4.0\"?", "output": "MATCH (n:BiologicalProcess) RETURN n.identifier, CASE WHEN n.license = \"CC BY 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For every Pathway node, what is the source and whether it is under the \"CC0 1.0\" license?", "output": "MATCH (n:Pathway) RETURN n.source, CASE WHEN n.license = \"CC0 1.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the InChI numbers for the compound nodes, and is the compound's identifier equal to \"DB00630\"?", "output": "MATCH (n:Compound) RETURN n.inchi, CASE WHEN n.identifier = \"DB00630\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the InChiKey of compounds and determine if their InChI is equal to \"InChI=1S/C31H36N2O11/c1-14(2)7-8-16-13-17(9-11-19(16)34)27(37)33-21-22(35)18-10-12-20(15(3)24(18)42-28(21)38)41-29-23(36)25(43-30(32)39)26(40-6)31(4,5)44-29/h7,9-13,23,25-26,29,34-36H,8H2,1-6H3,(H2,32,39)(H,33,37)/t23-,25+,26-,29-/m1/s1\"?", "output": "MATCH (n:Compound) RETURN n.inchikey, CASE WHEN n.inchi = \"InChI=1S/C31H36N2O11/c1-14(2)7-8-16-13-17(9-11-19(16)34)27(37)33-21-22(35)18-10-12-20(15(3)24(18)42-28(21)38)41-29-23(36)25(43-30(32)39)26(40-6)31(4,5)44-29/h7,9-13,23,25-26,29,34-36H,8H2,1-6H3,(H2,32,39)(H,33,37)/t23-,25+,26-,29-/m1/s1\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Please show me the names of all compounds and determine if each one\u2019s URL is \"http://www.drugbank.ca/drugs/DB08871\", marking them as \"Yes\" or \"No\".", "output": "MATCH (n:Compound) RETURN n.name, CASE WHEN n.url = \"http://www.drugbank.ca/drugs/DB08871\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of genes and specify if they are licensed under \"CC0 1.0\".", "output": "MATCH (n:Gene) RETURN n.name, CASE WHEN n.license = \"CC0 1.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine the names of compounds along with their status of having a CC BY-NC 4.0 license?", "output": "MATCH (n:Compound) RETURN n.name, CASE WHEN n.license = \"CC BY-NC 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of entities classified as MolecularFunction and determine whether their source is Gene Ontology?", "output": "MATCH (n:MolecularFunction) RETURN n.url, CASE WHEN n.source = \"Gene Ontology\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each compound, what is the URL and does the compound have a \"CC BY-NC 4.0\" license labeled as \"Yes\" or \"No\"?", "output": "MATCH (n:Compound) RETURN n.url, CASE WHEN n.license = \"CC BY-NC 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find out the URL of each compound along with a confirmation if its identifier is DB00308?", "output": "MATCH (n:Compound) RETURN n.url, CASE WHEN n.identifier = \"DB00308\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find out the identifiers of pharmacologic classes and check if their source is labeled as \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass) RETURN n.identifier, CASE WHEN n.source = \"FDA via DrugCentral\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For every biological process, can you provide its URL and confirm if its source is Gene Ontology?", "output": "MATCH (n:BiologicalProcess) RETURN n.url, CASE WHEN n.source = \"Gene Ontology\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine the license of molecular function nodes and verify if they originate from Gene Ontology?", "output": "MATCH (n:MolecularFunction) RETURN n.license, CASE WHEN n.source = \"Gene Ontology\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list the sources of 'MolecularFunction' nodes along with a confirmation of whether their URL matches \"http://purl.obolibrary.org/obo/GO_0004992\"?", "output": "MATCH (n:MolecularFunction) RETURN n.source, CASE WHEN n.url = \"http://purl.obolibrary.org/obo/GO_0004992\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine if a compound's source is DrugBank and retrieve its InChIKey?", "output": "MATCH (n:Compound) RETURN n.inchikey, CASE WHEN n.source = \"DrugBank\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do the URLs of anatomy nodes compare in terms of being sourced from Uberon or not?", "output": "MATCH (n:Anatomy) RETURN n.url, CASE WHEN n.source = \"Uberon\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list the descriptions of genes and determine if each gene's source is \"Entrez Gene\"?", "output": "MATCH (n:Gene) RETURN n.description, CASE WHEN n.source = \"Entrez Gene\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine if a compound is named \"Carbinoxamine\" and retrieve its license from the database?", "output": "MATCH (n:Compound) RETURN n.license, CASE WHEN n.name = \"Carbinoxamine\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify each compound's InChIKey and indicate if their license type is \"CC BY-NC 4.0\" using a \"Yes\" or \"No\"?", "output": "MATCH (n:Compound) RETURN n.inchikey, CASE WHEN n.license = \"CC BY-NC 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I get the InChI for each compound and know if its source is DrugBank?", "output": "MATCH (n:Compound) RETURN n.inchi, CASE WHEN n.source = \"DrugBank\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list each gene's name along with a \"Yes\" or \"No\" indicating if its license is \"CC0 1.0\"?", "output": "MATCH (n:Gene) RETURN n.name, CASE WHEN n.license = \"CC0 1.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the names of all compounds and state whether their license is \"CC BY-NC 4.0\".", "output": "MATCH (n:Compound) RETURN n.name, CASE WHEN n.license = \"CC BY-NC 4.0\" THEN \"Yes\" ELSE \"No\" END"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Anatomy records where a mesh_id exists?", "output": "MATCH (n:Anatomy) WHERE EXISTS(n.mesh_id) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of disease entities that have been assigned a license in their records?", "output": "MATCH (n:Disease) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of 'BiologicalProcess' records that have the license property defined?", "output": "MATCH (n:BiologicalProcess) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of records labeled as 'Anatomy' that include a 'bto_id'?", "output": "MATCH (n:Anatomy) WHERE EXISTS(n.bto_id) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of PharmacologicClass entities with an existing class_type field?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS(n.class_type) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of diseases with an existing identifier attribute?", "output": "MATCH (n:Disease) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of genes where the chromosome data is available?", "output": "MATCH (n:Gene) WHERE EXISTS(n.chromosome) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many pharmacologic classes in the database possess the \"license\" property?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of \"CellularComponent\" entries that have a \"license\" field?", "output": "MATCH (n:CellularComponent) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of \"CellularComponent\" records where a \"url\" field is present?", "output": "MATCH (n:CellularComponent) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count how many disease entries include a name?", "output": "MATCH (n:Disease) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of genes where the description attribute is present?", "output": "MATCH (n:Gene) WHERE EXISTS(n.description) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of \"Pathway\" nodes with an existing \"identifier\" attribute?", "output": "MATCH (n:Pathway) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of pharmacologic classes that include a 'source' attribute?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of 'Pathway' nodes that include the 'source' field?", "output": "MATCH (n:Pathway) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of 'Disease' nodes that contain a 'url' field?", "output": "MATCH (n:Disease) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you count the number of pharmacologic classes that have a defined URL field?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many diseases in the database have a recorded source?", "output": "MATCH (n:Disease) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many 'PharmacologicClass' entries in the database contain an 'identifier' property?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of genes in the database that possess a URL field?", "output": "MATCH (n:Gene) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of 'Anatomy' entities that contain any value for the 'license' attribute?", "output": "MATCH (n:Anatomy) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of `BiologicalProcess` nodes that contain an `identifier` attribute?", "output": "MATCH (n:BiologicalProcess) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you tell me the number of Symptom records that possess a URL field?", "output": "MATCH (n:Symptom) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of \"Symptom\" nodes in the database that include an \"identifier\"?", "output": "MATCH (n:Symptom) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many gene nodes have a property labeled as 'license' associated with them in the database?", "output": "MATCH (n:Gene) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of BiologicalProcess nodes that possess a URL attribute?", "output": "MATCH (n:BiologicalProcess) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of 'SideEffect' nodes that contain an 'identifier'?", "output": "MATCH (n:SideEffect) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of 'Pathway' nodes that contain a 'license' attribute?", "output": "MATCH (n:Pathway) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of BiologicalProcess entities that are linked with a source?", "output": "MATCH (n:BiologicalProcess) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many labeled \"CellularComponent\" nodes exist with an assigned \"identifier\"?", "output": "MATCH (n:CellularComponent) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the quantity of compounds that are associated with a license?", "output": "MATCH (n:Compound) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of Pathway nodes that contain a URL property?", "output": "MATCH (n:Pathway) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the number of cellular components with a defined name?", "output": "MATCH (n:CellularComponent) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of \"MolecularFunction\" nodes that include a \"url\" attribute?", "output": "MATCH (n:MolecularFunction) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of 'MolecularFunction' records that possess a 'source' property?", "output": "MATCH (n:MolecularFunction) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of 'Anatomy' nodes where the 'identifier' property is present?", "output": "MATCH (n:Anatomy) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of \"BiologicalProcess\" entities that include a \"name\" attribute in the database?", "output": "MATCH (n:BiologicalProcess) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of 'SideEffect' nodes that contain a 'url' field?", "output": "MATCH (n:SideEffect) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you tell me how many Symptom entries possess a license field?", "output": "MATCH (n:Symptom) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the number of 'MolecularFunction' entities that possess a 'license' property?", "output": "MATCH (n:MolecularFunction) WHERE EXISTS(n.license) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find out how many gene entities are recorded with an identifier?", "output": "MATCH (n:Gene) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of 'MolecularFunction' entities that possess an 'identifier' field?", "output": "MATCH (n:MolecularFunction) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many entries exist within the \"MolecularFunction\" type that contain a 'name' property?", "output": "MATCH (n:MolecularFunction) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of Compound nodes with an existing url field?", "output": "MATCH (n:Compound) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many Pathway instances have a 'name' property present?", "output": "MATCH (n:Pathway) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the count of nodes with the label PharmacologicClass that have a 'name' property present?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many 'CellularComponent' entries in the database contain the 'source' field?", "output": "MATCH (n:CellularComponent) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of Symptom nodes that contain a name attribute?", "output": "MATCH (n:Symptom) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of compounds that include a name attribute?", "output": "MATCH (n:Compound) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find out how many \"Anatomy\" nodes possess a \"url\" field?", "output": "MATCH (n:Anatomy) WHERE EXISTS(n.url) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many genes are there that contain a 'source' property in their data?", "output": "MATCH (n:Gene) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many records of symptoms contain a defined 'source' property?", "output": "MATCH (n:Symptom) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the number of Compound nodes where the 'identifier' field is present?", "output": "MATCH (n:Compound) WHERE EXISTS(n.identifier) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total count of 'SideEffect' nodes that contain a 'source' attribute?", "output": "MATCH (n:SideEffect) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the total number of Anatomy nodes that include a source attribute?", "output": "MATCH (n:Anatomy) WHERE EXISTS(n.source) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many 'Anatomy' nodes exist in the database where the 'name' attribute is present?", "output": "MATCH (n:Anatomy) WHERE EXISTS(n.name) RETURN COUNT(n)"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find identifiers of diseases that are linked to genes through the ASSOCIATES_DaG relationship.", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:ASSOCIATES_DaG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of anatomy nodes that have an outgoing \"UPREGULATES_AuG\" relationship to any gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of compounds that are linked to at least one gene through the BINDS_CbG binding relationship.", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the identifiers of pharmacologic classes that have a compound associated with them via the INCLUDES_PCiC relationship?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS((n)-[:INCLUDES_PCiC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all disease nodes that have outgoing PRESENTS_DpS connections to symptom nodes?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:PRESENTS_DpS]->(:Symptom)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene names for nodes that participate in a 'COVARIES_GcG' relationship with at least one other gene?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers exist for diseases that have a 'DOWNREGULATES_DdG' connection with a gene?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:DOWNREGULATES_DdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic class names are associated with having at least one compound via the relationship INCLUDES_PCiC?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS((n)-[:INCLUDES_PCiC]->(:Compound)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the diseases that are connected to any gene via an 'ASSOCIATES_DaG' relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:ASSOCIATES_DaG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy nodes have a connection to a gene via the UPREGULATES_AuG relationship, and what are their mesh IDs?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.mesh_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of identifiers for diseases that resemble other diseases according to the \"RESEMBLES_DrD\" relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:RESEMBLES_DrD]->(:Disease)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the sources for diseases that are connected through a 'DOWNREGULATES_DdG' relationship to a gene?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:DOWNREGULATES_DdG]->(:Gene)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the sources for diseases that have a resemblance to another disease through the \"RESEMBLES_DrD\" path.", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:RESEMBLES_DrD]->(:Disease)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What source values are returned for compounds that have a \"RESEMBLES_CrC\" relationship to another compound?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for diseases that show symptoms through the PRESENTS_DpS relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:PRESENTS_DpS]->(:Symptom)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene nodes have outgoing 'COVARIES_GcG' relationships to other gene nodes, and what are the URLs for these genes?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses of all gene nodes that have a connection to a molecular function through the PARTICIPATES_GpMF relationship?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpMF]->(:MolecularFunction)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the diseases that are linked by a 'RESEMBLES_DrD' connection to another disease?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:RESEMBLES_DrD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sources correspond to diseases that are connected to genes via the \"ASSOCIATES_DaG\" relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:ASSOCIATES_DaG]->(:Gene)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are linked through the PARTICIPATES_GpMF relationship to a molecular function?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpMF]->(:MolecularFunction)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the licenses of diseases that resemble other diseases via the \"RESEMBLES_DrD\" relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:RESEMBLES_DrD]->(:Disease)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy nodes express a gene, and can you provide their identifiers?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:EXPRESSES_AeG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene descriptions can be found for genes that are involved in a 'COVARIES_GcG' relationship with any other gene?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy nodes have URL properties and are connected by a 'DOWNREGULATES_AdG' relationship to some gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses of all diseases that are connected to any anatomy node via a localization relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:LOCALIZES_DlA]->(:Anatomy)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy nodes have URLs and are linked to genes via the 'EXPRESSES_AeG' relationship?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:EXPRESSES_AeG]->(:Gene)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy nodes that participate in downregulating at least one gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have a 'REGULATES_GrG' relationship to at least one other gene, and what are their descriptions?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomical nodes with a BTO ID are connected to genes through a 'DOWNREGULATES_AdG' relationship?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the InChIKeys of compounds that are connected via a 'RESEMBLES_CrC' link to other compounds?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of compound names that have a \"RESEMBLES_CrC\" relationship to another compound?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sources are listed for anatomy nodes that express at least one gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:EXPRESSES_AeG]->(:Gene)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What sources are listed for diseases that upregulate at least one gene through a 'UPREGULATES_DuG' relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:UPREGULATES_DuG]->(:Gene)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses belong to pharmacologic classes that contain compounds linked by the INCLUDES_PCiC relationship?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS((n)-[:INCLUDES_PCiC]->(:Compound)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What sources are listed for anatomy nodes that actively downregulate at least one gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene licenses belong to genes that have outgoing 'REGULATES_GrG' relationships?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs for diseases that are linked to any gene through the 'ASSOCIATES_DaG' relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:ASSOCIATES_DaG]->(:Gene)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compounds that have a 'RESEMBLES_CrC' connection with other compounds and provide their identifiers.", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the database, which diseases have connections indicating they downregulate genes?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:DOWNREGULATES_DdG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease URLs correspond to diseases that are linked to others with a \"RESEMBLES_DrD\" relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:RESEMBLES_DrD]->(:Disease)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the identifiers of anatomy nodes that are known to upregulate certain genes?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the MeSH IDs of anatomy nodes that participate in the downregulation of genes.", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.mesh_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers for anatomy nodes that are linked to genes through a downregulation connection?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the InChIKeys of compounds that have been linked to palliating diseases?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the chromosomes where genes have a \":COVARIES_GcG\" type relationship with any other gene?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the sources of compounds that are linked to any genes through a \"BINDS_CbG\" relationship?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of anatomy nodes that have an upregulation relationship with any gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomical nodes in the graph express a gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:EXPRESSES_AeG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the license of each disease that can be connected through a downregulation relationship to a gene.", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:DOWNREGULATES_DdG]->(:Gene)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have been found to upregulate any genes according to the database?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:UPREGULATES_DuG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are linked through the 'COVARIES_GcG' relationship to other genes?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the sources for genes that are connected by a 'COVARIES_GcG' relationship to any other gene?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have URLs and are linked to any anatomy via the relationship LOCALIZES_DlA?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:LOCALIZES_DlA]->(:Anatomy)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of all anatomy entities that are associated with any gene through an upregulation process.", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses of anatomical parts that have a relationship labeled UPREGULATES_AuG with any gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses correspond to diseases that have connections to genes through the ASSOCIATES_DaG relationship?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:ASSOCIATES_DaG]->(:Gene)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the mesh IDs of anatomy nodes that have an expression relationship with any gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:EXPRESSES_AeG]->(:Gene)) RETURN n.mesh_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene licenses correspond to genes that have a \"COVARIES_GcG\" relationship to another gene?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which license types are associated with compounds that have a BINDS_CbG relationship to any gene?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of genes that regulate other genes through the \"REGULATES_GrG\" relationship?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are associated with a specific anatomical location according to the database?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:LOCALIZES_DlA]->(:Anatomy)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the compound identifiers for those compounds that alleviate or palliate diseases?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs of diseases that upregulate any gene according to the database?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:UPREGULATES_DuG]->(:Gene)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What licenses do genes hold if they are associated with cellular components through a \"PARTICIPATES_GpCC\" relationship?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the license information for compounds that have a RESEMBLES_CrC relationship with another compound?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the licenses of all compounds connected to diseases by a \"palliates\" relation?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the BTO IDs for anatomy nodes that have an expression relationship to any gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:EXPRESSES_AeG]->(:Gene)) RETURN n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the diseases that play a role in the upregulation of genes.", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:UPREGULATES_DuG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the InChI for all compounds with a binding connection to any gene.", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of genes that have a link to any cellular component through a participation connection.", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses are attributed to anatomy nodes that express one or more genes?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:EXPRESSES_AeG]->(:Gene)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list the licenses of genes that take part in some pathway activities?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the URLs for diseases that are associated with downregulating any gene?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:DOWNREGULATES_DdG]->(:Gene)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of compounds that have associations with palliating diseases?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers belong to compounds that are involved in the downregulation of genes?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are known to downregulate at least one gene?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the InChIKeys for compounds that interact with genes through binding?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the InChI identifiers of compounds that have a \"RESEMBLES_CrC\" relationship with another compound in the database?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.inchi"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the source of each gene that takes part in a molecular function.", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpMF]->(:MolecularFunction)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the licenses for anatomy nodes which are involved in downregulating a gene?", "output": "MATCH (n:Anatomy) WHERE EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs of diseases that have any symptoms connected to them?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:PRESENTS_DpS]->(:Symptom)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all compounds that have a relationship with a gene by upregulating it?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:UPREGULATES_CuG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the source information for genes that are linked to pathways.", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the URLs for pharmacologic classes that have at least one compound linked to them.", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS((n)-[:INCLUDES_PCiC]->(:Compound)) RETURN n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the InChIKeys of compounds that are linked to at least one side effect through the \"CAUSES_CcSE\" relationship?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:CAUSES_CcSE]->(:SideEffect)) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the disease identifiers where there is a relationship to an anatomy entity?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:LOCALIZES_DlA]->(:Anatomy)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names correspond to genes that are part of a pathway?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the chromosomes of genes that are participants in any type of pathway.", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the Inchikey of each compound that is linked to downregulating gene activity?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are identified as binding to at least one gene?", "output": "MATCH (n:Compound) WHERE EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find out the chromosome of each gene that participates in a cellular component?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.chromosome"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes that participate in at least one pathway?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes participate in cellular components, and what are their names?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of pharmacologic classes that have at least one associated compound?", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS((n)-[:INCLUDES_PCiC]->(:Compound)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the class types of pharmacologic classes that are linked to any compounds.", "output": "MATCH (n:PharmacologicClass) WHERE EXISTS((n)-[:INCLUDES_PCiC]->(:Compound)) RETURN n.class_type"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of diseases that have known anatomical localizations?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:LOCALIZES_DlA]->(:Anatomy)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease sources are there for diseases that exhibit symptoms?", "output": "MATCH (n:Disease) WHERE EXISTS((n)-[:PRESENTS_DpS]->(:Symptom)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the genes that are involved in interactions with other gene nodes?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:INTERACTS_GiG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have descriptions available for those that are part of a pathway?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources of genes that participate in any cellular component?", "output": "MATCH (n:Gene) WHERE EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier of the gene labeled \"neuroblastoma breakpoint family, member 19-like\"?", "output": "MATCH (n:Gene { description: \"neuroblastoma breakpoint family, member 19-like\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound that has the InChI identifier \"InChI=1S/C23H29ClFN3O4/c1-30-21-13-19(26)18(24)12-17(21)23(29)27-20-8-10-28(14-22(20)31-2)9-3-11-32-16-6-4-15(25)5-7-16/h4-7,12-13,20,22H,3,8-11,14,26H2,1-2H3,(H,27,29)/t20-,22+/m1/s1\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C23H29ClFN3O4/c1-30-21-13-19(26)18(24)12-17(21)23(29)27-20-8-10-28(14-22(20)31-2)9-3-11-32-16-6-4-15(25)5-7-16/h4-7,12-13,20,22H,3,8-11,14,26H2,1-2H3,(H,27,29)/t20-,22+/m1/s1\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class has the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000187063,\" and what is its name?", "output": "MATCH (n:PharmacologicClass { url: \"http://purl.bioontology.org/ontology/NDFRT/N0000187063\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the gene associated with Treacher Collins-Franceschetti syndrome 1?", "output": "MATCH (n:Gene { description: \"Treacher Collins-Franceschetti syndrome 1\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier of a gene that has the URL \"http://identifiers.org/ncbigene/23568\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/23568\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier associated with the \"Increased Hematopoietic Stem Cell Mobilization\" pharmacologic class?", "output": "MATCH (n:PharmacologicClass { name: \"Increased Hematopoietic Stem Cell Mobilization\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you tell me the name of the compound corresponding to the given InChI \"InChI=1S/C11H11F3N2O3/c1-6(2)10(17)15-7-3-4-9(16(18)19)8(5-7)11(12,13)14/h3-6H,1-2H3,(H,15,17)\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C11H11F3N2O3/c1-6(2)10(17)15-7-3-4-9(16(18)19)8(5-7)11(12,13)14/h3-6H,1-2H3,(H,15,17)\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound with the InChI identifier \"InChI=1S/Mg.H2O4S/c;1-5(2,3)4/h;(H2,1,2,3,4)/q+2;/p-2\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/Mg.H2O4S/c;1-5(2,3)4/h;(H2,1,2,3,4)/q+2;/p-2\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifier for the gene characterized by the description \"RAB24, member RAS oncogene family\"?", "output": "MATCH (n:Gene { description: \"RAB24, member RAS oncogene family\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the cellular component whose name is \"eukaryotic translation initiation factor 2B complex\".", "output": "MATCH (n:CellularComponent { name: \"eukaryotic translation initiation factor 2B complex\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier of the compound whose name is \"Metixene\"?", "output": "MATCH (n:Compound { name: \"Metixene\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the gene whose URL matches \"http://identifiers.org/ncbigene/84287\".", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/84287\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the specific gene with the description \"family with sequence similarity 227, member A\".", "output": "MATCH (n:Gene { description: \"family with sequence similarity 227, member A\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class has an identifier of \"N0000190482,\" and what is its name?", "output": "MATCH (n:PharmacologicClass { identifier: \"N0000190482\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the unique identifier for a compound that matches the InChI \"InChI=1S/C13H13N3/c1-2-16-13-5-11-9-3-8(6-14-7-9)10(11)4-12(13)15-1/h1-2,4-5,8-9,14H,3,6-7H2/t8-,9+\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C13H13N3/c1-2-16-13-5-11-9-3-8(6-14-7-9)10(11)4-12(13)15-1/h1-2,4-5,8-9,14H,3,6-7H2/t8-,9+\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier associated with the symptom called \"Psychomotor Agitation\"?", "output": "MATCH (n:Symptom { name: \"Psychomotor Agitation\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier for the gene with the description \"mitochondrial ribosomal protein L44\"?", "output": "MATCH (n:Gene { description: \"mitochondrial ribosomal protein L44\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the pathway with the identifier 'PC7_2523'?", "output": "MATCH (n:Pathway { identifier: \"PC7_2523\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of pharmacologic class names having the license \"CC BY 4.0\"?", "output": "MATCH (n:PharmacologicClass { license: \"CC BY 4.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the name of the compound that corresponds to the URL \"http://www.drugbank.ca/drugs/DB00348\"?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00348\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptom has the URL \"http://identifiers.org/mesh/D019080\" and what is its name?", "output": "MATCH (n:Symptom { url: \"http://identifiers.org/mesh/D019080\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier for an anatomy entry with the mesh_id of \"D017536\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D017536\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the name of the symptom that corresponds to the URL \"http://identifiers.org/mesh/D001836\"?", "output": "MATCH (n:Symptom { url: \"http://identifiers.org/mesh/D001836\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene has the given URL \"http://identifiers.org/ncbigene/158067,\" and what is its name?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/158067\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers for biological processes where the license type is \"CC BY 4.0\"?", "output": "MATCH (n:BiologicalProcess { license: \"CC BY 4.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Fetch the identifiers of cellular components whose license information is \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent { license: \"CC BY 4.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of pathways that hold a CC BY 4.0 license?", "output": "MATCH (n:Pathway { license: \"CC BY 4.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of pharmacologic classes that are sourced from the FDA via DrugCentral?", "output": "MATCH (n:PharmacologicClass { source: \"FDA via DrugCentral\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the corresponding compound's name for the given InChIKey \"InChIKey=UVSMNLNDYGZFPF-UHFFFAOYNA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=UVSMNLNDYGZFPF-UHFFFAOYNA-N\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one find the identifier of the compound linked to \"http://www.drugbank.ca/drugs/DB00563\"?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00563\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the symptom that has the identifier \"D020069\" and tell me its name?", "output": "MATCH (n:Symptom { identifier: \"D020069\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the gene with the URL identifier \"http://identifiers.org/ncbigene/152518\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/152518\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find the name of the compound linked to the specified URL \"http://www.drugbank.ca/drugs/DB00464\"?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00464\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the compound with the specified InChI string \"InChI=1S/C13H6Cl6O2/c14-6-2-8(16)12(20)4(10(6)18)1-5-11(19)7(15)3-9(17)13(5)21/h2-3,20-21H,1H2\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C13H6Cl6O2/c14-6-2-8(16)12(20)4(10(6)18)1-5-11(19)7(15)3-9(17)13(5)21/h2-3,20-21H,1H2\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier for the compound with the InChIKey of \"InChIKey=ATEBXHFBFRCZMA-VXTBVIBXSA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=ATEBXHFBFRCZMA-VXTBVIBXSA-N\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the identifier for the symptom known as \"Syncope\"?", "output": "MATCH (n:Symptom { name: \"Syncope\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of pharmacologic class names with a source specified as \"FDA via DrugCentral\"?", "output": "MATCH (n:PharmacologicClass { source: \"FDA via DrugCentral\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I want to know the name of the cellular component whose identifier is \"GO:0042825\". Can you find it?", "output": "MATCH (n:CellularComponent { identifier: \"GO:0042825\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names are attributed to the source \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway { source: \"Reactome via Pathway Commons\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifier does the database return for a compound with the specified InChI \"InChI=1S/C16H14O3/c1-11(16(18)19)13-8-5-9-14(10-13)15(17)12-6-3-2-4-7-12/h2-11H,1H3,(H,18,19)\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C16H14O3/c1-11(16(18)19)13-8-5-9-14(10-13)15(17)12-6-3-2-4-7-12/h2-11H,1H3,(H,18,19)\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifier of the CellularComponent called \"BLOC-3 complex\" in the database?", "output": "MATCH (n:CellularComponent { name: \"BLOC-3 complex\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of biological processes whose source is the Gene Ontology?", "output": "MATCH (n:BiologicalProcess { source: \"Gene Ontology\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names exist in the database with the source \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway { source: \"Reactome via Pathway Commons\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of all pathways which are designated with the \"CC BY 4.0\" license.", "output": "MATCH (n:Pathway { license: \"CC BY 4.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers for compounds with a source labeled as DrugBank?", "output": "MATCH (n:Compound { source: \"DrugBank\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do you find the identifier of the Compound entity with the URL \"http://www.drugbank.ca/drugs/DB00936\"?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00936\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the database, what is the name of the compound with the URL \"http://www.drugbank.ca/drugs/DB00962\"?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00962\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for genes that hold the \"CC0 1.0\" license.", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier associated with the \"LECT1\" gene?", "output": "MATCH (n:Gene { name: \"LECT1\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the name of the disease associated with the identifier \"DOID:175\"?", "output": "MATCH (n:Disease { identifier: \"DOID:175\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I extract the identifiers for anatomy entries where the source is \"Uberon\"?", "output": "MATCH (n:Anatomy { source: \"Uberon\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I obtain the identifier of a molecular function identified by the URL \"http://purl.obolibrary.org/obo/GO_0010997\"?", "output": "MATCH (n:MolecularFunction { url: \"http://purl.obolibrary.org/obo/GO_0010997\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the identifiers of all biological processes that possess the \"CC BY 4.0\" license?", "output": "MATCH (n:BiologicalProcess { license: \"CC BY 4.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the names of all biological processes that have \"Gene Ontology\" as their specified source.", "output": "MATCH (n:BiologicalProcess { source: \"Gene Ontology\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of cellular components with a license of \"CC BY 4.0\".", "output": "MATCH (n:CellularComponent { license: \"CC BY 4.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of pathway names that are attributed to the source \"Reactome via Pathway Commons\"?", "output": "MATCH (n:Pathway { source: \"Reactome via Pathway Commons\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier for a compound that is represented by the InChIKey \"XAUDJQYHKZQPEU-KVQBGUIXSA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=XAUDJQYHKZQPEU-KVQBGUIXSA-N\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifier for the compound with the name \"Fenoterol\"?", "output": "MATCH (n:Compound { name: \"Fenoterol\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier for the symptom labeled as \"Chronic Pain\"?", "output": "MATCH (n:Symptom { name: \"Chronic Pain\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound that has the InChIKey 'LZCDAPDGXCYOEH-UHFFFAOYSA-N'?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=LZCDAPDGXCYOEH-UHFFFAOYSA-N\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers for all genes that possess the \"CC0 1.0\" licensing.", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the names of pathways with a \"CC BY 4.0\" license?", "output": "MATCH (n:Pathway { license: \"CC BY 4.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the molecular function with the URL \"http://purl.obolibrary.org/obo/GO_0032934\"?", "output": "MATCH (n:MolecularFunction { url: \"http://purl.obolibrary.org/obo/GO_0032934\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy entities that have \"Uberon\" as their source?", "output": "MATCH (n:Anatomy { source: \"Uberon\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is the pathway with identifier \"PC7_4207\" labeled in terms of its name attribute?", "output": "MATCH (n:Pathway { identifier: \"PC7_4207\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the molecular function with the identifier \"GO:0005086\"?", "output": "MATCH (n:MolecularFunction { identifier: \"GO:0005086\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the name of the molecular function whose URL is \"http://purl.obolibrary.org/obo/GO_0032029\".", "output": "MATCH (n:MolecularFunction { url: \"http://purl.obolibrary.org/obo/GO_0032029\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which molecular function has the URL \"http://purl.obolibrary.org/obo/GO_0005010\", and what is its name?", "output": "MATCH (n:MolecularFunction { url: \"http://purl.obolibrary.org/obo/GO_0005010\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the biological process with the URL \"http://purl.obolibrary.org/obo/GO_0086065\"?", "output": "MATCH (n:BiologicalProcess { url: \"http://purl.obolibrary.org/obo/GO_0086065\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique identifiers for symptoms where the source is labeled as MeSH?", "output": "MATCH (n:Symptom { source: \"MeSH\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the name of the gene node with the specific URL \"http://identifiers.org/ncbigene/84914\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/84914\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of anatomy entities that have been assigned a \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of molecular functions where the source is specified as Gene Ontology.", "output": "MATCH (n:MolecularFunction { source: \"Gene Ontology\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components have been assigned the license \"CC BY 4.0\" and what are their names?", "output": "MATCH (n:CellularComponent { license: \"CC BY 4.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of each gene identified within chromosome 5?", "output": "MATCH (n:Gene { chromosome: \"5\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifier of the Anatomy node that has the specific URL \"http://purl.obolibrary.org/obo/UBERON_0001003\"?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0001003\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of all compounds whose license is marked as \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of each anatomy node that has its source specified as \"Uberon\"?", "output": "MATCH (n:Anatomy { source: \"Uberon\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifier for the biological process called \"pore complex assembly\"?", "output": "MATCH (n:BiologicalProcess { name: \"pore complex assembly\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers belong to pharmacologic classes specified by a class_type of \"Mechanism of Action\"?", "output": "MATCH (n:PharmacologicClass { class_type: \"Mechanism of Action\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifiers belong to molecular functions with the license specified as \"CC BY 4.0\"?", "output": "MATCH (n:MolecularFunction { license: \"CC BY 4.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathway names are associated with a license of \"CC BY 3.0\"?", "output": "MATCH (n:Pathway { license: \"CC BY 3.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of compounds that are licensed under \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of biological processes that have a CC BY 4.0 license?", "output": "MATCH (n:BiologicalProcess { license: \"CC BY 4.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifiers for genes licensed under \"CC0 1.0\"?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy items have the \"CC BY 3.0\" license, and what are their names?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are associated with the \"CC0 1.0\" license?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers belong to molecular functions that hold a \"CC BY 4.0\" license?", "output": "MATCH (n:MolecularFunction { license: \"CC BY 4.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the unique identifier associated with the compound having an InChIKey of \"HNDVDQJCIGZPNO-YFKPBYRVSA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=HNDVDQJCIGZPNO-YFKPBYRVSA-N\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy identifiers are retrieved when filtering by the source 'Uberon'?", "output": "MATCH (n:Anatomy { source: \"Uberon\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of pathway nodes that are labeled with the \"CC BY 3.0\" license.", "output": "MATCH (n:Pathway { license: \"CC BY 3.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the molecular function associated with the URL \"http://purl.obolibrary.org/obo/GO_0051184\"?", "output": "MATCH (n:MolecularFunction { url: \"http://purl.obolibrary.org/obo/GO_0051184\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of pathways that have a CC BY 4.0 license?", "output": "MATCH (n:Pathway { license: \"CC BY 4.0\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers belong to pharmacologic classes with the class type \"Chemical/Ingredient\"?", "output": "MATCH (n:PharmacologicClass { class_type: \"Chemical/Ingredient\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for pharmacologic classes where the class type is \"Chemical/Ingredient\"?", "output": "MATCH (n:PharmacologicClass { class_type: \"Chemical/Ingredient\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the identifier for a cellular component labeled as \"cell tip\"?", "output": "MATCH (n:CellularComponent { name: \"cell tip\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components have a CC BY 4.0 license, and what are their identifiers?", "output": "MATCH (n:CellularComponent { license: \"CC BY 4.0\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names are associated with the Gene Ontology as their source?", "output": "MATCH (n:CellularComponent { source: \"Gene Ontology\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of biological processes sourced from the Gene Ontology?", "output": "MATCH (n:BiologicalProcess { source: \"Gene Ontology\" }) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifier for the pathway titled \"DNA Replication\"?", "output": "MATCH (n:Pathway { name: \"DNA Replication\" }) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the compound with the given InChI code \"InChI=1/C13H11N3O4/c14-7-3-1-2-6-10(7)13(20)16(12(6)19)8-4-5-9(17)15-11(8)18/h1-3,8H,4-5,14H2,(H,15,17,18)\" that shows binding to a gene.", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1/C13H11N3O4/c14-7-3-1-2-6-10(7)13(20)16(12(6)19)8-4-5-9(17)15-11(8)18/h1-3,8H,4-5,14H2,(H,15,17,18)\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene identifiers for genes that are described as \"STIP1 homology and U-box containing protein 1, E3 ubiquitin protein ligase\" and are participating in a cellular component.", "output": "MATCH (n:Gene) WHERE n.description = \"STIP1 homology and U-box containing protein 1, E3 ubiquitin protein ligase\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifier for the disease named \"type 2 diabetes mellitus\" that has any gene association via the \"ASSOCIATES_DaG\" relationship?", "output": "MATCH (n:Disease) WHERE n.name = \"type 2 diabetes mellitus\" AND EXISTS((n)-[:ASSOCIATES_DaG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the compound with the InChIKey equal to \"InChIKey=ZPEIMTDSQAKGNT-UHFFFAOYSA-N\" that downregulates any gene?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=ZPEIMTDSQAKGNT-UHFFFAOYSA-N\" AND EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify compounds, through their identifiers, that hold a \"CC BY-NC 4.0\" license and have an existing relationship with genes via the \"BINDS_CbG\" relationship.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier of the compound named Ondansetron that is known to bind to genes?", "output": "MATCH (n:Compound) WHERE n.name = \"Ondansetron\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of the gene called \"RIC8A\" that takes part in any pathway?", "output": "MATCH (n:Gene) WHERE n.name = \"RIC8A\" AND EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene associated with the URL \"http://identifiers.org/ncbigene/91133\" that is involved in a \"COVARIES_GcG\" relationship with a different gene, and return its identifier.", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/91133\" AND EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the ID of the compound linked by a \"RESEMBLES_CrC\" relationship to another, that possesses the given InChI \"InChI=1S/C10H7N3S/c1-2-4-8-7(3-1)12-10(13-8)9-5-14-6-11-9/h1-6H,(H,12,13)\"?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C10H7N3S/c1-2-4-8-7(3-1)12-10(13-8)9-5-14-6-11-9/h1-6H,(H,12,13)\" AND EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound with the InChI identifier \"InChI=1S/C24H31NO/c1-23-11-9-18(26)14-17(23)5-6-19-21-8-7-20(16-4-3-13-25-15-16)24(21,2)12-10-22(19)23/h3-5,7,13,15,18-19,21-22,26H,6,8-12,14H2,1-2H3/t18-,19-,21-,22-,23-,24+/m0/s1\" that also has a relationship with a gene indicating it upregulates the gene?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C24H31NO/c1-23-11-9-18(26)14-17(23)5-6-19-21-8-7-20(16-4-3-13-25-15-16)24(21,2)12-10-22(19)23/h3-5,7,13,15,18-19,21-22,26H,6,8-12,14H2,1-2H3/t18-,19-,21-,22-,23-,24+/m0/s1\" AND EXISTS((n)-[:UPREGULATES_CuG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifier does the compound with InChIKey \"InChIKey=XBPZXDSZHPDXQU-UHFFFAOYSA-N\" have, provided it is linked to another compound through a \"RESEMBLES_CrC\" relationship?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=XBPZXDSZHPDXQU-UHFFFAOYSA-N\" AND EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which identifier corresponds to the disease having the URL \"http://purl.obolibrary.org/obo/DOID_216\" that also has an ASSOCIATES_DaG connection to any gene?", "output": "MATCH (n:Disease) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_216\" AND EXISTS((n)-[:ASSOCIATES_DaG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the compound associated with the InChIKey \"InChIKey=GIUYCYHIANZCFB-FJFJXFQQSA-N\" that also exhibits a binding interaction with a gene.", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=GIUYCYHIANZCFB-FJFJXFQQSA-N\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the gene with URL \"http://identifiers.org/ncbigene/5310\" that has a relationship indicating its participation in a cellular component.", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/5310\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the name of the compound whose URL is \"http://www.drugbank.ca/drugs/DB01411\" and is involved in the palliation of a disease.", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB01411\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the compound with the name \"Miconazole\" that upregulates a gene.", "output": "MATCH (n:Compound) WHERE n.name = \"Miconazole\" AND EXISTS((n)-[:UPREGULATES_CuG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers for genes described as \"transmembrane protein 14C\" that take part in any pathway?", "output": "MATCH (n:Gene) WHERE n.description = \"transmembrane protein 14C\" AND EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes having the description \"transmembrane protein 37\" that are part of pathways, and provide their identifiers.", "output": "MATCH (n:Gene) WHERE n.description = \"transmembrane protein 37\" AND EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compound, identified by the InChIKey \"InChIKey=NOYPYLRCIDNJJB-UHFFFAOYSA-N\", has a downregulation effect on a gene, and what is its corresponding identifier?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=NOYPYLRCIDNJJB-UHFFFAOYSA-N\" AND EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the disease with the specific URL \"http://purl.obolibrary.org/obo/DOID_10608\" that has a connection to a gene.", "output": "MATCH (n:Disease) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_10608\" AND EXISTS((n)-[:ASSOCIATES_DaG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the gene with the specific URL \"http://identifiers.org/ncbigene/339834\" that has a \"COVARIES_GcG\" relationship with another gene?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/339834\" AND EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Fetch the identifier for the anatomy labeled as \"sweat gland\", given it has an expression connection to a gene. What would that be?", "output": "MATCH (n:Anatomy) WHERE n.name = \"sweat gland\" AND EXISTS((n)-[:EXPRESSES_AeG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of anatomy entities that have a \"CC BY 3.0\" license and have an influence on the expression of a gene?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the disease with the URL \"http://purl.obolibrary.org/obo/DOID_784\" that also upregulates at least one gene?", "output": "MATCH (n:Disease) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_784\" AND EXISTS((n)-[:UPREGULATES_DuG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all anatomy nodes by their identifiers that hold the \"CC BY 3.0\" license and have at least one upregulation relationship linked to a gene.", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the gene labeled with the description \"regulatory factor X, 2 (influences HLA class II expression)\" that participates in a cellular component?", "output": "MATCH (n:Gene) WHERE n.description = \"regulatory factor X, 2 (influences HLA class II expression)\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier of the \"PTH\" gene that participates in any pathway?", "output": "MATCH (n:Gene) WHERE n.name = \"PTH\" AND EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the identifiers for compounds with a \"CC BY-NC 4.0\" license that have binding relationships with genes?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound with the URL \"http://www.drugbank.ca/drugs/DB06705\" that is known to palliate any disease?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB06705\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the anatomy entity that has a mesh_id of \"D017538\" and is involved in downregulating a gene?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D017538\" AND EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier for the \"TMCC2\" gene that exerts regulatory influence over another gene?", "output": "MATCH (n:Gene) WHERE n.name = \"TMCC2\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all diseases with a \"CC BY 3.0\" license that are recorded as having connections to one or more symptoms.", "output": "MATCH (n:Disease) WHERE n.license = \"CC BY 3.0\" AND EXISTS((n)-[:PRESENTS_DpS]->(:Symptom)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes having the description \"sushi domain containing 6\" that also participate in at least one pathway?", "output": "MATCH (n:Gene) WHERE n.description = \"sushi domain containing 6\" AND EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the compound that has the InChI code \"InChI=1S/C66H103N17O16S/c1-9-35(6)52(69)66-81-48(32-100-66)63(97)76-43(26-34(4)5)59(93)74-42(22-23-50(85)86)58(92)83-53(36(7)10-2)64(98)75-40-20-15-16-25-71-55(89)46(29-49(68)84)78-62(96)47(30-51(87)88)79-61(95)45(28-39-31-70-33-72-39)77-60(94)44(27-38-18-13-12-14-19-38)80-65(99)54(37(8)11-3)82-57(91)41(21-17-24-67)73-56(40)90/h12-14,18-19,31,33-37,40-48,52-54H,9-11,15-17,20-30,32,67,69H2,1-8H3,(H2,68,84)(H,70,72)(H,71,89)(H,73,90)(H,74,93)(H,75,98)(H,76,97)(H,77,94)(H,78,96)(H,79,95)(H,80,99)(H,82,91)(H,83,92)(H,85,86)(H,87,88)/t35-,36-,37-,40-,41+,42+,43-,44+,45-,46-,47+,48-,52-,53-,54-/m0/s1\" and has a resemblance relationship to another compound?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C66H103N17O16S/c1-9-35(6)52(69)66-81-48(32-100-66)63(97)76-43(26-34(4)5)59(93)74-42(22-23-50(85)86)58(92)83-53(36(7)10-2)64(98)75-40-20-15-16-25-71-55(89)46(29-49(68)84)78-62(96)47(30-51(87)88)79-61(95)45(28-39-31-70-33-72-39)77-60(94)44(27-38-18-13-12-14-19-38)80-65(99)54(37(8)11-3)82-57(91)41(21-17-24-67)73-56(40)90/h12-14,18-19,31,33-37,40-48,52-54H,9-11,15-17,20-30,32,67,69H2,1-8H3,(H2,68,84)(H,70,72)(H,71,89)(H,73,90)(H,74,93)(H,75,98)(H,76,97)(H,77,94)(H,78,96)(H,79,95)(H,80,99)(H,82,91)(H,83,92)(H,85,86)(H,87,88)/t35-,36-,37-,40-,41+,42+,43-,44+,45-,46-,47+,48-,52-,53-,54-/m0/s1\" AND EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene identifiers do we have for genes located on chromosome 17 that regulate other genes through the \"REGULATES_GrG\" relationship?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"17\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for genes that both come from the \"Entrez Gene\" source and regulate additional genes through the REGULATES_GrG relationship?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the compound with the URL \"http://www.drugbank.ca/drugs/DB00754\" that palliates at least one disease?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00754\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for any compound with the InChIKey \"InChIKey=GCKFUYQCUCGESZ-BPIQYHPVSA-N\" that is linked to another compound by a \"resembles\" relationship.", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=GCKFUYQCUCGESZ-BPIQYHPVSA-N\" AND EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifiers of compounds that possess a \"CC BY-NC 4.0\" license and are linked to other compounds through a resemblance relationship.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the gene with identifier \"221935\" that possesses a 'REGULATES_GrG' connection to any gene?", "output": "MATCH (n:Gene) WHERE n.identifier = \"221935\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of compounds that hold a \"CC BY-NC 4.0\" license and play a role in downregulating any gene.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the compound associated with the URL \"http://www.drugbank.ca/drugs/DB00499\" if it has any connections showing it treats diseases.", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00499\" AND EXISTS((n)-[:TREATS_CtD]->(:Disease)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases, sourced from the Disease Ontology, are known to upregulate any gene?", "output": "MATCH (n:Disease) WHERE n.source = \"Disease Ontology\" AND EXISTS((n)-[:UPREGULATES_DuG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the name of the compound with the ID \"DB01173\" that has a connection to a gene through a binding pathway.", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB01173\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound with the identifier \"DB00567\" that binds to a gene?", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB00567\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compounds whose license is \"CC BY-NC 4.0\" and who have a direct role in the upregulation of a gene.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:UPREGULATES_CuG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier for the compound known as \"Isosorbide Mononitrate\" that has a binding relationship with any gene in the database?", "output": "MATCH (n:Compound) WHERE n.name = \"Isosorbide Mononitrate\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the identifier of the gene associated with the URL \"http://identifiers.org/ncbigene/400713\" that takes part in a pathway.", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/400713\" AND EXISTS((n)-[:PARTICIPATES_GpPW]->(:Pathway)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes with a CC0 1.0 license that are part of cellular components and provide their names.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifier for the gene with the specified URL that is participating in some biological process?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/23053\" AND EXISTS((n)-[:PARTICIPATES_GpBP]->(:BiologicalProcess)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound with the identifier \"DB06335\" that is known to bind to any gene?", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB06335\" AND EXISTS((n)-[:BINDS_CbG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the gene identifiers for \"Entrez Gene\" that have a participation relationship with any cellular component.", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the compound with the InChI \"InChI=1S/C14H13N5O5S2/c1-2-5-3-25-12-8(11(21)19(12)9(5)13(22)23)17-10(20)7(18-24)6-4-26-14(15)16-6/h2,4,8,12,24H,1,3H2,(H2,15,16)(H,17,20)(H,22,23)/b18-7-/t8-,12-/m1/s1\" that is known to treat any disease?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C14H13N5O5S2/c1-2-5-3-25-12-8(11(21)19(12)9(5)13(22)23)17-10(20)7(18-24)6-4-26-14(15)16-6/h2,4,8,12,24H,1,3H2,(H2,15,16)(H,17,20)(H,22,23)/b18-7-/t8-,12-/m1/s1\" AND EXISTS((n)-[:TREATS_CtD]->(:Disease)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of compounds that possess a CC BY-NC 4.0 license and have been established to treat diseases.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:TREATS_CtD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we find the identifier of \"GRID1\" that is involved in regulation of another gene within the database?", "output": "MATCH (n:Gene) WHERE n.name = \"GRID1\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers of genes found on chromosome 17 that are associated with a biological process.", "output": "MATCH (n:Gene) WHERE n.chromosome = \"17\" AND EXISTS((n)-[:PARTICIPATES_GpBP]->(:BiologicalProcess)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier of a compound that has an InChI equivalence of \"InChI=1S/C7H7NO3/c8-4-1-2-5(7(10)11)6(9)3-4/h1-3,9H,8H2,(H,10,11)\" and is linked to a side effect?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C7H7NO3/c8-4-1-2-5(7(10)11)6(9)3-4/h1-3,9H,8H2,(H,10,11)\" AND EXISTS((n)-[:CAUSES_CcSE]->(:SideEffect)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of compounds that are allowed to be used under the \"CC BY-NC 4.0\" license and are connected to disease palliation.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy entities with a \"CC BY 3.0\" license are involved in downregulating any genes, and what are their identifiers?", "output": "MATCH (n:Anatomy) WHERE n.license = \"CC BY 3.0\" AND EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the \"TPST2\" gene that exhibits a genetic covariance relationship with any other gene.", "output": "MATCH (n:Gene) WHERE n.name = \"TPST2\" AND EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the \"Anatomy\" node with the mesh_id \"D020771\" that has an outgoing \"DOWNREGULATES_AdG\" relationship to a gene node?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D020771\" AND EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Provide the identifiers of compounds that possess the \"CC BY-NC 4.0\" license and demonstrate a palliative relationship with any disease.", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For genes labeled with source 'Entrez Gene', which ones have associations via COVARIES_GcG with other genes, and what are their respective identifiers?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" AND EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifiers of pharmacologic classes originating from \"FDA via DrugCentral\" that currently contain compounds?", "output": "MATCH (n:PharmacologicClass) WHERE n.source = \"FDA via DrugCentral\" AND EXISTS((n)-[:INCLUDES_PCiC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the anatomy entity with the mesh ID \"D004728\" that is linked to a gene through a downregulation relationship?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D004728\" AND EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the anatomical entity with MeSH ID \"D011150\" that is involved in upregulating any genes, and provide its name?", "output": "MATCH (n:Anatomy) WHERE n.mesh_id = \"D011150\" AND EXISTS((n)-[:UPREGULATES_AuG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the compound with the URL \"http://www.drugbank.ca/drugs/DB01245\" that resembles another compound?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB01245\" AND EXISTS((n)-[:RESEMBLES_CrC]->(:Compound)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the database, what is the identifier for the compound with the URL \"http://www.drugbank.ca/drugs/DB01117\" that has interactions leading to gene downregulation?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB01117\" AND EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the unique identifier for a compound with the given InChI that interacts through downregulation with a gene?", "output": "MATCH (n:Compound) WHERE n.inchi = \"InChI=1S/C17H20N2O2/c1-2-19(12-14-8-10-18-11-9-14)17(21)16(13-20)15-6-4-3-5-7-15/h3-11,16,20H,2,12-13H2,1H3\" AND EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the name of the disease corresponding to the URL \"http://purl.obolibrary.org/obo/DOID_11239\" that presents any symptoms.", "output": "MATCH (n:Disease) WHERE n.url = \"http://purl.obolibrary.org/obo/DOID_11239\" AND EXISTS((n)-[:PRESENTS_DpS]->(:Symptom)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier of the gene node that not only has a URL of \"http://identifiers.org/ncbigene/54991\" but also maintains a regulatory link with a different gene.", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/54991\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier for the gene at \"http://identifiers.org/ncbigene/105379433\" that takes part in any biological processes.", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/105379433\" AND EXISTS((n)-[:PARTICIPATES_GpBP]->(:BiologicalProcess)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the disease named \"lymphatic system cancer\" that is known to localize in any anatomical region?", "output": "MATCH (n:Disease) WHERE n.name = \"lymphatic system cancer\" AND EXISTS((n)-[:LOCALIZES_DlA]->(:Anatomy)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names can be found for those genes that have a \"CC0 1.0\" license and take part in cellular components?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the compound names with a \"CC BY-NC 4.0\" license that have been identified to palliate diseases?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound that has the URL \"http://www.drugbank.ca/drugs/DB00450\" and is known to treat at least one disease?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00450\" AND EXISTS((n)-[:TREATS_CtD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the gene names from the \"Entrez Gene\" source that are linked by a COVARIES_GcG relationship to another gene?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" AND EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of compounds that hold a \"CC BY-NC 4.0\" license and have a relationship of upregulating genes?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:UPREGULATES_CuG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the gene with the provided URL that participates in any association with a cellular component and return its identifier?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/100288908\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds with a \"CC BY-NC 4.0\" license that also have a palliative relationship with some disease?", "output": "MATCH (n:Compound) WHERE n.license = \"CC BY-NC 4.0\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes that possess a \"CC0 1.0\" license and have regulatory connections to other genes, and provide their identifiers.", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the genes whose license is CC0 1.0 and that are known to interact with other genes. What are their identifiers?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND EXISTS((n)-[:INTERACTS_GiG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify the compound with the URL \"http://www.drugbank.ca/drugs/DB00878\" that is associated with a downregulating effect on genes?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00878\" AND EXISTS((n)-[:DOWNREGULATES_CdG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifier for the gene named \"BMF\" that participates in at least one biological process?", "output": "MATCH (n:Gene) WHERE n.name = \"BMF\" AND EXISTS((n)-[:PARTICIPATES_GpBP]->(:BiologicalProcess)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes identified by \"Entrez Gene\" are connected through a 'COVARIES_GcG' relationship to other genes, and what are their identifiers?", "output": "MATCH (n:Gene) WHERE n.source = \"Entrez Gene\" AND EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do you identify the gene called \"23053\" that controls another gene, specifically looking for its name?", "output": "MATCH (n:Gene) WHERE n.identifier = \"23053\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the compound with the identifier \"DB06717\" that acts as a palliative for some disease.", "output": "MATCH (n:Compound) WHERE n.identifier = \"DB06717\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the identifier of the compound from DrugBank with the URL \"http://www.drugbank.ca/drugs/DB00227\" that upregulates any gene?", "output": "MATCH (n:Compound) WHERE n.url = \"http://www.drugbank.ca/drugs/DB00227\" AND EXISTS((n)-[:UPREGULATES_CuG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you tell me the name of the gene corresponding to the URL \"http://identifiers.org/ncbigene/91392\" if it partakes in a biological process?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/91392\" AND EXISTS((n)-[:PARTICIPATES_GpBP]->(:BiologicalProcess)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes that have a CC0 1.0 license and regulate other genes?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the gene names of those on chromosome 15 that have regulatory connections with any other genes.", "output": "MATCH (n:Gene) WHERE n.chromosome = \"15\" AND EXISTS((n)-[:REGULATES_GrG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, identified by their unique codes, are situated on chromosome 3 and have a connection of type \"COVARIES_GcG\" to any other gene?", "output": "MATCH (n:Gene) WHERE n.chromosome = \"3\" AND EXISTS((n)-[:COVARIES_GcG]->(:Gene)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy named with BTO ID \"BTO:0004368\" has a connection to reducing gene expression?", "output": "MATCH (n:Anatomy) WHERE n.bto_id = \"BTO:0004368\" AND EXISTS((n)-[:DOWNREGULATES_AdG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifiers for compounds labeled as palliating diseases, specifically those sourced from DrugBank.", "output": "MATCH (n:Compound) WHERE n.source = \"DrugBank\" AND EXISTS((n)-[:PALLIATES_CpD]->(:Disease)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases listed in the Disease Ontology that have localization relationships to parts of the anatomy?", "output": "MATCH (n:Disease) WHERE n.source = \"Disease Ontology\" AND EXISTS((n)-[:LOCALIZES_DlA]->(:Anatomy)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the compound with the InChIKey \"MJFJKKXQDNNUJF-UHFFFAOYSA-N\" that upregulates at least one gene?", "output": "MATCH (n:Compound) WHERE n.inchikey = \"InChIKey=MJFJKKXQDNNUJF-UHFFFAOYSA-N\" AND EXISTS((n)-[:UPREGULATES_CuG]->(:Gene)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that hold a \"CC0 1.0\" license and are associated with a cellular component?", "output": "MATCH (n:Gene) WHERE n.license = \"CC0 1.0\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name of the gene that has the URL \"http://identifiers.org/ncbigene/64005\" and is known to participate in a biological process?", "output": "MATCH (n:Gene) WHERE n.url = \"http://identifiers.org/ncbigene/64005\" AND EXISTS((n)-[:PARTICIPATES_GpBP]->(:BiologicalProcess)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the identifier of the \"MTFR1\" gene involved in any biological process?", "output": "MATCH (n:Gene) WHERE n.name = \"MTFR1\" AND EXISTS((n)-[:PARTICIPATES_GpBP]->(:BiologicalProcess)) RETURN n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of genes that are labeled with \"chromosome 6 open reading frame 141\" and have connections to cellular components.", "output": "MATCH (n:Gene) WHERE n.description = \"chromosome 6 open reading frame 141\" AND EXISTS((n)-[:PARTICIPATES_GpCC]->(:CellularComponent)) RETURN n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function \"tRNA (guanine-N7-)-methyltransferase activity\" and the pathway \"Mitochondrial ABC transporters\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"tRNA (guanine-N7-)-methyltransferase activity\" AND n2.name = \"Mitochondrial ABC transporters\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the shortest path linking \"metalloendopeptidase activity\" to the \"E-cadherin signaling in keratinocytes\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"metalloendopeptidase activity\" AND n2.name = \"E-cadherin signaling in keratinocytes\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can the \"sodium channel inhibitor activity\" molecular function be connected to the \"JNK signaling in the CD4+ TCR pathway\" via the shortest path?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"sodium channel inhibitor activity\" AND n2.name = \"JNK signaling in the CD4+ TCR pathway\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the shortest connection between \"ubiquitin-like protein binding\" and \"Serotonin Receptor 4/6/7 and NR3C Signaling\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"ubiquitin-like protein binding\" AND n2.name = \"Serotonin Receptor 4/6/7 and NR3C Signaling\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function \"voltage-gated potassium channel activity involved in cardiac muscle cell action potential repolarization\" and the pathway \"Acyl chain remodeling of CL\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"voltage-gated potassium channel activity involved in cardiac muscle cell action potential repolarization\" AND n2.name = \"Acyl chain remodeling of CL\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function \"6-phosphogluconolactonase activity\" and the pathway \"Role of second messengers in netrin-1 signaling\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"6-phosphogluconolactonase activity\" AND n2.name = \"Role of second messengers in netrin-1 signaling\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which relationships form the shortest route between \"chromo shadow domain binding\" as a molecular function and the \"LPA4-mediated signaling events\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"chromo shadow domain binding\" AND n2.name = \"LPA4-mediated signaling events\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which entities lie on the shortest path between the molecular function \"nucleotide diphosphatase activity\" and the pathway \"IL17 signaling pathway\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"nucleotide diphosphatase activity\" AND n2.name = \"IL17 signaling pathway\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the shortest possible route between the \"gap junction channel activity involved in cell communication by electrical coupling\" molecular function and the \"Gamma-carboxylation of protein precursors\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"gap junction channel activity involved in cell communication by electrical coupling\" AND n2.name = \"Gamma-carboxylation of protein precursors\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function \"interleukin-1 receptor binding\" and the \"Diclofenac Metabolic Pathway\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"interleukin-1 receptor binding\" AND n2.name = \"Diclofenac Metabolic Pathway\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we determine the shortest connection between the \"beta-tubulin binding\" molecular function and the \"N-glycan trimming and elongation in the cis-Golgi\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"beta-tubulin binding\" AND n2.name = \"N-glycan trimming and elongation in the cis-Golgi\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes and relationships form the shortest route between the \"G-protein coupled GABA receptor activity\" and the \"Notch signaling pathway\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"G-protein coupled GABA receptor activity\" AND n2.name = \"Notch signaling pathway\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function known as \"tropomyosin binding\" and the pathway involved in \"Vitamin B1 (thiamin) metabolism\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"tropomyosin binding\" AND n2.name = \"Vitamin B1 (thiamin) metabolism\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path that connects the molecular function \"MAP kinase kinase kinase activity\" and the pathway \"Signal regulatory protein (SIRP) family interactions\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"MAP kinase kinase kinase activity\" AND n2.name = \"Signal regulatory protein (SIRP) family interactions\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the pathways related to \"Antigen Presentation: Folding, assembly and peptide loading of class I MHC\" and the anatomical structure known as \"orbit of skull\"?", "output": "MATCH p = shortestPath((n1:Pathway)-[*]-(n2:Anatomy)) WHERE n1.name = \"Antigen Presentation: Folding, assembly and peptide loading of class I MHC\" AND n2.name = \"orbit of skull\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function \"ferric iron transmembrane transporter activity\" and the pathway \"Negative epigenetic regulation of rRNA expression\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"ferric iron transmembrane transporter activity\" AND n2.name = \"Negative epigenetic regulation of rRNA expression\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the direct sequence of connections between \"arginase activity\" and \"Opioid Signalling\" in terms of the shortest path?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"arginase activity\" AND n2.name = \"Opioid Signalling\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is \"axon guidance receptor activity\" directly or indirectly linked to \"Bile salt and organic anion SLC transporters,\" and what is the shortest route?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"axon guidance receptor activity\" AND n2.name = \"Bile salt and organic anion SLC transporters\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest connection path between the molecular function named \"complement component C3b binding\" and the pathway called \"Transcriptional activation of cell cycle inhibitor p21\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"complement component C3b binding\" AND n2.name = \"Transcriptional activation of cell cycle inhibitor p21\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is \"histone deacetylase regulator activity\" related to the \"Oxidative Stress\" pathway through the shortest path connecting them?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"histone deacetylase regulator activity\" AND n2.name = \"Oxidative Stress\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify the minimal relationship path linking the \"galanin receptor activity\" molecular function to the \"Interactions of Vpr with host cellular proteins\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"galanin receptor activity\" AND n2.name = \"Interactions of Vpr with host cellular proteins\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the shortest path linking \"glycerol kinase activity\" as a molecular function with the pathway \"Formation of the active cofactor, UDP-glucuronate\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"glycerol kinase activity\" AND n2.name = \"Formation of the active cofactor, UDP-glucuronate\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the shortest route between the molecular function \"3 iron, 4 sulfur cluster binding\" and the pathway \"APC-Cdc20 mediated degradation of Nek2A\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"3 iron, 4 sulfur cluster binding\" AND n2.name = \"APC-Cdc20 mediated degradation of Nek2A\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can \"malonyltransferase activity\" as a molecular function be linked via the shortest pathway to \"Reversal of Alkylation Damage By DNA Dioxygenases\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"malonyltransferase activity\" AND n2.name = \"Reversal of Alkylation Damage By DNA Dioxygenases\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the minimal path joining \"divalent inorganic cation transmembrane transporter activity\" molecular function with the \"Zinc efflux and compartmentalization by the SLC30 family\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"divalent inorganic cation transmembrane transporter activity\" AND n2.name = \"Zinc efflux and compartmentalization by the SLC30 family\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function \"low voltage-gated calcium channel activity\" and the \"Glucagon-type ligand receptors\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"low voltage-gated calcium channel activity\" AND n2.name = \"Glucagon-type ligand receptors\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function \"D1 dopamine receptor binding\" and the pathway \"Interactions of Tat with host cellular proteins\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"D1 dopamine receptor binding\" AND n2.name = \"Interactions of Tat with host cellular proteins\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path connecting the molecular function \"death receptor binding\" to the \"TP53 Network\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"death receptor binding\" AND n2.name = \"TP53 Network\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the briefest link or path possible between the inositol monophosphate 4-phosphatase activity molecular function and the actin folding pathway by CCT/TriC?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"inositol monophosphate 4-phosphatase activity\" AND n2.name = \"Folding of actin by CCT/TriC\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one find the shortest route connecting \"enzyme activator activity\" as a molecular function to \"Ephrin signaling\" as a pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"enzyme activator activity\" AND n2.name = \"Ephrin signaling\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How does the molecular function \"beta-N-acetylhexosaminidase activity\" connect to the pathway \"Type II interferon signaling (IFNG)\" via the shortest path?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"beta-N-acetylhexosaminidase activity\" AND n2.name = \"Type II interferon signaling (IFNG)\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the most direct connection between the \"kainate selective glutamate receptor activity\" and the pathway involving \"Insulin-like Growth Factor-2 mRNA Binding Proteins (IGF2BPs/IMPs/VICKZs) that bind RNA\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"kainate selective glutamate receptor activity\" AND n2.name = \"Insulin-like Growth Factor-2 mRNA Binding Proteins (IGF2BPs/IMPs/VICKZs) bind RNA\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you determine the shortest path that exists between the molecular function \"17-alpha,20-alpha-dihydroxypregn-4-en-3-one dehydrogenase activity\" and the corresponding pathway \"FGFR1b ligand binding and activation\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"17-alpha,20-alpha-dihydroxypregn-4-en-3-one dehydrogenase activity\" AND n2.name = \"FGFR1b ligand binding and activation\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the shortest path between the molecular function \"melanocyte-stimulating hormone receptor activity\" and the pathway \"ErbB4 signaling events\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"melanocyte-stimulating hormone receptor activity\" AND n2.name = \"ErbB4 signaling events\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest connection or path available between \"anaphase-promoting complex binding\" as a molecular function and \"Free fatty acid receptors\" as a pathway within the dataset?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"anaphase-promoting complex binding\" AND n2.name = \"Free fatty acid receptors\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the shortest relationship path connecting \"lactate transmembrane transporter activity\" as a MolecularFunction to \"IL1-mediated signaling events\" as a Pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"lactate transmembrane transporter activity\" AND n2.name = \"IL1-mediated signaling events\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one find the shortest pathway connecting the molecular function \"C-X-C chemokine binding\" to the \"Interleukin-6 signaling\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"C-X-C chemokine binding\" AND n2.name = \"Interleukin-6 signaling\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest pathway between the molecular function \"transferase activity, transferring pentosyl groups\" and the pathway named \"PD-1 signaling\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"transferase activity, transferring pentosyl groups\" AND n2.name = \"PD-1 signaling\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function named \"RNA polymerase II carboxy-terminal domain kinase activity\" and the pathway named \"Insulin receptor signalling cascade\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"RNA polymerase II carboxy-terminal domain kinase activity\" AND n2.name = \"Insulin receptor signalling cascade\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the shortest connection path between the molecular function named \"tumor necrosis factor binding\" and the pathway named \"Potassium transport channels\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"tumor necrosis factor binding\" AND n2.name = \"Potassium transport channels\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I determine the shortest path that links \"glycogenin glucosyltransferase activity\" with \"eyelash\" in terms of molecular function and anatomy?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Anatomy)) WHERE n1.name = \"glycogenin glucosyltransferase activity\" AND n2.name = \"eyelash\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are \"hydroxymethylglutaryl-CoA synthase activity\" and the \"Molybdenum cofactor biosynthesis\" pathway linked through the shortest possible route?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"hydroxymethylglutaryl-CoA synthase activity\" AND n2.name = \"Molybdenum cofactor biosynthesis\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the shortest connection between the function \u201clow-density lipoprotein particle receptor binding\u201d and the pathway \"CREB phosphorylation through the activation of CaMKII\" in the database?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"low-density lipoprotein particle receptor binding\" AND n2.name = \"CREB phosphorylation through the activation of CaMKII\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the minimum path that links the \"organophosphate ester transmembrane transporter activity\" molecular function to the \"Glypican 2 network\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"organophosphate ester transmembrane transporter activity\" AND n2.name = \"Glypican 2 network\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function named \"carbohydrate phosphatase activity\" and the pathway named \"Synthesis of epoxy (EET) and dihydroxyeicosatrienoic acids (DHET)\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"carbohydrate phosphatase activity\" AND n2.name = \"Synthesis of epoxy (EET) and dihydroxyeicosatrienoic acids (DHET)\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the briefest route connecting the \"lactose binding\" molecular function to the \"APC/C-mediated degradation of cell cycle proteins\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"lactose binding\" AND n2.name = \"APC/C-mediated degradation of cell cycle proteins\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the quickest route between \"IgE receptor activity\" as a molecular function and \"Mismatch repair\" as a pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"IgE receptor activity\" AND n2.name = \"Mismatch repair\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the most direct connection, in terms of relationships, between \"taste receptor activity\" and the \"Calcium signaling in the CD4+ TCR pathway\" within the network?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"taste receptor activity\" AND n2.name = \"Calcium signaling in the CD4+ TCR pathway\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path connecting the molecular function named \"sulfuric ester hydrolase activity\" and the pathway labeled as \"RNF mutants show enhanced WNT signaling and proliferation\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"sulfuric ester hydrolase activity\" AND n2.name = \"RNF mutants show enhanced WNT signaling and proliferation\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the shortest connection between the molecular function \"phosphorelay sensor kinase activity\" and the pathway known as \"PLK2 and PLK4 events\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"phosphorelay sensor kinase activity\" AND n2.name = \"PLK2 and PLK4 events\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the shortest path between the molecular function \"17-alpha,20-alpha-dihydroxypregn-4-en-3-one dehydrogenase activity\" and the pathway \"Adrenaline, noradrenaline inhibits insulin secretion\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"17-alpha,20-alpha-dihydroxypregn-4-en-3-one dehydrogenase activity\" AND n2.name = \"Adrenaline,noradrenaline inhibits insulin secretion\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is the \"dopamine neurotransmitter receptor activity, coupled via Gs\" function related to the \"Bile acid and bile salt metabolism\" pathway by the shortest possible path?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"dopamine neurotransmitter receptor activity, coupled via Gs\" AND n2.name = \"Bile acid and bile salt metabolism\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are the pathway titled \"Oxygen-dependent proline hydroxylation of Hypoxia-inducible Factor Alpha\" and the \"middle cerebral artery\" anatomically connected, and what is the shortest path between them?", "output": "MATCH p = shortestPath((n1:Pathway)-[*]-(n2:Anatomy)) WHERE n1.name = \"Oxygen-dependent proline hydroxylation of Hypoxia-inducible Factor Alpha\" AND n2.name = \"middle cerebral artery\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one determine the shortest path in the network that connects \"fucosyltransferase activity\" to the \"Interleukin-3, 5 and GM-CSF signaling\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"fucosyltransferase activity\" AND n2.name = \"Interleukin-3, 5 and GM-CSF signaling\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How would one determine the shortest sequence of relationships from the \"TRAF3-dependent IRF activation pathway\" to the \"dura mater\"?", "output": "MATCH p = shortestPath((n1:Pathway)-[*]-(n2:Anatomy)) WHERE n1.name = \"TRAF3-dependent IRF activation pathway\" AND n2.name = \"dura mater\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the shortest connection path between the \"BMP receptor signaling\" pathway and the \"tibial nerve\" anatomy within the network?", "output": "MATCH p = shortestPath((n1:Pathway)-[*]-(n2:Anatomy)) WHERE n1.name = \"BMP receptor signaling\" AND n2.name = \"tibial nerve\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can the \"N-terminal protein N-methyltransferase activity\" molecular function be linked to the \"Inflammatory Response Pathway\", using the shortest path?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"N-terminal protein N-methyltransferase activity\" AND n2.name = \"Inflammatory Response Pathway\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which is the shortest route linking \"G-protein coupled neurotransmitter receptor activity\" within molecular functions to \"fovea centralis\" among anatomical entities?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Anatomy)) WHERE n1.name = \"G-protein coupled neurotransmitter receptor activity\" AND n2.name = \"fovea centralis\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path connecting the molecular function \"heteroduplex DNA loop binding\" to the pathway \"WNT5A-dependent internalization of FZD4\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"heteroduplex DNA loop binding\" AND n2.name = \"WNT5A-dependent internalization of FZD4\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is the shortest path determined between the MolecularFunction 'cofactor binding' and the Pathway labeled as \"TCA Cycle Nutrient Utilization and Invasiveness of Ovarian Cancer\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"cofactor binding\" AND n2.name = \"TCA Cycle Nutrient Utilization and Invasiveness of Ovarian Cancer\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path in the network between the molecular function \"indoleamine 2,3-dioxygenase activity\" and the pathway \"Downstream signal transduction\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"indoleamine 2,3-dioxygenase activity\" AND n2.name = \"Downstream signal transduction\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function named \"endodeoxyribonuclease activity\" and the pathway called \"O-glycosylation of TSR domain-containing proteins\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"endodeoxyribonuclease activity\" AND n2.name = \"O-glycosylation of TSR domain-containing proteins\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the briefest route that links the molecular function \"NADH dehydrogenase (ubiquinone) activity\" to the pathway \"Scavenging of heme from plasma\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"NADH dehydrogenase (ubiquinone) activity\" AND n2.name = \"Scavenging of heme from plasma\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the shortest route connecting the \"Interaction With The Zona Pellucida\" pathway to the \"radial artery\" anatomy?", "output": "MATCH p = shortestPath((n1:Pathway)-[*]-(n2:Anatomy)) WHERE n1.name = \"Interaction With The Zona Pellucida\" AND n2.name = \"radial artery\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the series of connections that form the shortest route linking the molecular function \"single-stranded DNA endodeoxyribonuclease activity\" to the pathway \"Receptor-ligand binding initiates the second proteolytic cleavage of Notch receptor\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"single-stranded DNA endodeoxyribonuclease activity\" AND n2.name = \"Receptor-ligand binding initiates the second proteolytic cleavage of Notch receptor\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the simplest route from the \"Synthesis of 12-eicosatetraenoic acid derivatives\" pathway to the \"elastic tissue\" node?", "output": "MATCH p = shortestPath((n1:Pathway)-[*]-(n2:Anatomy)) WHERE n1.name = \"Synthesis of 12-eicosatetraenoic acid derivatives\" AND n2.name = \"elastic tissue\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the briefest path that connects \"phosphatidylinositol trisphosphate phosphatase activity\" as a molecular function to the pathway known as \"IRE1alpha activates chaperones\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"phosphatidylinositol trisphosphate phosphatase activity\" AND n2.name = \"IRE1alpha activates chaperones\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is the molecular function \"carbonyl reductase (NADPH) activity\" connected to the pathway \"Activation of the phototransduction cascade\" in the shortest number of steps?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"carbonyl reductase (NADPH) activity\" AND n2.name = \"Activation of the phototransduction cascade\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is the molecular function \"single thymine insertion binding\" connected to the pathway \"Osteoblast Signaling\" through the shortest route?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"single thymine insertion binding\" AND n2.name = \"Osteoblast Signaling\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between a molecular function named \"cytokine receptor binding\" and a pathway called \"Heme Biosynthesis\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"cytokine receptor binding\" AND n2.name = \"Heme Biosynthesis\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the quickest link, in terms of connections, between the entity \"angiotensin type II receptor activity\" within molecular functions and the pathway \"TFs Regulate miRNAs related to cardiac hypertrophy\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"angiotensin type II receptor activity\" AND n2.name = \"TFs Regulate miRNAs related to cardiac hypertrophy\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the shortest path connecting a molecular function called \"protein carboxyl O-methyltransferase activity\" to a biological pathway known as \"Early Phase of HIV Life Cycle\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"protein carboxyl O-methyltransferase activity\" AND n2.name = \"Early Phase of HIV Life Cycle\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the shortest connection between the \"exodeoxyribonuclease activity, producing 5'-phosphomonoesters\" molecular function and the \"Insulin-mediated glucose transport\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"exodeoxyribonuclease activity, producing 5'-phosphomonoesters\" AND n2.name = \"Insulin-mediated glucose transport\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the minimal connection path between the nodes representing \"clathrin light chain binding\" as a Molecular Function and \"Transport of the SLBP independent Mature mRNA\" as a Pathway in the network?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"clathrin light chain binding\" AND n2.name = \"Transport of the SLBP independent Mature mRNA\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How is the \"very-long-chain-(S)-2-hydroxy-acid oxidase activity\" function connected to the \"Activation of RAS in B cells\" pathway in the shortest possible way?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"very-long-chain-(S)-2-hydroxy-acid oxidase activity\" AND n2.name = \"Activation of RAS in B cells\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function \"glycogenin glucosyltransferase activity\" and the anatomical structure \"radial artery\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Anatomy)) WHERE n1.name = \"glycogenin glucosyltransferase activity\" AND n2.name = \"radial artery\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sequence of relationships forms the shortest path from \"ribosomal small subunit binding\" to the \"Cytosolic tRNA aminoacylation\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"ribosomal small subunit binding\" AND n2.name = \"Cytosolic tRNA aminoacylation\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest connection between the molecular function named \"superoxide dismutase copper chaperone activity\" and the pathway known as \"Nephrin interactions\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"superoxide dismutase copper chaperone activity\" AND n2.name = \"Nephrin interactions\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the pathway named \"Role of Calcineurin-dependent NFAT signaling in lymphocytes\" and the anatomy part called \"spinal cord\"?", "output": "MATCH p = shortestPath((n1:Pathway)-[*]-(n2:Anatomy)) WHERE n1.name = \"Role of Calcineurin-dependent NFAT signaling in lymphocytes\" AND n2.name = \"spinal cord\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do we determine the shortest route connecting the entities \"beta-galactosidase activity\" and \"WNT5A-dependent internalization of FZD4\" based on their roles as MolecularFunction and Pathway, respectively?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"beta-galactosidase activity\" AND n2.name = \"WNT5A-dependent internalization of FZD4\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the most direct connection path that links the \"regulatory region DNA binding\" molecular function to the \"Adrenaline,noradrenaline inhibits insulin secretion\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"regulatory region DNA binding\" AND n2.name = \"Adrenaline,noradrenaline inhibits insulin secretion\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the briefest route that can be mapped from \"cation transmembrane transporter activity\" to the pathway of \"Beta defensins\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"cation transmembrane transporter activity\" AND n2.name = \"Beta defensins\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the minimal connection between the entity labeled \"small GTPase binding\" in MolecularFunction and \"Signaling mediated by p38-alpha and p38-beta\" in Pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"small GTPase binding\" AND n2.name = \"Signaling mediated by p38-alpha and p38-beta\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the shortest route between the \"Vitamin D Metabolism\" pathway and the \"aortic valve\" anatomical structure?", "output": "MATCH p = shortestPath((n1:Pathway)-[*]-(n2:Anatomy)) WHERE n1.name = \"Vitamin D Metabolism\" AND n2.name = \"aortic valve\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are the \"cell adhesion molecule binding\" function and the \"EGFR interacts with phospholipase C-gamma\" pathway linked via the shortest route in the network?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"cell adhesion molecule binding\" AND n2.name = \"EGFR interacts with phospholipase C-gamma\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path connecting the molecular function named \"dihydropyrimidinase activity\" to the pathway called \"Transport of organic anions\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"dihydropyrimidinase activity\" AND n2.name = \"Transport of organic anions\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest connection between a molecular function exhibiting \"UDP-xylosyltransferase activity\" and the \"E2F mediated regulation of DNA replication\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"UDP-xylosyltransferase activity\" AND n2.name = \"E2F mediated regulation of DNA replication\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path in the network between the molecular function \"zinc ion transmembrane transporter activity\" and the biological pathway \"Chondroitin sulfate/dermatan sulfate metabolism\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"zinc ion transmembrane transporter activity\" AND n2.name = \"Chondroitin sulfate/dermatan sulfate metabolism\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the shortest route between the Molecular Function \"sphingolipid transporter activity\" and the Anatomical component \"juxtaglomerular apparatus\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Anatomy)) WHERE n1.name = \"sphingolipid transporter activity\" AND n2.name = \"juxtaglomerular apparatus\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the minimal route that connects the molecular function named \"activin receptor activity, type I\" with the pathway known as \"G1/S Transition\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"activin receptor activity, type I\" AND n2.name = \"G1/S Transition\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest pathway connecting the molecular function named \"telomerase inhibitor activity\" to the pathway named \"SREBF and miR33 in cholesterol and lipid homeostasis\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"telomerase inhibitor activity\" AND n2.name = \"SREBF and miR33 in cholesterol and lipid homeostasis\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify the shortest path that connects the node representing \"miRNA binding\" to the node representing \"The retinoid cycle in cones (daylight vision)\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"miRNA binding\" AND n2.name = \"The retinoid cycle in cones (daylight vision)\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the shortest route connecting the \"aldehyde oxidase activity\" function to the \"Monoamine Transport\" pathway?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"aldehyde oxidase activity\" AND n2.name = \"Monoamine Transport\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function named \"insulin-like growth factor receptor binding\" and the pathway named \"Glucuronidation\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"insulin-like growth factor receptor binding\" AND n2.name = \"Glucuronidation\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between a molecular function known as \"cholesterol transporter activity\" and an anatomical part labeled \"ligament\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Anatomy)) WHERE n1.name = \"cholesterol transporter activity\" AND n2.name = \"ligament\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between a molecular function named \"phosphatidylinositol-3,5-bisphosphate 3-phosphatase activity\" and a pathway called \"Mitochondrial biogenesis\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"phosphatidylinositol-3,5-bisphosphate 3-phosphatase activity\" AND n2.name = \"Mitochondrial biogenesis\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path between the molecular function 'taste receptor activity' and the pathway labeled as 'Disease'?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"taste receptor activity\" AND n2.name = \"Disease\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path connecting the molecular function named \"[acetyl-CoA carboxylase] kinase activity\" and the pathway titled \"EV release from cardiac cells and their functional effects\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"[acetyl-CoA carboxylase] kinase activity\" AND n2.name = \"EV release from cardiac cells and their functional effects\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the shortest connection between a molecular function with the name \"calcium channel inhibitor activity\" and a pathway named \"Polyol Pathway\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"calcium channel inhibitor activity\" AND n2.name = \"Polyol Pathway\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the shortest path connecting a molecular function called \"L-serine ammonia-lyase activity\" to a pathway known as \"Fertilization\"?", "output": "MATCH p = shortestPath((n1:MolecularFunction)-[*]-(n2:Pathway)) WHERE n1.name = \"L-serine ammonia-lyase activity\" AND n2.name = \"Fertilization\" RETURN p"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all nodes and paths connected to a 'SideEffect' node that holds a \"CC BY-NC-SA 4.0\" license?", "output": "MATCH path=(:SideEffect {license:\"CC BY-NC-SA 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I identify every node that has a direct relationship from the pathway with identifier \"PC7_6877\"?", "output": "MATCH path=(:Pathway {identifier:\"PC7_6877\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all the immediate neighbors of the 'Hypoxia-mediated EMT and Stemness' pathway node along with their connecting relationships?", "output": "MATCH path=(:Pathway {name:\"Hypoxia-mediated EMT and Stemness\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the connected nodes for the gene described as \"glutamic pyruvate transaminase (alanine aminotransferase) 2\"?", "output": "MATCH path=(:Gene {description:\"glutamic pyruvate transaminase (alanine aminotransferase) 2\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return all paths starting from nodes labeled 'SideEffect' with a specific source of 'UMLS via SIDER 4.1' to any connected nodes?", "output": "MATCH path=(:SideEffect {source:\"UMLS via SIDER 4.1\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find every node and relationship associated with the pharmacologic class called \"Phosphodiesterase 5 Inhibitors\"?", "output": "MATCH path=(:PharmacologicClass {name:\"Phosphodiesterase 5 Inhibitors\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly associated with the gene named \"neurotrophic tyrosine kinase, receptor, type 3\"?", "output": "MATCH path=(:Gene {description:\"neurotrophic tyrosine kinase, receptor, type 3\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify all subsequent nodes connected to a symptom node that has the \"CC0 1.0\" license?", "output": "MATCH path=(:Symptom {license:\"CC0 1.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all direct connections of the node representing the \"Na+-dependent glucose transporters\" pathway?", "output": "MATCH path=(:Pathway {name:\"Na+-dependent glucose transporters\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the network of nodes directly connected to a gene that is associated with the \"CC0 1.0\" license?", "output": "MATCH path=(:Gene {license:\"CC0 1.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all nodes directly linked to the cellular component node with the URL \"http://purl.obolibrary.org/obo/GO_0045281\" and display these connections?", "output": "MATCH path=(:CellularComponent {url:\"http://purl.obolibrary.org/obo/GO_0045281\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly connected to the pathway identified as 'PC7_7767'?", "output": "MATCH path=(:Pathway {identifier:\"PC7_7767\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all connections stemming from a pathway node identified by the source \"Reactome via Pathway Commons\"?", "output": "MATCH path=(:Pathway {source:\"Reactome via Pathway Commons\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all nodes that are directly connected to the CellularComponent represented by the URL \"http://purl.obolibrary.org/obo/GO_0032593\".", "output": "MATCH path=(:CellularComponent {url:\"http://purl.obolibrary.org/obo/GO_0032593\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all paths connected to a SideEffect node that holds the \"CC BY-NC-SA 4.0\" license?", "output": "MATCH path=(:SideEffect {license:\"CC BY-NC-SA 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes have a direct relationship with the node representing the \"interleukin-27 receptor binding\" molecular function?", "output": "MATCH path=(:MolecularFunction {name:\"interleukin-27 receptor binding\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the relationships involving a 'Compound' node that has the 'CC BY-NC 4.0' license?", "output": "MATCH path=(:Compound {license:\"CC BY-NC 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes and their connecting relationships are adjacent to the pathway node \"PC7_1543\"?", "output": "MATCH path=(:Pathway {identifier:\"PC7_1543\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find paths branching out from any node labeled as a Pathway with the \"CC BY 4.0\" license?", "output": "MATCH path=(:Pathway {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes can be found directly connected from the gene node with the name \"VPS13D\"?", "output": "MATCH path=(:Gene {name:\"VPS13D\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve all nodes that are directly linked to the symptom represented by the URL \"http://identifiers.org/mesh/D007040\"?", "output": "MATCH path=(:Symptom {url:\"http://identifiers.org/mesh/D007040\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly connected to the gene node with the identifier 94137?", "output": "MATCH path=(:Gene {identifier:\"94137\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist from the node representing the pathway \"Signaling by Activin\" to its adjacent nodes?", "output": "MATCH path=(:Pathway {name:\"Signaling by Activin\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all relationships originating from a Pathway node with \"WikiPathways\" as the source?", "output": "MATCH path=(:Pathway {source:\"WikiPathways\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are nodes connected to the node with the name \"peptide-methionine (R)-S-oxide reductase activity\" for molecular functions?", "output": "MATCH path=(:MolecularFunction {name:\"peptide-methionine (R)-S-oxide reductase activity\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify the paths linked to 'SideEffect' nodes that are under the 'CC BY-NC-SA 4.0' license?", "output": "MATCH path=(:SideEffect {license:\"CC BY-NC-SA 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all connections starting from a CellularComponent node that has been licensed under \"CC BY 4.0\"?", "output": "MATCH path=(:CellularComponent {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show all the nodes directly connected to the pathway with the identifier \"PC7_3060\"?", "output": "MATCH path=(:Pathway {identifier:\"PC7_3060\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all paths associated with pathway nodes that are licensed under \"CC BY 4.0\".", "output": "MATCH path=(:Pathway {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all direct paths from nodes labeled 'BiologicalProcess' with the attribute license set to \"CC BY 4.0\".", "output": "MATCH path=(:BiologicalProcess {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve all direct relationships starting from \"Gene Ontology\" sourced \"BiologicalProcess\" nodes?", "output": "MATCH path=(:BiologicalProcess {source:\"Gene Ontology\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I see all connections to nodes that are linked to a compound with a \"CC BY-NC 4.0\" license?", "output": "MATCH path=(:Compound {license:\"CC BY-NC 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return all paths starting from the node with the molecular function named \"fatty-acyl-CoA synthase activity\"?", "output": "MATCH path=(:MolecularFunction {name:\"fatty-acyl-CoA synthase activity\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all connected nodes and relationships starting from a biological process identified by the URL \"http://purl.obolibrary.org/obo/GO_0002793\"?", "output": "MATCH path=(:BiologicalProcess {url:\"http://purl.obolibrary.org/obo/GO_0002793\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find paths that extend from BiologicalProcess nodes identified as coming from \"Gene Ontology\"?", "output": "MATCH path=(:BiologicalProcess {source:\"Gene Ontology\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly connected to the gene with the name \"OVCA2\"?", "output": "MATCH path=(:Gene {name:\"OVCA2\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return all paths starting from the symptom with the URL \"http://identifiers.org/mesh/D065635\" and identify the related nodes?", "output": "MATCH path=(:Symptom {url:\"http://identifiers.org/mesh/D065635\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all nodes directly linked to the \"Signaling by FGFR in disease\" pathway?", "output": "MATCH path=(:Pathway {name:\"Signaling by FGFR in disease\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly connected to a gene node that has a \"CC0 1.0\" license?", "output": "MATCH path=(:Gene {license:\"CC0 1.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly connected to genes that have a \"CC0 1.0\" license?", "output": "MATCH path=(:Gene {license:\"CC0 1.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve all paths from the node labeled \"BiologicalProcess\" with identifier \"GO:0072126\" to its neighboring nodes?", "output": "MATCH path=(:BiologicalProcess {identifier:\"GO:0072126\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I see the entire path of nodes attached to pharmacologic classes from the FDA database provided through DrugCentral?", "output": "MATCH path=(:PharmacologicClass {source:\"FDA via DrugCentral\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the paths leading from any biological process node that holds the \"CC BY 4.0\" license to their adjacent nodes?", "output": "MATCH path=(:BiologicalProcess {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find paths that begin at 'MolecularFunction' nodes with the 'Gene Ontology' source and connect to other nodes?", "output": "MATCH path=(:MolecularFunction {source:\"Gene Ontology\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the outgoing relationships from the compound node with the InChI description \"InChI=1S/C21H20Cl2O3/c1-21(2)17(12-18(22)23)19(21)20(24)25-13-14-7-6-10-16(11-14)26-15-8-4-3-5-9-15/h3-12,17,19H,13H2,1-2H3\"?", "output": "MATCH path=(:Compound {inchi:\"InChI=1S/C21H20Cl2O3/c1-21(2)17(12-18(22)23)19(21)20(24)25-13-14-7-6-10-16(11-14)26-15-8-4-3-5-9-15/h3-12,17,19H,13H2,1-2H3\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all the connections stemming from nodes labeled as \"Pathway\" that have a license attribute of \"CC BY 4.0\"?", "output": "MATCH path=(:Pathway {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the nodes and relationships connected to the node with the molecular function identifier \"GO:0015277\"?", "output": "MATCH path=(:MolecularFunction {identifier:\"GO:0015277\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you determine the paths originating from the compound with the InChI key \"InChI=1S/C39H43N3O11S/c1-16-9-20-10-22-37(46)42-23-13-50-38(47)39(21-12-25(48-5)24(44)11-19(21)7-8-40-39)14-54-36(30(42)29(41(22)4)26(20)31(45)32(16)49-6)28-27(23)35-34(51-15-52-35)17(2)33(28)53-18(3)43/h9,11-12,22-23,29-30,36-37,40,44-46H,7-8,10,13-15H2,1-6H3/t22-,23-,29+,30+,36+,37-,39+/m0/s1\" to any other nodes?", "output": "MATCH path=(:Compound {inchi:\"InChI=1S/C39H43N3O11S/c1-16-9-20-10-22-37(46)42-23-13-50-38(47)39(21-12-25(48-5)24(44)11-19(21)7-8-40-39)14-54-36(30(42)29(41(22)4)26(20)31(45)32(16)49-6)28-27(23)35-34(51-15-52-35)17(2)33(28)53-18(3)43/h9,11-12,22-23,29-30,36-37,40,44-46H,7-8,10,13-15H2,1-6H3/t22-,23-,29+,30+,36+,37-,39+/m0/s1\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist from nodes labeled as CellularComponent with source \"Gene Ontology\" to any other connected nodes?", "output": "MATCH path=(:CellularComponent {source:\"Gene Ontology\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes and connecting relationships are linked to the molecular function node with the name \"malonyltransferase activity\"?", "output": "MATCH path=(:MolecularFunction {name:\"malonyltransferase activity\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all the paths starting from any disease node labeled with the \"CC BY 3.0\" license to other related nodes?", "output": "MATCH path=(:Disease {license:\"CC BY 3.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I explore the immediate connections of the gene with the designation \"ring finger protein 41, E3 ubiquitin protein ligase\"?", "output": "MATCH path=(:Gene {description:\"ring finger protein 41, E3 ubiquitin protein ligase\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the direct relationships extending from the node with the molecular function \"transcription factor activity, RNA polymerase II basal transcription factor binding\"?", "output": "MATCH path=(:MolecularFunction {name:\"transcription factor activity, RNA polymerase II basal transcription factor binding\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find paths that connect nodes labeled 'Anatomy' with a license 'CC BY 3.0' to any adjacent nodes?", "output": "MATCH path=(:Anatomy {license:\"CC BY 3.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all direct relationships starting from the anatomy node that has a Mesh ID of \"D000302\"?", "output": "MATCH path=(:Anatomy {mesh_id:\"D000302\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes and relationships are directly connected to the compound having the identifier \"DB04948\"?", "output": "MATCH path=(:Compound {identifier:\"DB04948\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are linked to a 'SideEffect' node with a \"CC BY-NC-SA 4.0\" license in a graph?", "output": "MATCH path=(:SideEffect {license:\"CC BY-NC-SA 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the relationships from nodes with the \"CC BY 4.0\" license within the PharmacologicClass category?", "output": "MATCH path=(:PharmacologicClass {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the nodes and relationships that are directly linked to the BiologicalProcess node identified as \"GO:0046503\"?", "output": "MATCH path=(:BiologicalProcess {identifier:\"GO:0046503\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly connected to the cellular component node identified as \"GO:0009295\"?", "output": "MATCH path=(:CellularComponent {identifier:\"GO:0009295\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes and relationships are directly linked to the \"VN1R5\" gene?", "output": "MATCH path=(:Gene {name:\"VN1R5\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all the direct connections originating from the gene with the name \"CNTN6\"?", "output": "MATCH path=(:Gene {name:\"CNTN6\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many and what types of nodes are directly connected to the compound with the URL \"http://www.drugbank.ca/drugs/DB01181\"?", "output": "MATCH path=(:Compound {url:\"http://www.drugbank.ca/drugs/DB01181\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths originate from the pathway node with the identifier \"PC7_3326\"?", "output": "MATCH path=(:Pathway {identifier:\"PC7_3326\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return all nodes and relationships that are directly linked to the BiologicalProcess identified by the URL \"http://purl.obolibrary.org/obo/GO_0048387\"?", "output": "MATCH path=(:BiologicalProcess {url:\"http://purl.obolibrary.org/obo/GO_0048387\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are connected to the biological process node with the identifier \"GO:0071108\"?", "output": "MATCH path=(:BiologicalProcess {identifier:\"GO:0071108\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and list all the neighboring nodes directly linked to the gene identified by \"http://identifiers.org/ncbigene/152518\"?", "output": "MATCH path=(:Gene {url:\"http://identifiers.org/ncbigene/152518\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways start from the source 'Reactome via Pathway Commons' and extend to an adjacent node?", "output": "MATCH path=(:Pathway {source:\"Reactome via Pathway Commons\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the immediate neighbors or nodes connected to the compound with the specified InChIKey \"InChIKey=BFYIZQONLCFLEV-DAELLWKTSA-N\"?", "output": "MATCH path=(:Compound {inchikey:\"InChIKey=BFYIZQONLCFLEV-DAELLWKTSA-N\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the nodes directly connected to the 'CellularComponent' labeled with \"GO:0000110\"?", "output": "MATCH path=(:CellularComponent {identifier:\"GO:0000110\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify all outgoing paths from the node representing the gene with identifier \"9703\"?", "output": "MATCH path=(:Gene {identifier:\"9703\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly related to the node representing the molecular function with ID \"GO:0070061\"?", "output": "MATCH path=(:MolecularFunction {identifier:\"GO:0070061\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the paths from cellular component nodes labeled with the license \"CC BY 4.0\" to other nodes they are directly connected to?", "output": "MATCH path=(:CellularComponent {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes and relationships are directly linked to the gene with the URL \"http://identifiers.org/ncbigene/388951\"?", "output": "MATCH path=(:Gene {url:\"http://identifiers.org/ncbigene/388951\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths from the disease with identifier \"DOID:90\" to its directly connected nodes?", "output": "MATCH path=(:Disease {identifier:\"DOID:90\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths originating from the cellular component with the identifier \"GO:1902495\" leading to any connected nodes?", "output": "MATCH path=(:CellularComponent {identifier:\"GO:1902495\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show all nodes and their connecting relationships stemming from the \"ATF4 activates genes\" pathway?", "output": "MATCH path=(:Pathway {name:\"ATF4 activates genes\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list all the paths originating from 'Anatomy' nodes with the source specified as \"Uberon\" to any other nodes?", "output": "MATCH path=(:Anatomy {source:\"Uberon\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return all relationships leading from nodes representing biological processes with a \"CC BY 4.0\" license?", "output": "MATCH path=(:BiologicalProcess {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What connections exist from the anatomy node labeled as \"sacro-iliac joint\" to other nodes?", "output": "MATCH path=(:Anatomy {name:\"sacro-iliac joint\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are nodes connected to any 'BiologicalProcess' nodes that have the license \"CC BY 4.0\"?", "output": "MATCH path=(:BiologicalProcess {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are the anatomy nodes that have the \"CC BY 3.0\" license connected to other nodes in the graph?", "output": "MATCH path=(:Anatomy {license:\"CC BY 3.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are nodes under 'PharmacologicClass' from the source \"FDA via DrugCentral\" connected to additional nodes in the database?", "output": "MATCH path=(:PharmacologicClass {source:\"FDA via DrugCentral\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are immediately connected to the \"CDC42EP4\" gene, and what are their pathways?", "output": "MATCH path=(:Gene {name:\"CDC42EP4\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are one relationship away from the \"Benazepril\" compound?", "output": "MATCH path=(:Compound {name:\"Benazepril\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are immediately connected to the anatomy node that has the bto_id \"BTO:0001499\", and what paths involve these connections?", "output": "MATCH path=(:Anatomy {bto_id:\"BTO:0001499\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the paths that start from a gene with a \"CC0 1.0\" license and go out to any neighboring nodes?", "output": "MATCH path=(:Gene {license:\"CC0 1.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return all the paths that start with a node labeled as Cellular Component sourced from Gene Ontology and traverse to any connected nodes?", "output": "MATCH path=(:CellularComponent {source:\"Gene Ontology\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What outgoing paths exist from any nodes labeled as pathways with the \"CC0 1.0\" license?", "output": "MATCH path=(:Pathway {license:\"CC0 1.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly related to the \"sternoclavicular joint\" anatomy node, and what paths do they form?", "output": "MATCH path=(:Anatomy {name:\"sternoclavicular joint\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list all nodes that have a direct connection to the disease identified by \"DOID:14268\"?", "output": "MATCH path=(:Disease {identifier:\"DOID:14268\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we trace the network of connections starting from SideEffect nodes that are licensed under 'CC BY-NC-SA 4.0'?", "output": "MATCH path=(:SideEffect {license:\"CC BY-NC-SA 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist from the symptom labeled \"Pain, Referred\" to any other node in the graph?", "output": "MATCH path=(:Symptom {name:\"Pain, Referred\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all connections from a node representing a biological process with the license \"CC BY 4.0\" to other nodes in the graph?", "output": "MATCH path=(:BiologicalProcess {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the paths starting from any cellular component with a license of \"CC BY 4.0\" to any directly connected node?", "output": "MATCH path=(:CellularComponent {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are nodes connected to the CellularComponent node with the identifier \"GO:0030659\" in the graph?", "output": "MATCH path=(:CellularComponent {identifier:\"GO:0030659\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all paths that start from a 'CellularComponent' node with the \"CC BY 4.0\" license and lead to any other node?", "output": "MATCH path=(:CellularComponent {license:\"CC BY 4.0\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths starting from nodes labeled as 'CellularComponent' with the 'source' property set to 'Gene Ontology'?", "output": "MATCH path=(:CellularComponent {source:\"Gene Ontology\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist starting from the node representing the biological process called \"bacterial-type flagellum-dependent cell motility\"?", "output": "MATCH path=(:BiologicalProcess {name:\"bacterial-type flagellum-dependent cell motility\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which nodes are directly linked to genes that are found on chromosome 9?", "output": "MATCH path=(:Gene {chromosome:\"9\"})-->() RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the paths that connect any pathway node to symptom nodes?", "output": "MATCH path = (n:Pathway)-[*]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all paths that connect nodes labeled as 'PharmacologicClass' with nodes labeled as 'Gene'?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all relationships and nodes along paths between Pathway and Gene nodes?", "output": "MATCH path = (n:Pathway)-[*]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I list all the paths that connect nodes labeled as Pathway with nodes labeled as PharmacologicClass in the graph?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the paths connecting nodes labeled as \"MolecularFunction\" with nodes labeled as \"Disease\" in the graph?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all relationships or paths between nodes labeled as CellularComponent and SideEffect?", "output": "MATCH path = (n:CellularComponent)-[*]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the network paths that traverse between \"Anatomy\" nodes and \"PharmacologicClass\" nodes?", "output": "MATCH path = (n:Anatomy)-[*]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all possible connection paths between nodes labeled as 'PharmacologicClass' and nodes labeled as 'CellularComponent' in the graph?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all the interconnected paths involving nodes labeled 'Pathway' and 'Anatomy'?", "output": "MATCH path = (n:Pathway)-[*]-(m:Anatomy) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths link 'Pathway' nodes with 'Compound' nodes, including all intermediate nodes and relationships?", "output": "MATCH path = (n:Pathway)-[*]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths or relationships exist that connect nodes labeled as PharmacologicClass to nodes labeled as Compound?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the complete set of paths between MolecularFunction and SideEffect nodes, including all intermediate nodes and relationships?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find every path that involves a node labeled \"Pathway\" and a node labeled \"BiologicalProcess\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible paths connecting anatomy nodes to disease nodes in the graph database?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all possible routes connecting `Anatomy` nodes to `Gene` nodes?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible paths connecting any 'Pathway' node to any 'CellularComponent' node in the graph?", "output": "MATCH path = (n:Pathway)-[*]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the possible relationship paths between symptom nodes and cellular component nodes?", "output": "MATCH path = (n:Symptom)-[*]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths connecting nodes with the MolecularFunction label to nodes with the Pathway label in the graph?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Pathway) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible paths connecting any MolecularFunction node and any Anatomy node in the graph?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Anatomy) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths connecting any gene nodes to compound nodes in the graph?", "output": "MATCH path = (n:Gene)-[*]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What network paths can be identified that connect nodes representing pharmacologic classes to those representing diseases?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide all paths of any length that link any Disease node to any Compound node in the graph?", "output": "MATCH path = (n:Disease)-[*]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all possible paths in the database that connect nodes labeled as 'Anatomy' to nodes labeled as 'Compound'?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify all linked paths that involve nodes tagged as pharmacologic class and symptom?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find every possible way Anatomy nodes are linked to CellularComponent nodes?", "output": "MATCH path = (n:Anatomy)-[*]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the paths that exist between nodes labeled as Anatomy and those labeled as Symptom?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all the relationships and nodes along any path between nodes labeled as BiologicalProcess and those labeled as SideEffect?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the links between nodes labeled as MolecularFunction and nodes labeled as PharmacologicClass?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify and return every possible relationship path between nodes labeled as \"MolecularFunction\" and nodes labeled as \"Gene\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all paths, regardless of length, that involve both Gene and SideEffect nodes?", "output": "MATCH path = (n:Gene)-[*]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all the relationships between nodes labeled as `MolecularFunction` and `BiologicalProcess`?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all paths linking any 'Pathway' nodes to 'Disease' nodes through any number of hops?", "output": "MATCH path = (n:Pathway)-[*]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the paths that connect any nodes labeled as 'Disease' to those labeled as 'CellularComponent'?", "output": "MATCH path = (n:Disease)-[*]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all relationships and nodes that exist between any symptom and any disease?", "output": "MATCH path = (n:Symptom)-[*]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths connecting 'Pathway' nodes to 'SideEffect' nodes in the database?", "output": "MATCH path = (n:Pathway)-[*]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths between nodes labeled as Anatomy and nodes labeled as BiologicalProcess in the database?", "output": "MATCH path = (n:Anatomy)-[*]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all paths connecting pharmacologic classes to biological processes in the database?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths between nodes labeled as \"MolecularFunction\" and nodes labeled as \"CellularComponent\" in the database?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the possible relationships and paths existing between nodes labeled as \"Symptom\" and \"SideEffect\"?", "output": "MATCH path = (n:Symptom)-[*]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all possible connections between nodes labeled as Symptom and nodes labeled as Compound?", "output": "MATCH path = (n:Symptom)-[*]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways exist between nodes labeled as Gene and nodes labeled as BiologicalProcess?", "output": "MATCH path = (n:Gene)-[*]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths that connect any node labeled as a Biological Process with any node labeled as a Cellular Component in the graph?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me the different routes linking molecular function nodes to compound nodes?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the routes that connect any symptom node to any biological process node?", "output": "MATCH path = (n:Symptom)-[*]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you display all the interconnected paths that involve both disease and side effect nodes?", "output": "MATCH path = (n:Disease)-[*]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the paths that connect molecular functions with symptoms in the database?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the complete set of connections and intermediaries between gene nodes and disease nodes?", "output": "MATCH path = (n:Gene)-[*]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths that connect nodes labeled as Compound with those labeled as SideEffect?", "output": "MATCH path = (n:Compound)-[*]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths that connect any gene to any symptom in the database?", "output": "MATCH path = (n:Gene)-[*]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me the pathways between any node labeled as Gene and any node labeled as CellularComponent?", "output": "MATCH path = (n:Gene)-[*]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the genes that are connected within one to three hops from any pharmacologic class in the database?", "output": "MATCH (n:PharmacologicClass)-[*1..3]-(m:Gene) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find diseases that are directly or indirectly associated with pharmacologic classes within a maximum of three node hops?", "output": "MATCH (n:PharmacologicClass)-[*1..3]-(m:Disease) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are related to diseases within a distance of one to three hops?", "output": "MATCH (n:Gene)-[*1..3]-(m:Disease) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find pathway nodes and their associated cellular components if they are linked by one, two, or three hops?", "output": "MATCH (n:Pathway)-[*1..3]-(m:CellularComponent) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, can you identify any associated compounds that are reachable within one, two, or three hops?", "output": "MATCH (n:Gene)-[*1..3]-(m:Compound) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms are associated with pathways through a relationship spanning up to three hops?", "output": "MATCH (n:Pathway)-[*1..3]-(m:Symptom) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find diseases that are directly or indirectly associated with cellular components, with a maximum separation of three hops?", "output": "MATCH (n:Disease)-[*1..3]-(m:CellularComponent) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all anatomy nodes that are linked to disease nodes by up to three hops?", "output": "MATCH (n:Anatomy)-[*1..3]-(m:Disease) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are Pathway nodes related to PharmacologicClass nodes within a connection distance of one to three hops?", "output": "MATCH (n:Pathway)-[*1..3]-(m:PharmacologicClass) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are pharmacologic classes related to biological processes by a connection path that ranges from one to three hops?", "output": "MATCH (n:PharmacologicClass)-[*1..3]-(m:BiologicalProcess) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the molecular functions that are connected to compounds within one to three relationship hops?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:Compound) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are molecular functions related to diseases with up to three hops in the network?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:Disease) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all nodes representing Pathways and Genes that are within up to three steps of each other in the graph.", "output": "MATCH (n:Pathway)-[*1..3]-(m:Gene) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the Anatomy components and their related PharmacologicClass categories that are linked through up to three relationships?", "output": "MATCH (n:Anatomy)-[*1..3]-(m:PharmacologicClass) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the relationships between anatomy nodes and compound nodes that span one to three hops?", "output": "MATCH (n:Anatomy)-[*1..3]-(m:Compound) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the molecular functions and symptoms that have a maximum of three hop connections between them?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:Symptom) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all pathways that are connected to biological processes within up to three steps in the graph database?", "output": "MATCH (n:Pathway)-[*1..3]-(m:BiologicalProcess) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the anatomy and cellular component pairs that are connected through up to three hops in the graph?", "output": "MATCH (n:Anatomy)-[*1..3]-(m:CellularComponent) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all pathways and compounds that have a connection path consisting of one to three hops between them?", "output": "MATCH (n:Pathway)-[*1..3]-(m:Compound) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve pathways and anatomies that are at most three steps apart in the network graph?", "output": "MATCH (n:Pathway)-[*1..3]-(m:Anatomy) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes have any type of connection to cellular components, involving one to three intermediary relationships?", "output": "MATCH (n:PharmacologicClass)-[*1..3]-(m:CellularComponent) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all pathways that are directly or indirectly connected to diseases within three degrees of separation?", "output": "MATCH (n:Pathway)-[*1..3]-(m:Disease) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we list all symptoms along with diseases they are linked to within three relationship steps?", "output": "MATCH (n:Symptom)-[*1..3]-(m:Disease) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Show all symptom-Compound pairs that are linked by a chain of one to three relationships.", "output": "MATCH (n:Symptom)-[*1..3]-(m:Compound) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are molecular functions related to cellular components in paths that span between one to three hops?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:CellularComponent) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all molecular functions that are linked to pharmacologic classes through up to three relationships?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:PharmacologicClass) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are pharmacologic classes and compounds related within up to three steps?", "output": "MATCH (n:PharmacologicClass)-[*1..3]-(m:Compound) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and display any relationships between nodes labeled as BiologicalProcess and Disease, with a path length ranging from one to three?", "output": "MATCH (n:BiologicalProcess)-[*1..3]-(m:Disease) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are molecular function nodes related to anatomy nodes if they are within three relationship hops?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:Anatomy) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are anatomical entities directly or indirectly connected to genes within a three-step distance?", "output": "MATCH (n:Anatomy)-[*1..3]-(m:Gene) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the molecular functions that are connected to genes within up to three hops in the network?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:Gene) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all pairs of anatomy and symptom nodes linked through one to three relationships?", "output": "MATCH (n:Anatomy)-[*1..3]-(m:Symptom) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pharmacologic classes are connected within one to three steps to various symptoms, and which symptoms are these?", "output": "MATCH (n:PharmacologicClass)-[*1..3]-(m:Symptom) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve all gene and side effect pairs that are connected by a path of one to three relationships?", "output": "MATCH (n:Gene)-[*1..3]-(m:SideEffect) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which Anatomy nodes are associated with any BiologicalProcess nodes within a path length of one to three steps?", "output": "MATCH (n:Anatomy)-[*1..3]-(m:BiologicalProcess) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find anatomy-related nodes and their associated side effect nodes that are within three hops?", "output": "MATCH (n:Anatomy)-[*1..3]-(m:SideEffect) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways are related to side effects through any relationship path that spans one to three hops?", "output": "MATCH (n:Pathway)-[*1..3]-(m:SideEffect) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all the connections, spanning one to three links, between nodes labeled as BiologicalProcess and those labeled as Compound?", "output": "MATCH (n:BiologicalProcess)-[*1..3]-(m:Compound) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do diseases in the database relate to side effects through connections of one, two, or three hops?", "output": "MATCH (n:Disease)-[*1..3]-(m:SideEffect) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have a connection to any cellular component within one to three intermediary steps?", "output": "MATCH (n:Gene)-[*1..3]-(m:CellularComponent) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which Molecular Functions are associated with any Pathway within one to three relationship steps?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:Pathway) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the relationships between symptoms and biological processes within a maximum of three steps?", "output": "MATCH (n:Symptom)-[*1..3]-(m:BiologicalProcess) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and list all gene nodes that are linked by one to three steps to any biological process nodes?", "output": "MATCH (n:Gene)-[*1..3]-(m:BiologicalProcess) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify diseases and their associated compounds within a maximum of three connections between them?", "output": "MATCH (n:Disease)-[*1..3]-(m:Compound) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are genes and symptoms related within a path consisting of one to three relational steps?", "output": "MATCH (n:Gene)-[*1..3]-(m:Symptom) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find cellular components that are related to compounds through one to three intermediary relationships?", "output": "MATCH (n:Compound)-[*1..3]-(m:CellularComponent) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components are connected to side effects through up to three hops?", "output": "MATCH (n:CellularComponent)-[*1..3]-(m:SideEffect) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do molecular functions relate to biological processes through a series of up to three intermediaries?", "output": "MATCH (n:MolecularFunction)-[*1..3]-(m:BiologicalProcess) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological processes are connected to cellular components through one to three degrees of separation in the database?", "output": "MATCH (n:BiologicalProcess)-[*1..3]-(m:CellularComponent) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are compounds related to side effects within three relationship hops in the graph?", "output": "MATCH (n:Compound)-[*1..3]-(m:SideEffect) RETURN n, m"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the entire paths linking pathways to pharmacologic classes where the classes' source is \"PID via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) WHERE m.source = \"PID via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths connecting pathway nodes to anatomy nodes where the anatomy's origin is noted as WikiPathways?", "output": "MATCH path = (n:Pathway)-[*]-(m:Anatomy) WHERE m.source = \"WikiPathways\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways are linked in any way to the gene named \"Thrombin signalling through proteinase activated receptors (PARs)\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:Gene) WHERE m.name = \"Thrombin signalling through proteinase activated receptors (PARs)\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all the paths that involve gene nodes and lead to the disease matching the URL \"http://identifiers.org/ncbigene/64324\"?", "output": "MATCH path = (n:Gene)-[*]-(m:Disease) WHERE m.url = \"http://identifiers.org/ncbigene/64324\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all paths connecting molecular functions to genes that have the specific URL \"http://purl.obolibrary.org/obo/GO_0005219\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Gene) WHERE m.url = \"http://purl.obolibrary.org/obo/GO_0005219\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all paths connecting any molecular function nodes to the compound specifically known as \"L-proline transmembrane transporter activity\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Compound) WHERE m.name = \"L-proline transmembrane transporter activity\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths connecting any gene to the specific disease with the URL \"http://identifiers.org/ncbigene/401612\"?", "output": "MATCH path = (n:Gene)-[*]-(m:Disease) WHERE m.url = \"http://identifiers.org/ncbigene/401612\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the path between any molecular function and the disease that has \"malate dehydrogenase (decarboxylating) (NAD+) activity\" as its name?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Disease) WHERE m.name = \"malate dehydrogenase (decarboxylating) (NAD+) activity\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all the pathways linked to pharmacologic classes, particularly where the license of the pharmacologic class is \"CC BY 4.0\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways are connected to the gene with identifier \"PC7_6058,\" and what are the paths between them?", "output": "MATCH path = (n:Pathway)-[*]-(m:Gene) WHERE m.identifier = \"PC7_6058\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the paths that link biological processes to the disease named \"interleukin-18 production\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:Disease) WHERE m.name = \"interleukin-18 production\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the paths between nodes labeled as MolecularFunction and CellularComponent where the CellularComponent's source is identified as \"Gene Ontology\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:CellularComponent) WHERE m.source = \"Gene Ontology\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways are associated through various relationships to the pharmacologic class with the name \"E2F mediated regulation of DNA replication\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) WHERE m.name = \"E2F mediated regulation of DNA replication\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all paths connecting any biological process to any cellular component that originates from the Gene Ontology source?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:CellularComponent) WHERE m.source = \"Gene Ontology\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths connecting genes and cellular components that involve a cellular component with the description \"BRCA2 and CDKN1A interacting protein\"?", "output": "MATCH path = (n:Gene)-[*]-(m:CellularComponent) WHERE m.description = \"BRCA2 and CDKN1A interacting protein\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the full paths linking 'Pathway' nodes to the 'PharmacologicClass' identified by \"PC7_3992\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) WHERE m.identifier = \"PC7_3992\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve and display the complete paths connecting any pathway to biological processes that are sourced from \"Reactome via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:BiologicalProcess) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths that connect pharmacologic classes to genes with a class type designated as \"Mechanism of Action\"?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Gene) WHERE m.class_type = \"Mechanism of Action\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pathways connected to the disease known as 'APOBEC3G mediated resistance to HIV-1 infection'?", "output": "MATCH path = (n:Pathway)-[*]-(m:Disease) WHERE m.name = \"APOBEC3G mediated resistance to HIV-1 infection\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are any molecular functions related to the symptom known as \"N-acetyllactosaminide beta-1,6-N-acetylglucosaminyltransferase activity\" by any type of path within the dataset?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Symptom) WHERE m.name = \"N-acetyllactosaminide beta-1,6-N-acetylglucosaminyltransferase activity\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths can be identified between pharmacologic classes and cellular components that have the specific URL \"http://purl.bioontology.org/ontology/NDFRT/N0000187058\"?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:CellularComponent) WHERE m.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000187058\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the connections between any gene and the biological process labeled as \"kidney associated antigen 1\"?", "output": "MATCH path = (n:Gene)-[*]-(m:BiologicalProcess) WHERE m.description = \"kidney associated antigen 1\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which entire paths exist that link any pharmacologic class to the compound labeled with the identifier N0000175547?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Compound) WHERE m.identifier = \"N0000175547\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the various paths connecting symptoms to the disease known as \"Hypertriglyceridemic Waist\" in the database?", "output": "MATCH path = (n:Symptom)-[*]-(m:Disease) WHERE m.name = \"Hypertriglyceridemic Waist\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the paths between nodes labeled as Pathway and nodes labeled as BiologicalProcess, where the biological process nodes have a \"CC BY 4.0\" license?", "output": "MATCH path = (n:Pathway)-[*]-(m:BiologicalProcess) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths exist between anatomy entities and the disease designated by the URL \"http://purl.obolibrary.org/obo/UBERON_0001456\"?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Disease) WHERE m.url = \"http://purl.obolibrary.org/obo/UBERON_0001456\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all possible paths between molecular functions and the symptom associated with the URL \"http://purl.obolibrary.org/obo/GO_0008459\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Symptom) WHERE m.url = \"http://purl.obolibrary.org/obo/GO_0008459\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all relationships and paths between nodes of PharmacologicClass and Gene, specifically where the gene has a license type \"CC BY 4.0\"?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Gene) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find paths linking any biological process with cellular components that have the license type \"CC BY 4.0\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:CellularComponent) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Are there any paths linking any MolecularFunction to the PharmacologicClass called \"calmodulin-dependent cyclic-nucleotide phosphodiesterase activity,\" and if so, what do they look like?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:PharmacologicClass) WHERE m.name = \"calmodulin-dependent cyclic-nucleotide phosphodiesterase activity\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist that connect molecular functions to the specific compound \"phosphotransferase activity, carboxyl group as acceptor\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Compound) WHERE m.name = \"phosphotransferase activity, carboxyl group as acceptor\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible connection paths between biological processes and the disease called \"regulation of synaptic transmission, dopaminergic\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:Disease) WHERE m.name = \"regulation of synaptic transmission, dopaminergic\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths that connect any gene to any compound with a license of CC0 1.0?", "output": "MATCH path = (n:Gene)-[*]-(m:Compound) WHERE m.license = \"CC0 1.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you extract all the paths that exist between any molecular function and anatomy nodes wherein the anatomy's license is \"CC BY 4.0\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Anatomy) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all paths connecting compounds to cellular components that have a \"CC BY-NC 4.0\" license?", "output": "MATCH path = (n:Compound)-[*]-(m:CellularComponent) WHERE m.license = \"CC BY-NC 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide all the possible routes linking pathways to diseases when those diseases are obtained from Reactome via Pathway Commons?", "output": "MATCH path = (n:Pathway)-[*]-(m:Disease) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all pathways that have any kind of relationship with the pharmacologic class whose identifier is \"PC7_12187\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) WHERE m.identifier = \"PC7_12187\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all paths between nodes labeled as \"MolecularFunction\" and \"CellularComponent,\" where the cellular component has the name \"adenylylsulfate kinase activity\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:CellularComponent) WHERE m.name = \"adenylylsulfate kinase activity\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the connection path between any pharmacologic class and the symptom with the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000175764\"?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Symptom) WHERE m.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000175764\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths connecting any anatomy nodes to the cellular component with the specific URL http://purl.obolibrary.org/obo/UBERON_0001814?", "output": "MATCH path = (n:Anatomy)-[*]-(m:CellularComponent) WHERE m.url = \"http://purl.obolibrary.org/obo/UBERON_0001814\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all the relationships between 'Pathway' nodes and 'BiologicalProcess' nodes that originate from \"Reactome via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:BiologicalProcess) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What interconnected paths exist between pathways and pharmacologic classes when the pharmacologic class is sourced from Reactome through Pathway Commons?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the relationship pathways between any anatomy and the specific symptom represented by the URL \"http://purl.obolibrary.org/obo/UBERON_0000042\"?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Symptom) WHERE m.url = \"http://purl.obolibrary.org/obo/UBERON_0000042\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths connect anatomical nodes to the disease with mesh ID \"D012160\", traversing any number of relationships?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Disease) WHERE m.mesh_id = \"D012160\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the pathways that connect to diseases sourced from \"Reactome via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:Disease) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all potential paths that link any anatomy node directly or indirectly to the specific symptom having the identifier \"UBERON:0001619\".", "output": "MATCH path = (n:Anatomy)-[*]-(m:Symptom) WHERE m.identifier = \"UBERON:0001619\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths exist between any pathway and cellular component that involve the \"Drug Induction of Bile Acid Pathway\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:CellularComponent) WHERE m.name = \"Drug Induction of Bile Acid Pathway\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all the different connection paths where a 'Pathway' node is linked to a 'BiologicalProcess' node, and the 'BiologicalProcess' node has the source designation \"Reactome via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:BiologicalProcess) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the paths that exist between nodes labeled as Pathway and those labeled as PharmacologicClass with the condition that the source is \"Reactome via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths between any biological processes and the compound named \"regulation of skeletal muscle satellite cell proliferation\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:Compound) WHERE m.name = \"regulation of skeletal muscle satellite cell proliferation\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways are related through any connection to the anatomical entity called \"regulation of FZD by ubiquitination\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:Anatomy) WHERE m.name = \"regulation of FZD by ubiquitination\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist that connect pharmacologic classes to genes when these genes are specifically categorized by their mechanism of action?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Gene) WHERE m.class_type = \"Mechanism of Action\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all pathways that link nodes of type PharmacologicClass to the particular CellularComponent node with the URL \"http://purl.bioontology.org/ontology/NDFRT/N0000175086\"?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:CellularComponent) WHERE m.url = \"http://purl.bioontology.org/ontology/NDFRT/N0000175086\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths connecting compounds to cellular components where the cellular component's URL is \"http://www.drugbank.ca/drugs/DB01361\"?", "output": "MATCH path = (n:Compound)-[*]-(m:CellularComponent) WHERE m.url = \"http://www.drugbank.ca/drugs/DB01361\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible relationships between any pathways and the gene with the name \"ALK2 signaling events\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:Gene) WHERE m.name = \"ALK2 signaling events\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve paths between nodes labeled as 'MolecularFunction' and 'BiologicalProcess' where the 'BiologicalProcess' nodes originate from the 'Gene Ontology' source?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:BiologicalProcess) WHERE m.source = \"Gene Ontology\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list all the paths linking any pathway to diseases with the source marked as \"Reactome via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:Disease) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths that exist between molecular functions and anatomical entities which are specifically derived from the \"Gene Ontology\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Anatomy) WHERE m.source = \"Gene Ontology\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve all paths that connect any pathway nodes to pharmacologic class nodes linked by the URL \"http://www.wikipathways.org/instance/WP1528_r78581\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:PharmacologicClass) WHERE m.url = \"http://www.wikipathways.org/instance/WP1528_r78581\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you map out the paths that connect a BiologicalProcess node to the SideEffect node specified by URL \"http://purl.obolibrary.org/obo/GO_2000255\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:SideEffect) WHERE m.url = \"http://purl.obolibrary.org/obo/GO_2000255\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find connections between any gene and a biological process that has a CC0 1.0 license?", "output": "MATCH path = (n:Gene)-[*]-(m:BiologicalProcess) WHERE m.license = \"CC0 1.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths link symptoms and diseases, with the constraint that the disease must have a \"CC0 1.0\" license?", "output": "MATCH path = (n:Symptom)-[*]-(m:Disease) WHERE m.license = \"CC0 1.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all the routes that link anatomy entities to pharmacologic classes sourced from the Uberon dataset?", "output": "MATCH path = (n:Anatomy)-[*]-(m:PharmacologicClass) WHERE m.source = \"Uberon\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all the relationships and paths that lead from any \"MolecularFunction\" node to a \"Symptom\" node if that symptom\u2019s license is \"CC BY 4.0\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Symptom) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the complete path from any gene to the biological process with the URL \"http://identifiers.org/ncbigene/23568\"?", "output": "MATCH path = (n:Gene)-[*]-(m:BiologicalProcess) WHERE m.url = \"http://identifiers.org/ncbigene/23568\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the complete path between any biological process and the compound with the URL \"http://purl.obolibrary.org/obo/GO_0097421\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:Compound) WHERE m.url = \"http://purl.obolibrary.org/obo/GO_0097421\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths linking pharmacologic classes to compounds with a \"CC BY 4.0\" license?", "output": "MATCH path = (n:PharmacologicClass)-[*]-(m:Compound) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths connecting biological processes to diseases that include a disease named \"immune effector process\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:Disease) WHERE m.name = \"immune effector process\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible paths connecting genes to compounds where the compound's source is specified as \"Entrez Gene\"?", "output": "MATCH path = (n:Gene)-[*]-(m:Compound) WHERE m.source = \"Entrez Gene\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the paths that link any anatomical structure with the symptom whose name is \"thyroid gland\"?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Symptom) WHERE m.name = \"thyroid gland\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist between genes and any cellular components where the cellular component is named \"TSSK2\"?", "output": "MATCH path = (n:Gene)-[*]-(m:CellularComponent) WHERE m.name = \"TSSK2\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the paths between nodes labeled as symptoms and the biological process node that has the URL \"http://identifiers.org/mesh/D018886\"?", "output": "MATCH path = (n:Symptom)-[*]-(m:BiologicalProcess) WHERE m.url = \"http://identifiers.org/mesh/D018886\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible paths that connect nodes labeled as 'MolecularFunction' to the 'BiologicalProcess' node with the identifier \"GO:0010521\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:BiologicalProcess) WHERE m.identifier = \"GO:0010521\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible paths between any molecular function and the compound with the identifier \"GO:0047006\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Compound) WHERE m.identifier = \"GO:0047006\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the pathways that are connected to the cellular component with the identifier \"PC7_7357\" in any way?", "output": "MATCH path = (n:Pathway)-[*]-(m:CellularComponent) WHERE m.identifier = \"PC7_7357\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the paths connecting nodes labeled as 'MolecularFunction' with 'Anatomy' nodes having a license of \"CC BY 4.0\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Anatomy) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can one find all relationships and paths from compounds to the specified side effect with the URL \"http://www.drugbank.ca/drugs/DB02187\"?", "output": "MATCH path = (n:Compound)-[*]-(m:SideEffect) WHERE m.url = \"http://www.drugbank.ca/drugs/DB02187\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the various pathways connected to the symptom node with the identifier \"PC7_3060\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:Symptom) WHERE m.identifier = \"PC7_3060\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find all paths starting from any symptom node that eventually lead to the cellular component with the identifier \"D051346\"?", "output": "MATCH path = (n:Symptom)-[*]-(m:CellularComponent) WHERE m.identifier = \"D051346\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all the existing paths between any node labeled as `MolecularFunction` and the `BiologicalProcess` node with the identifier of \"GO:0004839\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:BiologicalProcess) WHERE m.identifier = \"GO:0004839\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the connection paths between Pathways and Genes where the Gene's source is labeled as \"Reactome via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:Gene) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways can be found between anatomy nodes and the specific gene with the identifier \"UBERON:0001768\"?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Gene) WHERE m.identifier = \"UBERON:0001768\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all connections between nodes labeled as BiologicalProcess and SideEffect, given that the SideEffect has a license of \"CC BY 4.0\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:SideEffect) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths connect symptom nodes to compound nodes, with the condition that the compound's source is from MeSH?", "output": "MATCH path = (n:Symptom)-[*]-(m:Compound) WHERE m.source = \"MeSH\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the paths connecting anatomy-related entities to the biological process with MeSH ID \"D008526\"?", "output": "MATCH path = (n:Anatomy)-[*]-(m:BiologicalProcess) WHERE m.mesh_id = \"D008526\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return any pathways that are linked to symptoms with a \"CC BY 4.0\" license?", "output": "MATCH path = (n:Pathway)-[*]-(m:Symptom) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all possible connections between a compound and a cellular component with a CC BY-NC 4.0 license?", "output": "MATCH path = (n:Compound)-[*]-(m:CellularComponent) WHERE m.license = \"CC BY-NC 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the possible paths in the database between symptoms and compounds that originate from the MeSH source?", "output": "MATCH path = (n:Symptom)-[*]-(m:Compound) WHERE m.source = \"MeSH\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths link any MolecularFunction nodes to the Pathway node with identifier GO:0030247 in the database?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Pathway) WHERE m.identifier = \"GO:0030247\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the possible paths connecting nodes labeled as Anatomy and nodes labeled as CellularComponent that have the source \"Uberon\"?", "output": "MATCH path = (n:Anatomy)-[*]-(m:CellularComponent) WHERE m.source = \"Uberon\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me all the relationships and nodes that form paths between any gene and the compound identified by the URL \"http://identifiers.org/ncbigene/7182\"?", "output": "MATCH path = (n:Gene)-[*]-(m:Compound) WHERE m.url = \"http://identifiers.org/ncbigene/7182\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways exist between nodes labeled \"BiologicalProcess\" and \"SideEffect,\" filtered by those side effects with a source of \"Gene Ontology\"?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:SideEffect) WHERE m.source = \"Gene Ontology\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pathways exist between any gene and the disease labeled \"KAAG1\"?", "output": "MATCH path = (n:Gene)-[*]-(m:Disease) WHERE m.name = \"KAAG1\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find all possible paths connecting nodes with the label 'MolecularFunction' to the 'PharmacologicClass' node identified by \"GO:0033691\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:PharmacologicClass) WHERE m.identifier = \"GO:0033691\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths connecting molecular functions to symptoms that are licensed under \"CC BY 4.0\"?", "output": "MATCH path = (n:MolecularFunction)-[*]-(m:Symptom) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all the paths linking pathway nodes to biological process nodes with a \"CC BY 4.0\" license?", "output": "MATCH path = (n:Pathway)-[*]-(m:BiologicalProcess) WHERE m.license = \"CC BY 4.0\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths connecting the biological process nodes to the compound with the identifier GO:1904378?", "output": "MATCH path = (n:BiologicalProcess)-[*]-(m:Compound) WHERE m.identifier = \"GO:1904378\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the connections between anatomy entities and the disease with the identifier \"UBERON:0003889\"?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Disease) WHERE m.identifier = \"UBERON:0003889\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all of the connections between pathways and symptoms, where the symptoms information originates from \"Reactome via Pathway Commons\"?", "output": "MATCH path = (n:Pathway)-[*]-(m:Symptom) WHERE m.source = \"Reactome via Pathway Commons\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths or connections link anatomical components with the disease featuring the BTO code \"BTO:0000287\"?", "output": "MATCH path = (n:Anatomy)-[*]-(m:Disease) WHERE m.bto_id = \"BTO:0000287\" RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all possible paths of length three that exist between nodes labeled as Pathway and Disease.", "output": "MATCH path = (n:Pathway)-[*3]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all paths that connect any pharmacologic class to any symptom through exactly three relationships?", "output": "MATCH path = (n:PharmacologicClass)-[*3]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return all possible paths of length two between Pathway nodes and Disease nodes?", "output": "MATCH path = (n:Pathway)-[*2]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all possible paths of length three that connect symptoms to diseases in the database?", "output": "MATCH path = (n:Symptom)-[*3]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find paths that consist of two steps connecting any Pathway to a SideEffect?", "output": "MATCH path = (n:Pathway)-[*2]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find paths of length 2 that connect nodes labeled as \"PharmacologicClass\" to those labeled as \"BiologicalProcess\"?", "output": "MATCH path = (n:PharmacologicClass)-[*2]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find paths that link a gene to a symptom through any sequence of three relationships?", "output": "MATCH path = (n:Gene)-[*3]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the three-step paths linking any pharmacologic class to any disease?", "output": "MATCH path = (n:PharmacologicClass)-[*3]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the paths showing a sequence of two relationships between a gene and a compound?", "output": "MATCH path = (n:Gene)-[*2]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the possible paths of length three that start with a node labeled 'Compound' and end with a node labeled 'CellularComponent'?", "output": "MATCH path = (n:Compound)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the paths that directly lead from a pathway node to a symptom node?", "output": "MATCH path = (n:Pathway)-[*1]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve paths with exactly two relationships between 'Pathway' and 'BiologicalProcess' nodes?", "output": "MATCH path = (n:Pathway)-[*2]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find and display all paths consisting of exactly one relationship between any pharmacologic class and any biological process?", "output": "MATCH path = (n:PharmacologicClass)-[*1]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the possible ways to connect any pharmacologic class to a gene with a path consisting of two links?", "output": "MATCH path = (n:PharmacologicClass)-[*2]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all possible paths that consist of exactly two steps between nodes labeled as 'Symptom' and 'CellularComponent'?", "output": "MATCH path = (n:Symptom)-[*2]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me all the paths with exactly three degrees of separation between anatomy and symptom entities?", "output": "MATCH path = (n:Anatomy)-[*3]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the paths of exactly three hops between entities marked as BiologicalProcess and Disease?", "output": "MATCH path = (n:BiologicalProcess)-[*3]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths with precisely three relationships exist between the nodes labeled PharmacologicClass and Gene?", "output": "MATCH path = (n:PharmacologicClass)-[*3]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths of length three that connect nodes labeled \"MolecularFunction\" to nodes labeled \"BiologicalProcess\"?", "output": "MATCH path = (n:MolecularFunction)-[*3]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me the paths that are three hops away between nodes classified as 'Pathway' and 'PharmacologicClass'?", "output": "MATCH path = (n:Pathway)-[*3]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist that connect a MolecularFunction to a Pathway with exactly one step in between?", "output": "MATCH path = (n:MolecularFunction)-[*1]-(m:Pathway) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the three-step relationship paths that exist between nodes labeled as Pathway and BiologicalProcess?", "output": "MATCH path = (n:Pathway)-[*3]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths of length two connecting molecular functions with symptoms?", "output": "MATCH path = (n:MolecularFunction)-[*2]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all the paths of length three that connect pharmacological classes to cellular components in the graph.", "output": "MATCH path = (n:PharmacologicClass)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can you find all paths of exactly two relationships connecting a gene to a cellular component?", "output": "MATCH path = (n:Gene)-[*2]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do you return paths comprised of three connections between nodes tagged as 'Gene' and 'BiologicalProcess'?", "output": "MATCH path = (n:Gene)-[*3]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all the paths that connect a pharmacologic class to a compound with exactly one relationship between them?", "output": "MATCH path = (n:PharmacologicClass)-[*1]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve all paths in the graph that connect a `Pathway` node to a `Gene` node through exactly three relationships?", "output": "MATCH path = (n:Pathway)-[*3]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show all paths consisting of one hop between Pathway and CellularComponent nodes?", "output": "MATCH path = (n:Pathway)-[*1]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify all the unique three-step paths that start from a \"MolecularFunction\" node and end at a \"Pathway\" node?", "output": "MATCH path = (n:MolecularFunction)-[*3]-(m:Pathway) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths connecting a symptom to a biological process that are exactly three relationships long?", "output": "MATCH path = (n:Symptom)-[*3]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the paths consisting of exactly three relationships between nodes labeled as 'CellularComponent' and 'SideEffect'?", "output": "MATCH path = (n:CellularComponent)-[*3]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the paths that include two relationships between any gene and any symptom?", "output": "MATCH path = (n:Gene)-[*2]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths with exactly two intermediary hops between nodes of the 'Anatomy' and 'BiologicalProcess' labels?", "output": "MATCH path = (n:Anatomy)-[*2]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify all paths containing three connections between a \"Pathway\" node and a \"Anatomy\" node?", "output": "MATCH path = (n:Pathway)-[*3]-(m:Anatomy) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify paths that have exactly two relationships between nodes labeled \"Pathway\" and \"PharmacologicClass\"?", "output": "MATCH path = (n:Pathway)-[*2]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve paths that link 'Pathway' nodes to 'CellularComponent' nodes with exactly two relationships in between?", "output": "MATCH path = (n:Pathway)-[*2]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve all paths that connect 'MolecularFunction' to 'Anatomy' through a series of three relationships?", "output": "MATCH path = (n:MolecularFunction)-[*3]-(m:Anatomy) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all paths that connect a symptom to a cellular component with exactly three intermediary nodes?", "output": "MATCH path = (n:Symptom)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify and return all unique three-step paths that connect a node labeled 'Pathway' with a node labeled 'SideEffect'?", "output": "MATCH path = (n:Pathway)-[*3]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths involve a series of three relationships linking a disease to a compound?", "output": "MATCH path = (n:Disease)-[*3]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths consisting of two links exist between nodes with the labels 'MolecularFunction' and 'Pathway', and can these paths be returned?", "output": "MATCH path = (n:MolecularFunction)-[*2]-(m:Pathway) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths consisting of three relationships that connect nodes labeled as Anatomy and CellularComponent?", "output": "MATCH path = (n:Anatomy)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the paths consisting of three links that connect nodes of type \"Disease\" with those of type \"CellularComponent\"?", "output": "MATCH path = (n:Disease)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find paths that involve exactly two hops linking a Pathway node to a Gene node?", "output": "MATCH path = (n:Pathway)-[*2]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the specific paths that span three relationships between a Pathway node and a Symptom node within this graph?", "output": "MATCH path = (n:Pathway)-[*3]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all the paths where a molecular function is linked to a biological process with two intermediaries?", "output": "MATCH path = (n:MolecularFunction)-[*2]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all possible paths that involve exactly two relationships between Anatomy nodes and CellularComponent nodes.", "output": "MATCH path = (n:Anatomy)-[*2]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How many paths exist that include three intervening relationships between genes and cellular components?", "output": "MATCH path = (n:Gene)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which routes link a Pathway and a Cellular Component through a sequence of precisely three connections?", "output": "MATCH path = (n:Pathway)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which three-hop paths exist between nodes labeled as 'Anatomy' and those labeled as 'PharmacologicClass'?", "output": "MATCH path = (n:Anatomy)-[*3]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find each symptom and disease pair that are connected through a single relationship, and what do these paths look like?", "output": "MATCH path = (n:Symptom)-[*1]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find paths that connect molecular functions directly to genes with only one relationship?", "output": "MATCH path = (n:MolecularFunction)-[*1]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify any two-step paths that link entities of type Anatomy with those of type PharmacologicClass.", "output": "MATCH path = (n:Anatomy)-[*2]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and list all paths with a sequence of three connections between nodes labeled 'MolecularFunction' and 'CellularComponent'?", "output": "MATCH path = (n:MolecularFunction)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths with exactly two relationships between nodes labeled as Symptom and nodes labeled as BiologicalProcess?", "output": "MATCH path = (n:Symptom)-[*2]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list paths consisting of a single relationship between nodes labeled as Gene and BiologicalProcess?", "output": "MATCH path = (n:Gene)-[*1]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and display the connections that link any gene with a disease through exactly three intermediary steps?", "output": "MATCH path = (n:Gene)-[*3]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the paths with precisely two links that exist between Anatomy and Symptom nodes?", "output": "MATCH path = (n:Anatomy)-[*2]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve all the paths that represent a single step relationship between a node labeled 'Pathway' and a node labeled 'SideEffect'.", "output": "MATCH path = (n:Pathway)-[*1]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are all the paths that connect an \"Anatomy\" node to a \"BiologicalProcess\" node with three degrees of separation?", "output": "MATCH path = (n:Anatomy)-[*3]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the paths that involve two hops between nodes labeled as BiologicalProcess and SideEffect?", "output": "MATCH path = (n:BiologicalProcess)-[*2]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all the paths with three relationships between nodes labeled \"Pathway\" and \"Compound\" in the graph?", "output": "MATCH path = (n:Pathway)-[*3]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve paths that are exactly two hops long between any node labeled CellularComponent and any node labeled SideEffect?", "output": "MATCH path = (n:CellularComponent)-[*2]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the paths that link a node of type MolecularFunction to a node of type PharmacologicClass through three intermediate relationships?", "output": "MATCH path = (n:MolecularFunction)-[*3]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you determine the paths that contain two specific relationships between nodes of type PharmacologicClass and nodes of type Compound?", "output": "MATCH path = (n:PharmacologicClass)-[*2]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the possible paths consisting of two hops starting from a MolecularFunction node and ending at a PharmacologicClass node?", "output": "MATCH path = (n:MolecularFunction)-[*2]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths consisting of three intermediate nodes connecting pharmacologic classes to compounds?", "output": "MATCH path = (n:PharmacologicClass)-[*3]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes have a direct relationship with any pharmacologic class in the database?", "output": "MATCH path = (n:PharmacologicClass)-[*1]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How do pharmacologic classes directly relate to symptoms, and what are the possible paths of one relationship length connecting them?", "output": "MATCH path = (n:PharmacologicClass)-[*1]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the possible two-step relationship paths that exist between any symptom and disease?", "output": "MATCH path = (n:Symptom)-[*2]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths exist that directly connect a 'Pathway' node to a 'PharmacologicClass' node?", "output": "MATCH path = (n:Pathway)-[*1]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you show me the paths comprising exactly three relationships that exist between any \"MolecularFunction\" and \"Disease\" nodes?", "output": "MATCH path = (n:MolecularFunction)-[*3]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths that represent a single relationship step between any disease and cellular component nodes?", "output": "MATCH path = (n:Disease)-[*1]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths that connect a node labeled as \"Pathway\" with a node labeled as \"Anatomy\" through two intermediate relationships?", "output": "MATCH path = (n:Pathway)-[*2]-(m:Anatomy) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the 2-step paths that connect any biological process with a cellular component in the database?", "output": "MATCH path = (n:BiologicalProcess)-[*2]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify routes consisting of two relationships that link `PharmacologicClass` entities to `CellularComponent` entities?", "output": "MATCH path = (n:PharmacologicClass)-[*2]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What direct paths exist between the nodes labeled as Compound and those labeled as CellularComponent?", "output": "MATCH path = (n:Compound)-[*1]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the sequences of nodes and relationships of length three between nodes labeled 'BiologicalProcess' and 'CellularComponent'?", "output": "MATCH path = (n:BiologicalProcess)-[*3]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the paths consisting of three nodes where the start node is labeled as MolecularFunction and the end node is labeled as Anatomy?", "output": "MATCH path = (n:MolecularFunction)-[*2]-(m:Anatomy) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the paths that link any biological process with a disease using exactly two relationships?", "output": "MATCH path = (n:BiologicalProcess)-[*2]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the paths with two relationships starting from a Gene node and ending at a SideEffect node?", "output": "MATCH path = (n:Gene)-[*2]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the paths that involve two relationships between any anatomy-related node and disease-related node?", "output": "MATCH path = (n:Anatomy)-[*2]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the paths of length one that connect molecular functions with cellular components in the database?", "output": "MATCH path = (n:MolecularFunction)-[*1]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me paths that directly link any anatomical concept to a gene?", "output": "MATCH path = (n:Anatomy)-[*1]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths that consist of exactly two relationships between nodes tagged as \"MolecularFunction\" and those tagged as \"Gene\"?", "output": "MATCH path = (n:MolecularFunction)-[*2]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you list the paths involving two links that start at a node labeled \"MolecularFunction\" and end at a node labeled \"CellularComponent\"?", "output": "MATCH path = (n:MolecularFunction)-[*2]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you show me all the paths involving exactly three connections that associate a symptom with a compound?", "output": "MATCH path = (n:Symptom)-[*3]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the possible paths consisting of exactly two relationships that connect any biological process with any compound?", "output": "MATCH path = (n:BiologicalProcess)-[*2]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify all the paths that link a pathway and a symptom with exactly two intervening hops?", "output": "MATCH path = (n:Pathway)-[*2]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What paths exist between molecular functions and pharmacologic classes with exactly one connection in between?", "output": "MATCH path = (n:MolecularFunction)-[*1]-(m:PharmacologicClass) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths exist that directly relate a gene node to a disease node?", "output": "MATCH path = (n:Gene)-[*1]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all paths that consist of three relationships between MolecularFunction nodes and Symptom nodes.", "output": "MATCH path = (n:MolecularFunction)-[*3]-(m:Symptom) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the paths of length three that link 'Gene' entities to 'Compound' entities in our graph?", "output": "MATCH path = (n:Gene)-[*3]-(m:Compound) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths connect any node labeled as \"MolecularFunction\" to any node labeled as \"BiologicalProcess\" through a single relationship?", "output": "MATCH path = (n:MolecularFunction)-[*1]-(m:BiologicalProcess) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which paths in the database take three steps to connect anatomical elements with gene elements?", "output": "MATCH path = (n:Anatomy)-[*3]-(m:Gene) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you explain how the query retrieves all paths of length one that link a BiologicalProcess node to a CellularComponent node?", "output": "MATCH path = (n:BiologicalProcess)-[*1]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How are any \"Anatomy\" nodes linked to \"Disease\" nodes via precisely three steps, and can you return those paths?", "output": "MATCH path = (n:Anatomy)-[*3]-(m:Disease) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find all paths of exactly two relationships starting from nodes labeled as 'Compound' and ending at nodes labeled as 'CellularComponent'?", "output": "MATCH path = (n:Compound)-[*2]-(m:CellularComponent) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find all paths consisting of three relationships that link nodes classified under 'Anatomy' with those labeled as 'SideEffect'?", "output": "MATCH path = (n:Anatomy)-[*3]-(m:SideEffect) RETURN path"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all anatomy node names that have some form of relationship with the pathway node labeled with \"PC7_5558.\"", "output": "MATCH path = (n:Pathway{identifier: \"PC7_5558\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of all gene nodes that are linked, through any relationship, to the pharmacologic class node with the identifier \"N0000009801\".", "output": "MATCH path = (n:PharmacologicClass{identifier: \"N0000009801\"})-[*]-(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy nodes can be found in relation to the specific pathway named \"Synthesis of 5-eicosatetraenoic acids\"?", "output": "MATCH path = (n:Pathway{name: \"Synthesis of 5-eicosatetraenoic acids\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the anatomy nodes that have any connection to the pathway with the title \"APOBEC3G mediated resistance to HIV-1 infection.\"", "output": "MATCH path = (n:Pathway{name: \"APOBEC3G mediated resistance to HIV-1 infection\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all anatomy nodes that are connected via any path to the pathway with the identifier \"PC7_4099\"?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_4099\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy nodes have a relationship with the \"Oxytocin signaling\" pathway, and what are their names?", "output": "MATCH path = (n:Pathway{name: \"Oxytocin signaling\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy nodes that are connected to the pathway with the identifier \"WP2889_r79753\"?", "output": "MATCH path = (n:Pathway{identifier: \"WP2889_r79753\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy nodes that are connected to the pathway identified as \"PC7_1537\"?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_1537\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of anatomy nodes that have any form of connection with the molecular function node marked as \"GO:0016309\".", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0016309\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of pharmacologic classes that have a relationship with the anatomy node identified as \"UBERON:0001295\".", "output": "MATCH path = (n:Anatomy{identifier: \"UBERON:0001295\"})-[*]-(m:PharmacologicClass) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy nodes are related to the pathway called \"Ca activated K+ channels\" via any type of relationship?", "output": "MATCH path = (n:Pathway{name: \"Ca activated K+ channels\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What symptom names can be found by traversing from the pathway node \"PC7_1561\" through any relationships?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_1561\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names are linked to the specific anatomy node labeled \"UBERON:0002367\" through any connections?", "output": "MATCH path = (n:Anatomy{identifier: \"UBERON:0002367\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What names of biological processes are related through connections to the pathway node with identifier \"PC7_6514\"?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_6514\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy nodes that are connected in some way to the activity involving potassium-transporting ATPase?", "output": "MATCH path = (n:MolecularFunction{name: \"potassium-transporting ATPase activity\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of anatomy-related nodes that have some form of connection with the molecular function \"enone reductase activity\"?", "output": "MATCH path = (n:MolecularFunction{name: \"enone reductase activity\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of anatomy nodes associated with the \"ER-Phagosome pathway\"?", "output": "MATCH path = (n:Pathway{name: \"ER-Phagosome pathway\"})-[*]-(m:Anatomy) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What biological process names can be found in paths associated with the \"Activation of APC/C and APC/C:Cdc20 mediated degradation of mitotic proteins\" pathway?", "output": "MATCH path = (n:Pathway{name: \"Activation of APC/C and APC/C:Cdc20 mediated degradation of mitotic proteins\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the symptom names that are connected, via any type of relationship, with the \"mitogen-activated protein kinase p38 binding\" molecular function.", "output": "MATCH path = (n:MolecularFunction{name: \"mitogen-activated protein kinase p38 binding\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all cellular components connected to the pathway with the identifier \"PC7_6520\"?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_6520\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of pharmacologic classes associated through any relationship with the specific anatomy node identified by \"UBERON:0002365\"?", "output": "MATCH path = (n:Anatomy{identifier: \"UBERON:0002365\"})-[*]-(m:PharmacologicClass) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound names can be found in the network associated with the pathway labeled \"Metabolism of folate and pterines\"?", "output": "MATCH path = (n:Pathway{name: \"Metabolism of folate and pterines\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of pharmacologic classes associated with the \"Transcriptional activation of cell cycle inhibitor p21\" pathway?", "output": "MATCH path = (n:Pathway{name: \"Transcriptional activation of cell cycle inhibitor p21\"})-[*]-(m:PharmacologicClass) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases that are connected to the pathway with the identifier \"PC7_3277\"?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_3277\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the names of diseases linked, through any pathway, to the anatomy node with the identifier \"UBERON:0001479\"?", "output": "MATCH path = (n:Anatomy{identifier: \"UBERON:0001479\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of pathways that share any type of relationship with the \"beta-galactosidase activity\" molecular function.", "output": "MATCH path = (n:MolecularFunction{name: \"beta-galactosidase activity\"})-[*]-(m:Pathway) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compound names are returned when looking for connections with the pathway marked by the identifier \"PC7_7707\"?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_7707\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of symptoms associated with the \"Aurora B signaling\" pathway?", "output": "MATCH path = (n:Pathway{name: \"Aurora B signaling\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic classes are linked through any kind of relationship to the pathway with identifier \"PC7_7729\"?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_7729\"})-[*]-(m:PharmacologicClass) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the gene names linked to the anatomy node with the identifier \"UBERON:0002382\"?", "output": "MATCH path = (n:Anatomy{identifier: \"UBERON:0002382\"})-[*]-(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of pharmacologic classes that are related, through any type or number of links, to the molecular function with the identifier \"GO:1901611\".", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:1901611\"})-[*]-(m:PharmacologicClass) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the cellular component names related in any way to the molecular function node with identifier \"GO:0030742\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0030742\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all cellular components connected to the pathway with identifier \"PC7_983\" and provide their names?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_983\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of biological processes that have a connection with the 'Viral RNP Complexes in the Host Cell Nucleus' pathway.", "output": "MATCH path = (n:Pathway{name: \"Viral RNP Complexes in the Host Cell Nucleus\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What symptom names are connected in any path to the pathway identified as \"PC7_2117\"?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_2117\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names are related to the \"Loss of Nlp from mitotic centrosomes\" pathway via any relationships?", "output": "MATCH path = (n:Pathway{name: \"Loss of Nlp from mitotic centrosomes\"})-[*]-(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names are connected to the biological process \"phosphatidylinositol dephosphorylation\" by any path in the graph?", "output": "MATCH path = (n:BiologicalProcess{name: \"phosphatidylinositol dephosphorylation\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound names are linked to the pathway 'Thrombin signalling through proteinase activated receptors (PARs)'?", "output": "MATCH path = (n:Pathway{name: \"Thrombin signalling through proteinase activated receptors (PARs)\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all compounds that are connected in any way to the gene named \"LZTS3\" in the database?", "output": "MATCH path = (n:Gene{name: \"LZTS3\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of biological processes that have a relationship with the pathway identified by \"PC7_4781\".", "output": "MATCH path = (n:Pathway{identifier: \"PC7_4781\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of gene nodes associated with the molecular function labeled with the identifier \"GO:0004816\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0004816\"})-[*]-(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of symptoms connected to the \"Nucleotide-like (purinergic) receptors\" pathway through any kind of relationship?", "output": "MATCH path = (n:Pathway{name: \"Nucleotide-like (purinergic) receptors\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of biological processes that have a relationship with the \"IL2 signaling events mediated by STAT5\" pathway.", "output": "MATCH path = (n:Pathway{name: \"IL2 signaling events mediated by STAT5\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of symptoms that are connected to the molecular function \"chondroitin 6-sulfotransferase activity\" in any way?", "output": "MATCH path = (n:MolecularFunction{name: \"chondroitin 6-sulfotransferase activity\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names can we obtain when traversing any relationships starting from the pharmacologic class with the name \"Estradiol\"?", "output": "MATCH path = (n:PharmacologicClass{name: \"Estradiol\"})-[*]-(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of symptoms connected to the gene named \"GPX3\" in the database?", "output": "MATCH path = (n:Gene{name: \"GPX3\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the gene names that have any form of connection with the molecular function node labeled \"GO:1902271\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:1902271\"})-[*]-(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of Cellular Components that have any type of relationship with the \"FGFR2c ligand binding and activation\" pathway.", "output": "MATCH path = (n:Pathway{name: \"FGFR2c ligand binding and activation\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of diseases that have a relationship with any node linked to the pharmacologic class identified by \"N0000166743\"?", "output": "MATCH path = (n:PharmacologicClass{identifier: \"N0000166743\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the cellular components connected to the \"Mitotic Metaphase/Anaphase Transition\" pathway?", "output": "MATCH path = (n:Pathway{name: \"Mitotic Metaphase/Anaphase Transition\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms are connected, directly or indirectly, to the pathway named \"Monoamine Transport\"?", "output": "MATCH path = (n:Pathway{name: \"Monoamine Transport\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of all cellular components that are associated, through any type of relationship, with the pathway labeled \"PC7_8675\".", "output": "MATCH path = (n:Pathway{identifier: \"PC7_8675\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular components, by name, are connected to the pathway with ID \"PC7_11385\", regardless of the type or direction of the relationship?", "output": "MATCH path = (n:Pathway{identifier: \"PC7_11385\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which cellular components can be reached through any connection from the pharmacologic class identified as \"N0000007620\", and what are their names?", "output": "MATCH path = (n:PharmacologicClass{identifier: \"N0000007620\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names are related to the pathway \"SUMO is proteolytically processed\" through any kind of relationship?", "output": "MATCH path = (n:Pathway{name: \"SUMO is proteolytically processed\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological process names can be found through any type or distance of connections originating from the \"DNA Repair\" pathway?", "output": "MATCH path = (n:Pathway{name: \"DNA Repair\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the pathways that are connected to the molecular function identified as \"GO:0019905\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0019905\"})-[*]-(m:Pathway) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that are connected to the gene named \"NLGN4Y\" in the network?", "output": "MATCH path = (n:Gene{name: \"NLGN4Y\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the disease names linked to the molecular function \"interferon binding\" by any number of connections.", "output": "MATCH path = (n:MolecularFunction{name: \"interferon binding\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms are connected to the gene named 'AQP12A' in the database?", "output": "MATCH path = (n:Gene{name: \"AQP12A\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of compounds that have any kind of relationship with the pathway named \"Proteasome Degradation\".", "output": "MATCH path = (n:Pathway{name: \"Proteasome Degradation\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of symptoms connected to the gene labeled \"LOC105369212\" in the network?", "output": "MATCH path = (n:Gene{name: \"LOC105369212\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the compound names that are connected, directly or indirectly, to the gene with identifier \"221823\"?", "output": "MATCH path = (n:Gene{identifier: \"221823\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the BiologicalProcesses connected to the MolecularFunction with the identifier \"GO:0035939\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0035939\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What cellular component names can be found by tracing any path to the biological process with the identifier \"GO:0009313\"?", "output": "MATCH path = (n:BiologicalProcess{identifier: \"GO:0009313\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the compound names that have any type of relationship with the \"sense organ\" node in the anatomy category?", "output": "MATCH path = (n:Anatomy{name: \"sense organ\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pharmacologic class names are linked through any type or number of relationships to the molecular function with the identifier \"GO:0016661\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0016661\"})-[*]-(m:PharmacologicClass) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of symptoms linked through any number of relationships to the gene with identifier \"8708\"?", "output": "MATCH path = (n:Gene{identifier: \"8708\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds connected to the biological process named \"tolerance induction to lipopolysaccharide\" within the graph?", "output": "MATCH path = (n:BiologicalProcess{name: \"tolerance induction to lipopolysaccharide\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the names of all cellular components connected to the compound with the identifier \"DB00573\"?", "output": "MATCH path = (n:Compound{identifier: \"DB00573\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease names are related to the molecular function \"hydroxymethylglutaryl-CoA synthase activity\" through any type of connection?", "output": "MATCH path = (n:MolecularFunction{name: \"hydroxymethylglutaryl-CoA synthase activity\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease names are related through any relationship path to the pharmacologic class having identifier \"N0000000243\"?", "output": "MATCH path = (n:PharmacologicClass{identifier: \"N0000000243\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which biological processes are related, either directly or through other nodes, to the gene with the identifier \"102723547\"?", "output": "MATCH path = (n:Gene{identifier: \"102723547\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are connected through any type of relationship to the \"TGF-beta Receptor Signaling\" pathway?", "output": "MATCH path = (n:Pathway{name: \"TGF-beta Receptor Signaling\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of cellular components that are connected to the biological process known as \"sulfur compound transport\"?", "output": "MATCH path = (n:BiologicalProcess{name: \"sulfur compound transport\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the cellular components involved in or related to the process of \"regulation of calcium ion transport into cytosol\".", "output": "MATCH path = (n:BiologicalProcess{name: \"regulation of calcium ion transport into cytosol\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that are connected, directly or indirectly, to the pharmacologic class \"Platinum-containing Compounds\" in the database?", "output": "MATCH path = (n:PharmacologicClass{name: \"Platinum-containing Compounds\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of diseases that are linked through any type of relationship to the molecular function with the identifier \"GO:0016273\".", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0016273\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that are connected to the gene labeled \"PIAS1\" in the database?", "output": "MATCH path = (n:Gene{name: \"PIAS1\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the biological process names connected to the gene known as \"CLCN6\".", "output": "MATCH path = (n:Gene{name: \"CLCN6\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of biological processes connected to the 'Bile salt and organic anion SLC transporters' pathway?", "output": "MATCH path = (n:Pathway{name: \"Bile salt and organic anion SLC transporters\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases, by name, are connected in any way to the gene specified by the identifier \"339834\"?", "output": "MATCH path = (n:Gene{identifier: \"339834\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of cellular components associated with the biological process named \"regulation of single-species biofilm formation in or on host organism\"?", "output": "MATCH path = (n:BiologicalProcess{name: \"regulation of single-species biofilm formation in or on host organism\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the symptoms that have some relational path with the TMEM159 gene.", "output": "MATCH path = (n:Gene{name: \"TMEM159\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of cellular components connected to the \"Activation of RAS in B cells\" pathway?", "output": "MATCH path = (n:Pathway{name: \"Activation of RAS in B cells\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the compounds that are connected by any kind of relationship to the gene labeled \"ZBED2\"?", "output": "MATCH path = (n:Gene{name: \"ZBED2\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which pathways are linked to the molecular function with the identifier \"GO:0071568\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0071568\"})-[*]-(m:Pathway) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases connected to the molecular function named \"ICAM-3 receptor activity\"?", "output": "MATCH path = (n:MolecularFunction{name: \"ICAM-3 receptor activity\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of biological processes connected to the molecular function named \"phosphatidylinositol-3,5-bisphosphate 3-phosphatase activity\"?", "output": "MATCH path = (n:MolecularFunction{name: \"phosphatidylinositol-3,5-bisphosphate 3-phosphatase activity\"})-[*]-(m:BiologicalProcess) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are interconnected with the pathway named \"Heme biosynthesis\"?", "output": "MATCH path = (n:Pathway{name: \"Heme biosynthesis\"})-[*]-(m:Disease) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene names can be found that have some form of connection to the molecular function labeled \"type I interferon binding\"?", "output": "MATCH path = (n:MolecularFunction{name: \"type I interferon binding\"})-[*]-(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of all cellular components related to the gene with identifier \"4114\" in any way?", "output": "MATCH path = (n:Gene{identifier: \"4114\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the names of all cellular components linked through any relationship to the biological process called ovarian follicle development.", "output": "MATCH path = (n:BiologicalProcess{name: \"ovarian follicle development\"})-[*]-(m:CellularComponent) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which symptoms are connected to the NFIL3 gene through any path?", "output": "MATCH path = (n:Gene{name: \"NFIL3\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of compound names that are interconnected in any way with the molecular function called \"alpha-actinin binding\"?", "output": "MATCH path = (n:MolecularFunction{name: \"alpha-actinin binding\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you find the names of pharmacologic classes related to the specific molecular function designated by the identifier \"GO:0008757\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0008757\"})-[*]-(m:PharmacologicClass) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the compounds that are connected to the molecular function with the identifier \"GO:0004995\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0004995\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compound names can you find that are associated, at any connection depth, with the molecular function marked by GO:0015440?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0015440\"})-[*]-(m:Compound) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of symptoms that are connected to the molecular function with the identifier \"GO:0030158\"?", "output": "MATCH path = (n:MolecularFunction{identifier: \"GO:0030158\"})-[*]-(m:Symptom) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the gene names that are associated with the pharmacologic class named \"Receptor Tyrosine Kinase Inhibitors.\"", "output": "MATCH path = (n:PharmacologicClass{name: \"Receptor Tyrosine Kinase Inhibitors\"})-[*]-(m:Gene) RETURN m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL and name of the compound whose InChI value matches \"InChI=1S/C19H20N2O3S/c1-2-13-3-6-15(20-12-13)9-10-24-16-7-4-14(5-8-16)11-17-18(22)21-19(23)25-17/h3-8,12,17H,2,9-11H2,1H3,(H,21,22,23)\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C19H20N2O3S/c1-2-13-3-6-15(20-12-13)9-10-24-16-7-4-14(5-8-16)11-17-18(22)21-19(23)25-17/h3-8,12,17H,2,9-11H2,1H3,(H,21,22,23)\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL and name of the compound with the InChI identifier \"InChI=1S/C15H18N4O5/c1-5-9(16)12(21)8-6(4-24-14(17)22)15(23-2)13-7(18-13)3-19(15)10(8)11(5)20/h6-7,13,18H,3-4,16H2,1-2H3,(H2,17,22)/t6-,7+,13+,15-/m1/s1\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C15H18N4O5/c1-5-9(16)12(21)8-6(4-24-14(17)22)15(23-2)13-7(18-13)3-19(15)10(8)11(5)20/h6-7,13,18H,3-4,16H2,1-2H3,(H2,17,22)/t6-,7+,13+,15-/m1/s1\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the name and source of the gene with the description specified as \"Fas (TNFRSF6)-associated via death domain\".", "output": "MATCH (n:Gene { description: \"Fas (TNFRSF6)-associated via death domain\" }) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URL and name for the gene node described as \"cyclin-dependent kinase inhibitor 1B (p27, Kip1)\"?", "output": "MATCH (n:Gene { description: \"cyclin-dependent kinase inhibitor 1B (p27, Kip1)\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the URL and name details for the gene that has \"chemokine (C-X-C motif) receptor 2\" as its description?", "output": "MATCH (n:Gene { description: \"chemokine (C-X-C motif) receptor 2\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URL and identifier associated with a compound given its InChI code \"InChI=1S/C22H23N3O4/c1-4-16-6-5-7-17(12-16)25-22-18-13-20(28-10-8-26-2)21(29-11-9-27-3)14-19(18)23-15-24-22/h1,5-7,12-15H,8-11H2,2-3H3,(H,23,24,25)\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C22H23N3O4/c1-4-16-6-5-7-17(12-16)25-22-18-13-20(28-10-8-26-2)21(29-11-9-27-3)14-19(18)23-15-24-22/h1,5-7,12-15H,8-11H2,2-3H3,(H,23,24,25)\" }) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the InChIKey and name of a compound identified by the given InChI \"InChI=1S/C10H12ClN5O3/c11-10-14-8(12)7-9(15-10)16(3-13-7)6-1-4(18)5(2-17)19-6/h3-6,17-18H,1-2H2,(H2,12,14,15)/t4-,5+,6+/m0/s1\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C10H12ClN5O3/c11-10-14-8(12)7-9(15-10)16(3-13-7)6-1-4(18)5(2-17)19-6/h3-6,17-18H,1-2H2,(H2,12,14,15)/t4-,5+,6+/m0/s1\" }) RETURN n.inchikey, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound has the InChI \"InChI=1S/C27H38N2O4/c1-20(2)27(19-28,22-10-12-24(31-5)26(18-22)33-7)14-8-15-29(3)16-13-21-9-11-23(30-4)25(17-21)32-6/h9-12,17-18,20H,8,13-16H2,1-7H3\" and what are its identifier and name?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C27H38N2O4/c1-20(2)27(19-28,22-10-12-24(31-5)26(18-22)33-7)14-8-15-29(3)16-13-21-9-11-23(30-4)25(17-21)32-6/h9-12,17-18,20H,8,13-16H2,1-7H3\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifier and BTO ID for the anatomy entity labeled \"prostate gland\"?", "output": "MATCH (n:Anatomy { name: \"prostate gland\" }) RETURN n.identifier, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URL and identifier are associated with the compound having the InChI \"InChI=1S/C17H18N2O6/c1-9-13(16(20)24-3)15(14(10(2)18-9)17(21)25-4)11-7-5-6-8-12(11)19(22)23/h5-8,15,18H,1-4H3\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C17H18N2O6/c1-9-13(16(20)24-3)15(14(10(2)18-9)17(21)25-4)11-7-5-6-8-12(11)19(22)23/h5-8,15,18H,1-4H3\" }) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I would like to know the identifier and name of the compound associated with the URL \"http://www.drugbank.ca/drugs/DB06589.\"", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB06589\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the identifiers and names of pharmacologic classes whose source is the FDA via DrugCentral?", "output": "MATCH (n:PharmacologicClass { source: \"FDA via DrugCentral\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "I need to find out the name and source of the gene linked to the URL \"http://identifiers.org/ncbigene/23435\". What are they?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/23435\" }) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source and name of the compound with the InChIKey \"InChIKey=HAWPXGHAZFHHAD-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=HAWPXGHAZFHHAD-UHFFFAOYSA-N\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "List the identifiers and names of pharmacologic classes that hold a \"CC BY 4.0\" license.", "output": "MATCH (n:PharmacologicClass { license: \"CC BY 4.0\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifier and name of the compound with the URL \"http://www.drugbank.ca/drugs/DB00151\"?", "output": "MATCH (n:Compound { url: \"http://www.drugbank.ca/drugs/DB00151\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the source and identifier of the compound with the specified InChI string \"InChI=1S/C20H23N/c1-21(2)15-7-12-20-18-10-5-3-8-16(18)13-14-17-9-4-6-11-19(17)20/h3-6,8-12H,7,13-15H2,1-2H3\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C20H23N/c1-21(2)15-7-12-20-18-10-5-3-8-16(18)13-14-17-9-4-6-11-19(17)20/h3-6,8-12H,7,13-15H2,1-2H3\" }) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifier and name of the disease with the specific URL \"http://purl.obolibrary.org/obo/DOID_1793\"?", "output": "MATCH (n:Disease { url: \"http://purl.obolibrary.org/obo/DOID_1793\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we obtain the source and identifier details for the compound that is identified by the InChI \"InChI=1/C21H26O2/c1-4-21(22)12-10-19-18-7-5-14-13-15(23-3)6-8-16(14)17(18)9-11-20(19,21)2/h1,6,8,13,17-19,22H,5,7,9-12H2,2-3H3/t17-,18-,19+,20+,21+/s2\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1/C21H26O2/c1-4-21(22)12-10-19-18-7-5-14-13-15(23-3)6-8-16(14)17(18)9-11-20(19,21)2/h1,6,8,13,17-19,22H,5,7,9-12H2,2-3H3/t17-,18-,19+,20+,21+/s2\" }) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names and sources of diseases that possess a \"CC BY 3.0\" license?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the source and URL associated with the compound that has the InChI string \"InChI=1S/C21H21ClN4OS/c22-17-13-18-15(12-20(27)23-18)11-14(17)5-6-25-7-9-26(10-8-25)21-16-3-1-2-4-19(16)28-24-21/h1-4,11,13H,5-10,12H2,(H,23,27)\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C21H21ClN4OS/c22-17-13-18-15(12-20(27)23-18)11-14(17)5-6-25-7-9-26(10-8-25)21-16-3-1-2-4-19(16)28-24-21/h1-4,11,13H,5-10,12H2,(H,23,27)\" }) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URL and source for genes specifically on chromosome 8?", "output": "MATCH (n:Gene { chromosome: \"8\" }) RETURN n.url, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name and source of the gene identified by the URL \"http://identifiers.org/ncbigene/7043\"?", "output": "MATCH (n:Gene { url: \"http://identifiers.org/ncbigene/7043\" }) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the ID and name of diseases with a \"CC BY 3.0\" license?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the InChIKeys and names for each compound that has been associated with the license \"CC BY-NC 4.0\".", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.inchikey, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find and return the source and BTO ID for each anatomy entity that has the license \"CC BY 3.0\"?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.source, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the source and name of diseases that possess a license type of \"CC BY 3.0\".", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the identifier and name of the compound characterized by the InChIKey \"CUIHSIWYWATEQL-UHFFFAOYSA-N\".", "output": "MATCH (n:Compound { inchikey: \"InChIKey=CUIHSIWYWATEQL-UHFFFAOYSA-N\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the source and name for each compound that has been assigned the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the identifiers and names of pharmacologic classes where the license is specified as \"CC BY 4.0\"?", "output": "MATCH (n:PharmacologicClass { license: \"CC BY 4.0\" }) RETURN n.identifier, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the source and name for each compound that has a license of \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the source and BTO ID for anatomy entities that are marked with the \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.source, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the chromosome and name of each gene that has a CC0 1.0 license?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which source and identifier are listed for the compound that has the exact InChI formula \"InChI=1S/C11H12Cl2N2O5/c12-10(13)11(18)14-8(5-16)9(17)6-1-3-7(4-2-6)15(19)20/h1-4,8-10,16-17H,5H2,(H,14,18)/t8-,9-/m1/s1\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C11H12Cl2N2O5/c12-10(13)11(18)14-8(5-16)9(17)6-1-3-7(4-2-6)15(19)20/h1-4,8-10,16-17H,5H2,(H,14,18)/t8-,9-/m1/s1\" }) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the URLs and sources associated with genes on chromosome number 19?", "output": "MATCH (n:Gene { chromosome: \"19\" }) RETURN n.url, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the URL and BTO ID for each Anatomy element with a \"CC BY 3.0\" license.", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.url, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the source and name details of anatomy items that possess the license type \"CC BY 3.0.\"", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What chromosome information and descriptions are available for genes with the \"CC0 1.0\" license?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the InChI and InChIKey of compounds with a \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.inchi, n.inchikey"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the source and identifier information for diseases that are licensed as \"CC BY 3.0\"?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the URLs and names for anatomy entities that hold a \"CC BY 3.0\" license.", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy is associated with the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\", and what are its name and identifier?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0002367\" }) RETURN n.name, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the name and source information for diseases under the \"CC BY 3.0\" license.", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the mesh_id and bto_id from Anatomy nodes with the \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.mesh_id, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which source and name are associated with the compound that has the InChI notation: \"InChI=1S/C16H19BrN2/c1-19(2)12-10-15(16-5-3-4-11-18-16)13-6-8-14(17)9-7-13/h3-9,11,15H,10,12H2,1-2H3/t15-/m0/s1\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C16H19BrN2/c1-19(2)12-10-15(16-5-3-4-11-18-16)13-6-8-14(17)9-7-13/h3-9,11,15H,10,12H2,1-2H3/t15-/m0/s1\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source and URL of the compound with the specific InChI key \"InChI=1S/C15H14ClN3O4S/c16-8-6-24-14-10(13(21)19(14)11(8)15(22)23)18-12(20)9(17)7-4-2-1-3-5-7/h1-5,9-10,14H,6,17H2,(H,18,20)(H,22,23)/t9-,10-,14-/m1/s1\"?", "output": "MATCH (n:Compound { inchi: \"InChI=1S/C15H14ClN3O4S/c16-8-6-24-14-10(13(21)19(14)11(8)15(22)23)18-12(20)9(17)7-4-2-1-3-5-7/h1-5,9-10,14H,6,17H2,(H,18,20)(H,22,23)/t9-,10-,14-/m1/s1\" }) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find out the source and name of the anatomy entry with the mesh_id \"D011467\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs and names of diseases that have 'Disease Ontology' as their source?", "output": "MATCH (n:Disease { source: \"Disease Ontology\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URL and name of each compound that comes from DrugBank?", "output": "MATCH (n:Compound { source: \"DrugBank\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy item has the specified URL \"http://purl.obolibrary.org/obo/UBERON_0002367\" and what are its associated name and BTO ID?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0002367\" }) RETURN n.name, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the InChI and name details of compounds that possess a \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.inchi, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the source and URL for each disease that is available with a \"CC BY 3.0\" license.", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can you find the source and identifier for a compound with the specified InChIKey \"LMEKQMALGUDUQG-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=LMEKQMALGUDUQG-UHFFFAOYSA-N\" }) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the mesh identifiers and identifiers for anatomy records that are available under the \"CC BY 3.0\" license.", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.mesh_id, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the mesh IDs and identifiers of anatomy records that carry the \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.mesh_id, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can you retrieve the chromosome and URL details for genes that are licensed as \"CC0 1.0\"?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the mesh ID and name for each Anatomy that holds a \"CC BY 3.0\" license in the dataset?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.mesh_id, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name and BTO ID of the anatomy entity identified by the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\"?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0002367\" }) RETURN n.name, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the name and BTO ID for the anatomy object linked to the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\".", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0002367\" }) RETURN n.name, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes with the \"CC0 1.0\" license have their descriptions and sources available?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.description, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source and the name of each anatomy entry that holds a \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What source and BTO ID information correspond to the anatomy entry with the specific mesh_id \"D011467\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\" }) RETURN n.source, n.bto_id"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes and descriptions pertain to genes with the license type CC0 1.0?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.description"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the description and name for each gene node with a \"CC0 1.0\" license.", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.description, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the source and identifier details for the compound where the InChIKey is \"GJJFMKBJSRMPLA-DZGCQCFKSA-N\".", "output": "MATCH (n:Compound { inchikey: \"InChIKey=GJJFMKBJSRMPLA-DZGCQCFKSA-N\" }) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which source and URL are linked to the Anatomy record that contains the mesh_id \"D004817\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D004817\" }) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the chromosome data and URL for each gene with a \"CC0 1.0\" license?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source and URL information for each compound with a \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available about the name and source of genes with a CC0 1.0 license?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the URL and name attributes of the anatomy object that has a mesh ID of \"D011467\".", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find and return the name and identifier of the anatomy node with the specific mesh ID of \"D011467\".", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\" }) RETURN n.name, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information can be retrieved about the URL and source for each gene node having a license type of \"CC0 1.0\"?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.url, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the InChI identifiers and names of all compounds with the licensing status \"CC BY-NC 4.0\".", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.inchi, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which chromosomes and names belong to genes with the license type \"CC0 1.0\" in the database?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names and sources of genes that have a CC0 1.0 license in the database?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What information is available regarding the source and URLs for anatomy items that have the \"CC BY 3.0\" license?", "output": "MATCH (n:Anatomy { license: \"CC BY 3.0\" }) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source and name of the compound with the InChIKey \"CEUORZQYGODEFX-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=CEUORZQYGODEFX-UHFFFAOYSA-N\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the name and identifier of the anatomy entity with the URL \"http://purl.obolibrary.org/obo/UBERON_0002367\"?", "output": "MATCH (n:Anatomy { url: \"http://purl.obolibrary.org/obo/UBERON_0002367\" }) RETURN n.name, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URL and identifier for the compound with the InChIKey HEFNNWSXXWATRW-UHFFFAOYSA-N?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=HEFNNWSXXWATRW-UHFFFAOYSA-N\" }) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URL and name of genes that have the \"CC0 1.0\" license?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.url, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve the URL and identifier information for the Anatomy node with mesh_id \"D004817\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D004817\" }) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the InChI and name of each compound with the \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.inchi, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the source and URL information for each compound labeled as having a \"CC BY-NC 4.0\" license?", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the InChI information and identifiers for compounds that are licensed as \"CC BY-NC 4.0\".", "output": "MATCH (n:Compound { license: \"CC BY-NC 4.0\" }) RETURN n.inchi, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the source and name of all diseases that are licensed as \"CC BY 3.0\"?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URLs and sources for genes with the license \"CC0 1.0\" recorded in the database?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.url, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the URL and identifier for each compound that has \"DrugBank\" as its source?", "output": "MATCH (n:Compound { source: \"DrugBank\" }) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the sources and names of diseases with a license of \"CC BY 3.0\" in the database?", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the chromosome and source information for genes that have a license of \"CC0 1.0\"?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the source and website link of diseases marked with a \"CC BY 3.0\" license.", "output": "MATCH (n:Disease { license: \"CC BY 3.0\" }) RETURN n.source, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the URL and identifier of the compound with InChIKey \"SDUQYLNIPVEERB-QPPQHZFASA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=SDUQYLNIPVEERB-QPPQHZFASA-N\" }) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the name and source of the compound with an InChIKey of \"CUIHSIWYWATEQL-UHFFFAOYSA-N\".", "output": "MATCH (n:Compound { inchikey: \"InChIKey=CUIHSIWYWATEQL-UHFFFAOYSA-N\" }) RETURN n.source, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the name and source details for every Gene node with a \"CC0 1.0\" license.", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.name, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What chromosome and gene names are associated with genes labeled with the license \"CC0 1.0\"?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the source and identifier associated with the compound having the InChIKey \"HYIMSNHJOBLJNT-UHFFFAOYSA-N\"?", "output": "MATCH (n:Compound { inchikey: \"InChIKey=HYIMSNHJOBLJNT-UHFFFAOYSA-N\" }) RETURN n.source, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I retrieve chromosome and URL details for all genes that are licensed under \"CC0 1.0\"?", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the URL and identifier of the anatomy entry with the MeSH ID \"D011467\"?", "output": "MATCH (n:Anatomy { mesh_id: \"D011467\" }) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the chromosome and name information for all genes licensed under CC0 1.0.", "output": "MATCH (n:Gene { license: \"CC0 1.0\" }) RETURN n.chromosome, n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the URLs and identifiers for pharmacologic classes sourced through FDA via DrugCentral?", "output": "MATCH (n:PharmacologicClass { source: \"FDA via DrugCentral\" }) RETURN n.url, n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which descriptions and sources pertain to genes associated with chromosome 17?", "output": "MATCH (n:Gene { chromosome: \"17\" }) RETURN n.description, n.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find the names of compounds and the specific genes they upregulate through the UPREGULATES_CuG relationship.", "output": "MATCH (n:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the identifiers for both pharmacologic classes and compounds that are linked through an 'INCLUDES_PCiC' relationship?", "output": "MATCH (n:PharmacologicClass)-[r:INCLUDES_PCiC]->(m:Compound) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers for genes that have regulatory relationships ('REGULATES_GrG') with other genes?", "output": "MATCH (n:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify and return the names of each compound that is linked to another compound by the 'RESEMBLES_CrC' relationship?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases that are similar to each other based on the 'RESEMBLES_DrD' relationship?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of anatomy structures that express specific genes according to the EXPRESSES_AeG relationship?", "output": "MATCH (n:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease identifiers are associated with genes that they upregulate through the relationship UPREGULATES_DuG, and what are the identifiers of those genes?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the gene identifiers and the identifiers of the cellular components they are associated with via the 'PARTICIPATES_GpCC' relationship?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the disease names along with the genes they upregulate using the 'UPREGULATES_DuG' relationship?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that regulate other genes according to the 'REGULATES_GrG' relationship?", "output": "MATCH (n:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases are linked to which genes according to the 'ASSOCIATES_DaG' relationship?", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of compounds that are used to treat specific diseases according to the TREATS_CtD relationship in the database?", "output": "MATCH (n:Compound)-[r:TREATS_CtD]->(m:Disease) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are linked to biological processes through the PARTICIPATES_GpBP relationship, and what are their identifiers?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are associated with genes through the binds CbG relationship, and what are their names?", "output": "MATCH (n:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list pairs of disease identifiers that are connected by the RESEMBLES_DrD relationship?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What gene and molecular function pairs, identified by their unique identifiers, are connected by a PARTICIPATES_GpMF relationship?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the identifiers for compounds that have a connection labeled 'BINDS_CbG' to genes?", "output": "MATCH (n:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that have a 'COVARIES_GcG' relationship with other genes, and what are the names of those related genes?", "output": "MATCH (n:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What genes are affected by downregulation from diseases, and which diseases are responsible?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify diseases that act to downregulate specific genes in terms of their identifiers?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Show me the identifiers for each disease along with the identifiers of symptoms they present.", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of compounds that have a CrC resemblance to one another in the database?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers are associated with specific anatomy identifiers through the localization relationship?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the identifiers of diseases along with those of genes they associate with?", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the list of interacting gene identifiers based on the INTERACTS_GiG relationship?", "output": "MATCH (n:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the identifiers of genes and their corresponding partners linked by the COVARIES_GcG relationship?", "output": "MATCH (n:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the anatomy components that are involved in downregulating genes and give the names of both the components and the genes they affect.", "output": "MATCH (n:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases and the anatomical locations where they localize, according to the database?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the list of symptoms presented by each disease?", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of genes that interact with each other as captured in the 'INTERACTS_GiG' relationship?", "output": "MATCH (n:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compounds are known to provide palliation for specific diseases, and what are the names of these diseases?", "output": "MATCH (n:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the names of anatomy entities that positively influence gene expression?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What is the relationship between compound identifiers and gene identifiers when a compound upregulates a gene?", "output": "MATCH (n:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers are linked to compounds through a palliative relationship, and what are the identifiers of these compounds?", "output": "MATCH (n:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of anatomical entities that downregulate specific genes?", "output": "MATCH (n:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I identify the compounds and genes where the compounds are known to downregulate the genes?", "output": "MATCH (n:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find compounds that are associated with treating diseases, presenting the names of both the compounds and the diseases.", "output": "MATCH (n:Compound)-[r:TREATS_CtD]->(m:Disease) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What pairs of Anatomy and Gene nodes have a relationship where the Anatomy node upregulates the Gene node, and what are their respective identifiers?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the pharmacologic classes and their corresponding compounds in the database?", "output": "MATCH (n:PharmacologicClass)-[r:INCLUDES_PCiC]->(m:Compound) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What identifiers correspond to anatomy and the genes they express in this dataset?", "output": "MATCH (n:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What compounds are responsible for downregulating genes, and what are the names of the genes that are downregulated?", "output": "MATCH (n:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we identify the genes involved in pathways along with the identifiers for both the genes and the pathways?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "For each gene, identify the biological process it takes part in and provide the names of both.", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all unique compound identifiers that exhibit a Licensed \"CC BY-NC 4.0\" 'BINDS_CbG' relationship with any gene.", "output": "MATCH (n:Compound)-[r:BINDS_CbG{license: \"CC BY-NC 4.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all unique disease identifiers that are related to genes via \"ASSOCIATES_DaG\" relationships that carry the \"CC BY 4.0\" license.", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG{license: \"CC BY 4.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique identifiers of anatomy nodes that have a 'UPREGULATES_AuG' relationship with genes, as sourced from Bgee?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG{source: \"Bgee\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers of diseases that have a \"LOCALIZES_DlA\" association with anatomy nodes, specifically those with a CC0 1.0 license?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{license: \"CC0 1.0\"}]->(m:Anatomy) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct compounds are associated with genes through a 'BINDS_CbG' relationship having the license \"CC BY-NC 4.0\"?", "output": "MATCH (n:Compound)-[r:BINDS_CbG{license: \"CC BY-NC 4.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct names of Anatomy nodes that have a UPREGULATES_AuG relationship with Gene nodes, filtered by the source Bgee?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG{source: \"Bgee\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of compounds that have a BINDS_CbG relationship, with a CC BY-SA 3.0 license, to any gene?", "output": "MATCH (n:Compound)-[r:BINDS_CbG{license: \"CC BY-SA 3.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique disease identifiers appear in relationships categorized as \"LOCALIZES_DlA\" to anatomy nodes, with these relationships being licensed \"CC0 1.0\"?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{license: \"CC0 1.0\"}]->(m:Anatomy) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct names of anatomy nodes that have the \"EXPRESSES_AeG\" relationship with a gene, licensed as \"CC BY 4.0\"?", "output": "MATCH (n:Anatomy)-[r:EXPRESSES_AeG{license: \"CC BY 4.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find distinct identifiers for genes that participate in the COVARIES_GcG relationship with other genes, where the relationship source is ERC.", "output": "MATCH (n:Gene)-[r:COVARIES_GcG{source: \"ERC\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct identifiers of Anatomy nodes that have a relationship of expressing a Gene, where the license is \"CC BY 4.0\"?", "output": "MATCH (n:Anatomy)-[r:EXPRESSES_AeG{license: \"CC BY 4.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, identified uniquely by their identifier, participate in 'COVARIES_GcG' relationships as the first node with a 'source' property set to \"ERC\"?", "output": "MATCH (n:Gene)-[r:COVARIES_GcG{source: \"ERC\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes, identified by their unique identifiers, are connected to cellular components via the \"PARTICIPATES_GpCC\" relationship from the \"NCBI gene2go\" source?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{source: \"NCBI gene2go\"}]->(m:CellularComponent) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which disease identifiers are linked by a \"RESEMBLES_DrD\" relationship sourced from \"MEDLINE cooccurrence\" data?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD{source: \"MEDLINE cooccurrence\"}]->(m:Disease) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique genes are involved in a molecular function through the \"PARTICIPATES_GpMF\" relationship, with the condition that the license is \"CC BY 4.0\"?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpMF{license: \"CC BY 4.0\"}]->(m:MolecularFunction) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct disease identifiers exist in the database that have a \"LOCALIZES_DIA\" relationship with an anatomy node, and the license for this relationship is \"CC0 1.0\"?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{license: \"CC0 1.0\"}]->(m:Anatomy) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct diseases are linked to genes through \"ASSOCIATES_DaG\" relationships that have the \"CC BY 4.0\" license?", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG{license: \"CC BY 4.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What diseases, identified by unique codes, have a \"DOWNREGULATES_DdG\" relationship with genes sourced from STARGEO?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique disease identifiers connected to symptoms by the PRESENTS_DpS relationship, where the source is \"MEDLINE cooccurrence\"?", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS{source: \"MEDLINE cooccurrence\"}]->(m:Symptom) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of diseases that are linked to genes through the 'UPREGULATES_DuG' relationship, with the relationship's source specified as \"STARGEO\"?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of diseases that are linked to genes through the STARGEO source under the DOWNREGULATES_DdG relationship?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct names of genes are connected to molecular functions through a \"PARTICIPATES_GpMF\" relationship with a \"CC BY 4.0\" license?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpMF{license: \"CC BY 4.0\"}]->(m:MolecularFunction) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct identifiers of genes that regulate other genes through the REGULATES_GrG relationship from the \"LINCS L1000\" source?", "output": "MATCH (n:Gene)-[r:REGULATES_GrG{source: \"LINCS L1000\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique genes by their identifier that take part in pathways bearing a \"CC BY 3.0\" license.", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW{license: \"CC BY 3.0\"}]->(m:Pathway) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy nodes have distinct identifiers for their role in gene upregulation as derived from Bgee data?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG{source: \"Bgee\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique named compounds that are linked to another compound through a \"RESEMBLES_CrC\" relationship with a license term of \"CC0 1.0\".", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC{license: \"CC0 1.0\"}]->(m:Compound) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify all the unique compound identifiers that are linked to genes via a binding relationship marked by the \"CC BY-NC 4.0\" license.", "output": "MATCH (n:Compound)-[r:BINDS_CbG{license: \"CC BY-NC 4.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of diseases that have a CC0 1.0 licensed relationship where they upregulate a gene?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{license: \"CC0 1.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all unique disease names that have a \"UPREGULATES_DuG\" relationship with genes marked with a CC0 1.0 license?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{license: \"CC0 1.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the distinct identifiers for genes that are linked to cellular components through a relationship with the \"CC BY 4.0\" license?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{license: \"CC BY 4.0\"}]->(m:CellularComponent) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique names of genes involved in cellular components that have a \"CC BY 4.0\" relationship license.", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{license: \"CC BY 4.0\"}]->(m:CellularComponent) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct diseases that have a relationship to downregulate genes, based on the license CC0 1.0.", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG{license: \"CC0 1.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique gene identifiers are linked to molecular functions through the PARTICIPATES_GpMF relationship sourced from NCBI gene2go?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpMF{source: \"NCBI gene2go\"}]->(m:MolecularFunction) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the unique diseases that have the UPREGULATES_DuG relationship to genes, with this connection being licensed under CC0 1.0?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{license: \"CC0 1.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of diseases that have a relationship originating from the STARGEO source, which upregulates genes?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which gene identifiers are linked to biological processes through the PARTICIPATES_GpBP relationship from NCBI gene2go?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP{source: \"NCBI gene2go\"}]->(m:BiologicalProcess) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique compound identifiers are involved in \"palliates\" relationships with diseases, given that the license is CC0 1.0?", "output": "MATCH (n:Compound)-[r:PALLIATES_CpD{license: \"CC0 1.0\"}]->(m:Disease) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct disease identifiers exist in the database that have a gene association with the license type \"ODbL 1.0\"?", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG{license: \"ODbL 1.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique gene names involved in the \"COVARIES_GcG\" relationship, where the source attribute is specified as \"ERC\"?", "output": "MATCH (n:Gene)-[r:COVARIES_GcG{source: \"ERC\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique gene identifiers for genes that are associated with cellular components that have a \"CC BY 4.0\" license.", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{license: \"CC BY 4.0\"}]->(m:CellularComponent) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of the distinct genes that participate in the pathway identified by the URL \"http://www.wikipathways.org/instance/WP2858_r83015\"?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW{url: \"http://www.wikipathways.org/instance/WP2858_r83015\"}]->(m:Pathway) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the MEDLINE cooccurrence data, what are the names of diseases that are localized to anatomy nodes?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{source: \"MEDLINE cooccurrence\"}]->(m:Anatomy) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you identify the unique gene identifiers that are linked to another gene through a COVARIES_GcG relationship with the source labeled as ERC?", "output": "MATCH (n:Gene)-[r:COVARIES_GcG{source: \"ERC\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique identifiers belong to anatomy nodes that are responsible for upregulating genes via the Bgee dataset?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG{source: \"Bgee\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of diseases that downregulate genes and hold a \"CC0 1.0\" license for the downregulation relationship?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG{license: \"CC0 1.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct gene names that participate in any pathway with the specified license \"CC BY 4.0\"?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW{license: \"CC BY 4.0\"}]->(m:Pathway) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of distinct diseases that are associated with a resemblance relationship under the CC0 1.0 license?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD{license: \"CC0 1.0\"}]->(m:Disease) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct disease identifiers are connected to symptoms through relationships having the license type of CC0 1.0?", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS{license: \"CC0 1.0\"}]->(m:Symptom) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct names of compounds treat diseases according to the TREATS_CtD data from PharmacotherapyDB?", "output": "MATCH (n:Compound)-[r:TREATS_CtD{source: \"PharmacotherapyDB\"}]->(m:Disease) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique diseases are connected to anatomy nodes in the database through links verified by MEDLINE co-occurrence?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{source: \"MEDLINE cooccurrence\"}]->(m:Anatomy) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have identifiers that are uniquely associated with anatomy nodes via the 'LOCALIZES_DIA' link, specifically when the source of this association is MEDLINE co-occurrence?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{source: \"MEDLINE cooccurrence\"}]->(m:Anatomy) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct identifiers for diseases that have a relationship with genes labeled as \"UPREGULATES_DuG\" from the STARGEO dataset?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique names of anatomy entities that have a Bgee-sourced upregulation relationship with any gene?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG{source: \"Bgee\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct disease identifiers appear in relationships where they upregulate genes, based on information from STARGEO?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique disease identifiers are linked to upregulating genes, sourced from STARGEO?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique identifiers for anatomical nodes that have gene expression relationships licensed under \"CC BY 4.0\"?", "output": "MATCH (n:Anatomy)-[r:EXPRESSES_AeG{license: \"CC BY 4.0\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct compounds have a \"TREATS_CtD\" relationship with diseases, specifically those disclosed under the CC0 1.0 license?", "output": "MATCH (n:Compound)-[r:TREATS_CtD{license: \"CC0 1.0\"}]->(m:Disease) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which specific genes, identified by their unique identifiers, are linked to pathways that are licensed with \"CC BY 4.0\"?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW{license: \"CC BY 4.0\"}]->(m:Pathway) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct diseases have roles in the upregulation of genes with an \"UPREGULATES_DuG\" relationship under the CC0 1.0 licensing condition?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{license: \"CC0 1.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique compound names that have a binding relationship with genes, with the condition that the binding license is \"CC BY-SA 3.0\"?", "output": "MATCH (n:Compound)-[r:BINDS_CbG{license: \"CC BY-SA 3.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide a list of distinct compound identifiers that participate in a \"RESEMBLES_CrC\" relationship with a license of \"CC0 1.0\"?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC{license: \"CC0 1.0\"}]->(m:Compound) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What disease names are involved in relationships that upregulate genes and have a CC0 1.0 license?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{license: \"CC0 1.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve the distinct names of all pharmacologic classes that are related to compounds licensed as \"CC BY 4.0\"?", "output": "MATCH (n:PharmacologicClass)-[r:INCLUDES_PCiC{license: \"CC BY 4.0\"}]->(m:Compound) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct compound names that have a relationship labelled as \"UPREGULATES_CuG\" with genes, according to the \"LINCS L1000\" database?", "output": "MATCH (n:Compound)-[r:UPREGULATES_CuG{source: \"LINCS L1000\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list diseases which upregulate any gene via a CC0 1.0 license relationship?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{license: \"CC0 1.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct genes linked to cellular components according to the NCBI gene2go resource.", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{source: \"NCBI gene2go\"}]->(m:CellularComponent) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique disease identifiers are associated with anatomical locations based on MEDLINE cooccurrence?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{source: \"MEDLINE cooccurrence\"}]->(m:Anatomy) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the unique names of genes that have associations with molecular functions, where these associations are under the \"CC BY 4.0\" license.", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpMF{license: \"CC BY 4.0\"}]->(m:MolecularFunction) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct gene names involved in pathways according to information sourced from Reactome via Pathway Commons?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW{source: \"Reactome via Pathway Commons\"}]->(m:Pathway) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the unique identifiers of diseases that present symptoms with the condition of having a CC0 1.0 license?", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS{license: \"CC0 1.0\"}]->(m:Symptom) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the distinct identifiers of diseases which are linked to other diseases through the \"resembles\" relationship, specifically from the MEDLINE co-occurrence source?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD{source: \"MEDLINE cooccurrence\"}]->(m:Disease) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct identifiers of genes that are linked to cellular components through the NCBI gene2go source?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{source: \"NCBI gene2go\"}]->(m:CellularComponent) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have a unique association with genes where the relationship is marked with the \"CC BY 4.0\" license?", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG{license: \"CC BY 4.0\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct diseases are recorded in MEDLINE as localizing to anatomical areas according to cooccurrence data?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{source: \"MEDLINE cooccurrence\"}]->(m:Anatomy) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of diseases connected to anatomy nodes through CC0 1.0 licensed localization?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{license: \"CC0 1.0\"}]->(m:Anatomy) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound identifiers appear uniquely as the starting node in \"resembles\" relationships with a CC0 1.0 license to other compounds?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC{license: \"CC0 1.0\"}]->(m:Compound) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Find all the different compound names that participate in a resemblance relationship defined by \"Dice similarity of ECFPs.\"", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC{source: \"Dice similarity of ECFPs\"}]->(m:Compound) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the distinct diseases in the database that are known to upregulate genes, based on information from STARGEO.", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique disease names are mapped to anatomy based on the \"MEDLINE cooccurrence\" relationship?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{source: \"MEDLINE cooccurrence\"}]->(m:Anatomy) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct genes serve as regulators within the \"LINCS L1000\" source in the regulatory network?", "output": "MATCH (n:Gene)-[r:REGULATES_GrG{source: \"LINCS L1000\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique names of compounds that have a \"RESEMBLES_CrC\" connection with another compound, specifically those relationships that are licensed under \"CC0 1.0\"?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC{license: \"CC0 1.0\"}]->(m:Compound) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes that are associated with cellular components according to the \"NCBI gene2go\" source?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{source: \"NCBI gene2go\"}]->(m:CellularComponent) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the STARGEO dataset, what are the unique disease names responsible for gene downregulation?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which anatomy parts are known to downregulate gene expressions according to the Bgee database?", "output": "MATCH (n:Anatomy)-[r:DOWNREGULATES_AdG{source: \"Bgee\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What diseases, identified by their name, are connected to anatomical regions with a \"MEDLINE cooccurrence\" relationship?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA{source: \"MEDLINE cooccurrence\"}]->(m:Anatomy) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the names of compounds that have a CAUSES_CcSE relationship to a side effect with the specified URL \"http://sideeffects.embl.de/se/C0011603/\"?", "output": "MATCH (n:Compound)-[r:CAUSES_CcSE{url: \"http://sideeffects.embl.de/se/C0011603/\"}]->(m:SideEffect) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which genes are linked to cellular components through the NCBI gene2go data source?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{source: \"NCBI gene2go\"}]->(m:CellularComponent) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the various identifiers for genes that take part in cellular components based on the NCBI gene2go source?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{source: \"NCBI gene2go\"}]->(m:CellularComponent) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene identifiers participate in a biological process where the relationship is licensed under \"CC BY 4.0\"?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP{license: \"CC BY 4.0\"}]->(m:BiologicalProcess) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct names of compounds that have a palliative relationship with diseases according to the source \"PharmacotherapyDB\"?", "output": "MATCH (n:Compound)-[r:PALLIATES_CpD{source: \"PharmacotherapyDB\"}]->(m:Disease) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "From the STARGEO information, what are the unique diseases identified that result in gene downregulation?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG{source: \"STARGEO\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which compound names appear uniquely in the dataset where the compound resembles another based on the source \"Dice similarity of ECFPs\"?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC{source: \"Dice similarity of ECFPs\"}]->(m:Compound) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct anatomy names that have relationships indicating they downregulate genes according to the source \"Bgee\"?", "output": "MATCH (n:Anatomy)-[r:DOWNREGULATES_AdG{source: \"Bgee\"}]->(m:Gene) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique identifiers of genes that participate in a biological process with a \"CC BY 4.0\" license?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP{license: \"CC BY 4.0\"}]->(m:BiologicalProcess) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Retrieve the different gene identifiers that are linked to biological processes from the NCBI gene2go's perspective.", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP{source: \"NCBI gene2go\"}]->(m:BiologicalProcess) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What diseases are identified in association with symptoms based on data sourced from MEDLINE co-occurrence?", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS{source: \"MEDLINE cooccurrence\"}]->(m:Symptom) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct compound identifiers have a treatment relationship with diseases according to PharmacotherapyDB?", "output": "MATCH (n:Compound)-[r:TREATS_CtD{source: \"PharmacotherapyDB\"}]->(m:Disease) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique gene identifiers are involved with cellular components, as specified by the source \"NCBI gene2go\"?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC{source: \"NCBI gene2go\"}]->(m:CellularComponent) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the unique identifiers of compounds that have an 'upregulates' relationship with genes from the LINCS L1000 dataset.", "output": "MATCH (n:Compound)-[r:UPREGULATES_CuG{source: \"LINCS L1000\"}]->(m:Gene) RETURN DISTINCT n.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which diseases have unique names and are shown to resemble other diseases through a licensed relationship of CC0 1.0?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD{license: \"CC0 1.0\"}]->(m:Disease) RETURN DISTINCT n.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you find the distinct URLs from all the PARTICIPATES_GpPW relationships linking genes to pathways?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT r.url"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we retrieve the distinct z-score values for each relationship where a compound downregulates a gene?", "output": "MATCH (n:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN DISTINCT r.z_score"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct log2 fold change values of relationships where a disease upregulates a gene?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT r.log2_fold_change"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct similarity values for compounds that resemble each other according to the RESEMBLES_CrC relationship?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN DISTINCT r.similarity"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct unbiased values from the 'BINDS_CbG' relationship between compounds and genes?", "output": "MATCH (n:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you provide the distinct values of the license attribute for all relationships of type \"RESEMBLES_CrC\" between compounds?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique unbiased values can be found in the DOWNREGULATES_AdG relationships connecting anatomy and gene entities?", "output": "MATCH (n:Anatomy)-[r:DOWNREGULATES_AdG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique sources are present in the 'REGULATES_GrG' gene relationships?", "output": "MATCH (n:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique sources for the 'PARTICIPATES_GpPW' relationships between genes and pathways?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the varying z-score values for the 'UPREGULATES_CuG' relationship between compounds and genes?", "output": "MATCH (n:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT r.z_score"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique unbiased values found in the relationships labeled RESEMBLES_CrC between compounds?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique licenses for all 'DOWNREGULATES_DdG' relationships between diseases and genes?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all distinct sources for the 'DOWNREGULATES_DdG' connections between diseases and genes?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct methods are used in the regulatory relationships between genes as indicated by the REGULATES_GrG relationship?", "output": "MATCH (n:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN DISTINCT r.method"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you retrieve unique unbiased attributes for the PARTICIPATES_GpBP relationships connecting genes to biological processes?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct unbiased values of the 'UPREGULATES_CuG' relationships between compounds and genes in the database?", "output": "MATCH (n:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different licenses for the 'PARTICIPATES_GpPW' relationships from genes to pathways?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you identify the unique licenses of the 'TREATS_CtD' relationships between compounds and diseases?", "output": "MATCH (n:Compound)-[r:TREATS_CtD]->(m:Disease) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct licenses used in the 'PARTICIPATES_GpBP' relationships between genes and biological processes?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique `unbiased` attributes from the PARTICIPATES_GpPW relationships between nodes labeled as Gene and Pathway?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpPW]->(m:Pathway) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct subtypes of the 'REGULATES_GrG' relationships between genes in the database?", "output": "MATCH (n:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN DISTINCT r.subtypes"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different 'unbiased' values associated with the PARTICIPATES_GpCC relationships from genes to cellular components?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique licenses of the PRESENTS_DpS relationships between diseases and symptoms?", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different log2 fold change values extracted from the relation of disease downregulating gene expressions?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN DISTINCT r.log2_fold_change"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which URLs are uniquely linked to the 'BINDS_CbG' relationships between compounds and genes?", "output": "MATCH (n:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT r.urls"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which different sources exist for the PARTICIPATES_GpCC relationships between genes and cellular components?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique sources are associated with the 'UPREGULATES_DuG' relationship types connecting diseases to genes?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different sources from the 'EXPRESSES_AeG' relationships between anatomy and gene entities?", "output": "MATCH (n:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT r.sources"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different sources for the \"PALLIATES_CpD\" relationships connecting compounds to their corresponding diseases?", "output": "MATCH (n:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct licenses appear in the 'ASSOCIATES_DaG' relationships connecting diseases and genes in the database?", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the different sources of the 'INCLUDES_PCiC' relationships between pharmacologic classes and compounds?", "output": "MATCH (n:PharmacologicClass)-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the individual sources for the 'UPREGULATES_AuG' relationships between nodes labeled as Anatomy and Gene?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the different licenses found in the 'INCLUDES_PCiC' relationships linking pharmacologic classes to compounds?", "output": "MATCH (n:PharmacologicClass)-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique 'unbiased' attributes are associated with the 'UPREGULATES_DuG' relationship between diseases and genes?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique licenses associated with relationships where a disease upregulates a gene?", "output": "MATCH (n:Disease)-[r:UPREGULATES_DuG]->(m:Gene) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique information does the 'unbiased' attribute hold for each COVARIES_GcG relationship between genes?", "output": "MATCH (n:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique 'unbiased' values within the EXPRESS_AeG relationship between nodes labeled as 'Anatomy' and 'Gene'?", "output": "MATCH (n:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct 'unbiased' attributes in the 'RESEMBLES_DrD' relationships between diseases?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique unbiased values from the REGULATES_GrG relationships between Gene nodes?", "output": "MATCH (n:Gene)-[r:REGULATES_GrG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct origins of resemblance between diseases that are captured by the RESEMBLES_DrD relationship?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which different sources are associated with the 'PARTICIPATES_GpBP' links from genes to biological processes?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpBP]->(m:BiologicalProcess) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique source identifiers are found within the 'COVARIES_GcG' relationships between genes?", "output": "MATCH (n:Gene)-[r:COVARIES_GcG]->(m:Gene) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which licenses are uniquely found in the 'PARTICIPATES_GpMF' relationships between gene nodes and molecular functions?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct unbiased properties of the UPREGULATES_AuG relationships between anatomical entities and genes?", "output": "MATCH (n:Anatomy)-[r:UPREGULATES_AuG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list all the distinct unbiased values from the relationships where a compound downregulates a gene?", "output": "MATCH (n:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique unbiased properties are associated with the PARTICIPATES_GpMF interactions between genes and molecular functions?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpMF]->(m:MolecularFunction) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct methods used in the relationships where a compound downregulates a gene?", "output": "MATCH (n:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN DISTINCT r.method"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the unique license types for relationships where a compound is used to palliate a disease?", "output": "MATCH (n:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique sources are associated with the relationships labeled 'RESEMBLES_CrC' between any two compound nodes?", "output": "MATCH (n:Compound)-[r:RESEMBLES_CrC]->(m:Compound) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct unbiased data are associated with the relationships where diseases are downregulating genes?", "output": "MATCH (n:Disease)-[r:DOWNREGULATES_DdG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique sources of information exist for the Disease to Anatomy localization relationships in this dataset?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the separate license values from the relationships where compounds bind genes?", "output": "MATCH (n:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which distinct licenses can be found in the resemblance relationships between diseases?", "output": "MATCH (n:Disease)-[r:RESEMBLES_DrD]->(m:Disease) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique unbiased values are associated with relationships where a pharmacologic class includes a compound?", "output": "MATCH (n:PharmacologicClass)-[r:INCLUDES_PCiC]->(m:Compound) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct values exist under the 'unbiased' attribute for the relationships linking diseases to genes?", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct licenses are found on the relationships connecting genes to cellular components?", "output": "MATCH (n:Gene)-[r:PARTICIPATES_GpCC]->(m:CellularComponent) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct sources mentioned in the relationships between any disease and gene pairs?", "output": "MATCH (n:Disease)-[r:ASSOCIATES_DaG]->(m:Gene) RETURN DISTINCT r.sources"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique values does the unbiased property take on for each PRESENTS_DpS relationship between Disease nodes and Symptom nodes?", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Identify the set of unique PubMed IDs that document the binding interactions between compounds and genes.", "output": "MATCH (n:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT r.pubmed_ids"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique methods are used to describe the relationship where a Compound upregulates a Gene?", "output": "MATCH (n:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT r.method"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct origins of the PRESENTS_DpS relationships between Disease nodes and Symptom nodes in the graph?", "output": "MATCH (n:Disease)-[r:PRESENTS_DpS]->(m:Symptom) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct sources of relationships where a compound upregulates a gene?", "output": "MATCH (n:Compound)-[r:UPREGULATES_CuG]->(m:Gene) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the distinct licenses associated with the localization relationships between diseases and anatomical locations?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What unique unbiased values are present in the relationships where diseases localize to anatomical entities?", "output": "MATCH (n:Disease)-[r:LOCALIZES_DlA]->(m:Anatomy) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct actions are encoded by the relationships where compounds are linked to genes?", "output": "MATCH (n:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT r.actions"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which unique unbiased attributes exist for the relationships that show a compound's palliative effects on diseases?", "output": "MATCH (n:Compound)-[r:PALLIATES_CpD]->(m:Disease) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What distinct affinity values in nM are recorded for the bindings between compounds and genes?", "output": "MATCH (n:Compound)-[r:BINDS_CbG]->(m:Gene) RETURN DISTINCT r.affinity_nM"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Can you list the distinct unbiased values from the relationships where one gene interacts with another gene?", "output": "MATCH (n:Gene)-[r:INTERACTS_GiG]->(m:Gene) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which different licenses exist for the connections indicating that an anatomy expresses a particular gene?", "output": "MATCH (n:Anatomy)-[r:EXPRESSES_AeG]->(m:Gene) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you provide the various licenses related to the \"CAUSES_CcSE\" relationships from compounds to side effects?", "output": "MATCH (n:Compound)-[r:CAUSES_CcSE]->(m:SideEffect) RETURN DISTINCT r.license"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Which sources are responsible for compounds that downregulate genes, showing unique entries only?", "output": "MATCH (n:Compound)-[r:DOWNREGULATES_CdG]->(m:Gene) RETURN DISTINCT r.source"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the unique unbiased details from the \"CAUSES_CcSE\" relationships between compounds and side effects?", "output": "MATCH (n:Compound)-[r:CAUSES_CcSE]->(m:SideEffect) RETURN DISTINCT r.unbiased"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of diseases that have any kind of relationship with other diseases?", "output": "MATCH (n:Disease)-[r]-(m:Disease) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of compounds that are connected through any type of relationship?", "output": "MATCH (n:Compound)-[r]-(m:Compound) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can I find the identifiers of genes that have a relationship with other genes?", "output": "MATCH (n:Gene)-[r]-(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find the names of genes that share any type of relationship with other genes?", "output": "MATCH (n:Gene)-[r]-(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "Could you retrieve the names of diseases that have at least one kind of connection with other diseases?", "output": "MATCH (n:Disease)-[r]-(m:Disease) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers for every gene that has a relationship with another gene?", "output": "MATCH (n:Gene)-[r]-(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "What are the identifiers of genes that are connected by any type of relationship to other genes in the database?", "output": "MATCH (n:Gene)-[r]-(m:Gene) RETURN n.identifier, m.identifier"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find out which gene names are linked together through any type of relationship?", "output": "MATCH (n:Gene)-[r]-(m:Gene) RETURN n.name, m.name"}, {"instruction": "Convert the following natural language into Cypher query.", "input": "How can we find and list the names of genes that have any type of relationship with one another?", "output": "MATCH (n:Gene)-[r]-(m:Gene) RETURN n.name, m.name"}]